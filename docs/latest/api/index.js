Index.PACKAGES = {"neko.util" : [{"name" : "neko.util.Channel", "shortDescription" : "", "object" : "neko\/util\/Channel$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/Channel.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/Channel.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Channel) ⇒ Boolean, msg: ⇒ Any): Channel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Channel.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Channel) ⇒ Boolean): Channel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Channel.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Channel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Channel.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Channel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Channel.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Channel, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/Channel.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Channel, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/Channel.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toSimpleString", "tail" : "(): String", "member" : "neko.util.Channel.toSimpleString", "link" : "neko\/util\/Channel.html#toSimpleString:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.util.Channel.toString", "link" : "neko\/util\/Channel.html#toString():String", "kind" : "def"}, {"label" : "compare", "tail" : "(o: Channel): Int", "member" : "neko.util.Channel.compare", "link" : "neko\/util\/Channel.html#compare(o:neko.util.Channel):Int", "kind" : "def"}, {"label" : "pj", "tail" : ": PID", "member" : "neko.util.Channel.pj", "link" : "neko\/util\/Channel.html#pj:neko.PID", "kind" : "val"}, {"label" : "pi", "tail" : ": PID", "member" : "neko.util.Channel.pi", "link" : "neko\/util\/Channel.html#pi:neko.PID", "kind" : "val"}, {"member" : "neko.util.Channel#<init>", "error" : "unsupported entity"}, {"label" : "compareTo", "tail" : "(that: Channel): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/util\/Channel.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Channel): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/util\/Channel.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Channel): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/util\/Channel.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Channel): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/util\/Channel.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Channel): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/util\/Channel.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/Channel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/Channel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/Channel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/Channel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/Channel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/Channel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/Channel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Channel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Channel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Channel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/Channel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/Channel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/Channel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/Channel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/Channel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/Channel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/Channel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/Channel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(c: Channel): Option[(PID, PID)]", "member" : "neko.util.Channel.unapply", "link" : "neko\/util\/Channel$.html#unapply(c:neko.util.Channel):Option[(neko.PID,neko.PID)]", "kind" : "def"}, {"label" : "apply", "tail" : "(_pi: PID, _pj: PID): Channel", "member" : "neko.util.Channel.apply", "link" : "neko\/util\/Channel$.html#apply(_pi:neko.PID,_pj:neko.PID):neko.util.Channel", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/Channel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/Channel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/Channel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/Channel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/Channel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/Channel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/Channel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Channel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Channel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Channel$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/Channel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/Channel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/Channel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/Channel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/Channel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/Channel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/Channel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/Channel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/Channel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/util\/Channel.html", "kind" : "class"}, {"name" : "neko.util.ConsensusClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/ConsensusClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/ConsensusClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConsensusClient[A]) ⇒ Boolean, msg: ⇒ Any): ConsensusClient[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/ConsensusClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConsensusClient[A]) ⇒ Boolean): ConsensusClient[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/ConsensusClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConsensusClient[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/ConsensusClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConsensusClient[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/ConsensusClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConsensusClient[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/ConsensusClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConsensusClient[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/ConsensusClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "propose", "tail" : "(v: A): Unit", "member" : "neko.util.ConsensusClient.propose", "link" : "neko\/util\/ConsensusClient.html#propose(v:A):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/ConsensusClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/ConsensusClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/ConsensusClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/ConsensusClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/ConsensusClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/ConsensusClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/ConsensusClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/ConsensusClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/ConsensusClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/ConsensusClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/ConsensusClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/ConsensusClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/ConsensusClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/ConsensusClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/ConsensusClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/ConsensusClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/ConsensusClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/ConsensusClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/ConsensusClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/ConsensusClient$.html", "members_object" : [{"label" : "Decide", "tail" : "", "member" : "neko.util.ConsensusClient.Decide", "link" : "neko\/util\/ConsensusClient$.html#Decide[A]extendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Propose", "tail" : "", "member" : "neko.util.ConsensusClient.Propose", "link" : "neko\/util\/ConsensusClient$.html#Propose[A]extendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/ConsensusClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/ConsensusClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/ConsensusClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/ConsensusClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/ConsensusClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/ConsensusClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/ConsensusClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/ConsensusClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/ConsensusClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/ConsensusClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/ConsensusClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/ConsensusClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/ConsensusClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/ConsensusClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/ConsensusClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/ConsensusClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/ConsensusClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/ConsensusClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/ConsensusClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/ConsensusClient.html", "kind" : "trait"}, {"name" : "neko.util.DiffusingComputation", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/DiffusingComputation.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/DiffusingComputation.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DiffusingComputation) ⇒ Boolean, msg: ⇒ Any): DiffusingComputation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/DiffusingComputation.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DiffusingComputation) ⇒ Boolean): DiffusingComputation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/DiffusingComputation.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DiffusingComputation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/DiffusingComputation.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DiffusingComputation", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/DiffusingComputation.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DiffusingComputation, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/DiffusingComputation.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DiffusingComputation, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/DiffusingComputation.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "initiate", "tail" : "(): Unit", "member" : "neko.util.DiffusingComputation.initiate", "link" : "neko\/util\/DiffusingComputation.html#initiate():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/DiffusingComputation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/DiffusingComputation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/DiffusingComputation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/DiffusingComputation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/DiffusingComputation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/DiffusingComputation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/DiffusingComputation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/DiffusingComputation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/DiffusingComputation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/DiffusingComputation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/DiffusingComputation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/DiffusingComputation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/DiffusingComputation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/DiffusingComputation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/DiffusingComputation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/DiffusingComputation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/DiffusingComputation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/DiffusingComputation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/DiffusingComputation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/DiffusingComputation$.html", "members_object" : [{"label" : "Initiate", "tail" : "", "member" : "neko.util.DiffusingComputation.Initiate", "link" : "neko\/util\/DiffusingComputation$.html#Initiate", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/DiffusingComputation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/DiffusingComputation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/DiffusingComputation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/DiffusingComputation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/DiffusingComputation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/DiffusingComputation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/DiffusingComputation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/DiffusingComputation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/DiffusingComputation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/DiffusingComputation$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/DiffusingComputation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/DiffusingComputation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/DiffusingComputation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/DiffusingComputation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/DiffusingComputation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/DiffusingComputation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/DiffusingComputation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/DiffusingComputation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/DiffusingComputation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/DiffusingComputation.html", "kind" : "trait"}, {"name" : "neko.util.LeaderElectionClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/LeaderElectionClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/LeaderElectionClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LeaderElectionClient) ⇒ Boolean, msg: ⇒ Any): LeaderElectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LeaderElectionClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LeaderElectionClient) ⇒ Boolean): LeaderElectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LeaderElectionClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): LeaderElectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LeaderElectionClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): LeaderElectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LeaderElectionClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (LeaderElectionClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/LeaderElectionClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (LeaderElectionClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/LeaderElectionClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "candidate", "tail" : "(): Unit", "member" : "neko.util.LeaderElectionClient.candidate", "link" : "neko\/util\/LeaderElectionClient.html#candidate():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/LeaderElectionClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/LeaderElectionClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/LeaderElectionClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/LeaderElectionClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/LeaderElectionClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/LeaderElectionClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/LeaderElectionClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LeaderElectionClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LeaderElectionClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LeaderElectionClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/LeaderElectionClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/LeaderElectionClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/LeaderElectionClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/LeaderElectionClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/LeaderElectionClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/LeaderElectionClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/LeaderElectionClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/LeaderElectionClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/LeaderElectionClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/LeaderElectionClient$.html", "members_object" : [{"label" : "Elected", "tail" : "", "member" : "neko.util.LeaderElectionClient.Elected", "link" : "neko\/util\/LeaderElectionClient$.html#ElectedextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Candidate", "tail" : "", "member" : "neko.util.LeaderElectionClient.Candidate", "link" : "neko\/util\/LeaderElectionClient$.html#Candidate", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/LeaderElectionClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/LeaderElectionClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/LeaderElectionClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/LeaderElectionClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/LeaderElectionClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/LeaderElectionClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/LeaderElectionClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LeaderElectionClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LeaderElectionClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LeaderElectionClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/LeaderElectionClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/LeaderElectionClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/LeaderElectionClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/LeaderElectionClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/LeaderElectionClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/LeaderElectionClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/LeaderElectionClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/LeaderElectionClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/LeaderElectionClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/LeaderElectionClient.html", "kind" : "trait"}, {"name" : "neko.util.LogicalClock", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/LogicalClock.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/LogicalClock.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LogicalClock[T]) ⇒ Boolean, msg: ⇒ Any): LogicalClock[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LogicalClock.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LogicalClock[T]) ⇒ Boolean): LogicalClock[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LogicalClock.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): LogicalClock[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LogicalClock.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): LogicalClock[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/LogicalClock.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (LogicalClock[T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/LogicalClock.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (LogicalClock[T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/LogicalClock.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/LogicalClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/LogicalClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/LogicalClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/LogicalClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/LogicalClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/LogicalClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/LogicalClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LogicalClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LogicalClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/LogicalClock.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/LogicalClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/LogicalClock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/LogicalClock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/LogicalClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/LogicalClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/LogicalClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/LogicalClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/LogicalClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/LogicalClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "time", "tail" : "(): T", "member" : "neko.util.LogicalClock.time", "link" : "neko\/util\/LogicalClock.html#time:T", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "neko\/util\/LogicalClock.html", "kind" : "trait"}, {"name" : "neko.util.MutexClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/MutexClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/MutexClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MutexClient) ⇒ Boolean, msg: ⇒ Any): MutexClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/MutexClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MutexClient) ⇒ Boolean): MutexClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/MutexClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MutexClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/MutexClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MutexClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/MutexClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MutexClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/MutexClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MutexClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/MutexClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "release", "tail" : "(): Unit", "member" : "neko.util.MutexClient.release", "link" : "neko\/util\/MutexClient.html#release():Unit", "kind" : "def"}, {"label" : "request", "tail" : "(): Unit", "member" : "neko.util.MutexClient.request", "link" : "neko\/util\/MutexClient.html#request():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/MutexClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/MutexClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/MutexClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/MutexClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/MutexClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/MutexClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/MutexClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/MutexClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/MutexClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/MutexClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/MutexClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/MutexClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/MutexClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/MutexClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/MutexClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/MutexClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/MutexClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/MutexClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/MutexClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/MutexClient$.html", "members_object" : [{"label" : "Release", "tail" : "", "member" : "neko.util.MutexClient.Release", "link" : "neko\/util\/MutexClient$.html#Release", "kind" : "object"}, {"label" : "CanEnter", "tail" : "", "member" : "neko.util.MutexClient.CanEnter", "link" : "neko\/util\/MutexClient$.html#CanEnter", "kind" : "object"}, {"label" : "Request", "tail" : "", "member" : "neko.util.MutexClient.Request", "link" : "neko\/util\/MutexClient$.html#Request", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/MutexClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/MutexClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/MutexClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/MutexClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/MutexClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/MutexClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/MutexClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/MutexClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/MutexClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/MutexClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/MutexClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/MutexClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/MutexClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/MutexClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/MutexClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/MutexClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/MutexClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/MutexClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/MutexClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/MutexClient.html", "kind" : "trait"}, {"name" : "neko.util.SnapshotClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/SnapshotClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/SnapshotClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SnapshotClient) ⇒ Boolean, msg: ⇒ Any): SnapshotClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SnapshotClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SnapshotClient) ⇒ Boolean): SnapshotClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SnapshotClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SnapshotClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SnapshotClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SnapshotClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SnapshotClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SnapshotClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/SnapshotClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SnapshotClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/SnapshotClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "initiate", "tail" : "(): Unit", "member" : "neko.util.SnapshotClient.initiate", "link" : "neko\/util\/SnapshotClient.html#initiate():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/SnapshotClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/SnapshotClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/SnapshotClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/SnapshotClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/SnapshotClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/SnapshotClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/SnapshotClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SnapshotClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SnapshotClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SnapshotClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/SnapshotClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/SnapshotClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/SnapshotClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/SnapshotClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/SnapshotClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/SnapshotClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/SnapshotClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/SnapshotClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/SnapshotClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/SnapshotClient$.html", "members_object" : [{"label" : "SnapshotDone", "tail" : "", "member" : "neko.util.SnapshotClient.SnapshotDone", "link" : "neko\/util\/SnapshotClient$.html#SnapshotDoneextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "SaveState", "tail" : "", "member" : "neko.util.SnapshotClient.SaveState", "link" : "neko\/util\/SnapshotClient$.html#SaveState", "kind" : "object"}, {"label" : "Initiate", "tail" : "", "member" : "neko.util.SnapshotClient.Initiate", "link" : "neko\/util\/SnapshotClient$.html#Initiate", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/SnapshotClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/SnapshotClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/SnapshotClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/SnapshotClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/SnapshotClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/SnapshotClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/SnapshotClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SnapshotClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SnapshotClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SnapshotClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/SnapshotClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/SnapshotClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/SnapshotClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/SnapshotClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/SnapshotClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/SnapshotClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/SnapshotClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/SnapshotClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/SnapshotClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/SnapshotClient.html", "kind" : "trait"}, {"name" : "neko.util.SpanningTreeClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/SpanningTreeClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/SpanningTreeClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SpanningTreeClient) ⇒ Boolean, msg: ⇒ Any): SpanningTreeClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SpanningTreeClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SpanningTreeClient) ⇒ Boolean): SpanningTreeClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SpanningTreeClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SpanningTreeClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SpanningTreeClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SpanningTreeClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/SpanningTreeClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SpanningTreeClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/SpanningTreeClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SpanningTreeClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/SpanningTreeClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "initiate", "tail" : "(): Unit", "member" : "neko.util.SpanningTreeClient.initiate", "link" : "neko\/util\/SpanningTreeClient.html#initiate():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/SpanningTreeClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/SpanningTreeClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/SpanningTreeClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/SpanningTreeClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/SpanningTreeClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/SpanningTreeClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/SpanningTreeClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SpanningTreeClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SpanningTreeClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SpanningTreeClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/SpanningTreeClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/SpanningTreeClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/SpanningTreeClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/SpanningTreeClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/SpanningTreeClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/SpanningTreeClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/SpanningTreeClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/SpanningTreeClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/SpanningTreeClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/SpanningTreeClient$.html", "members_object" : [{"label" : "Done", "tail" : "", "member" : "neko.util.SpanningTreeClient.Done", "link" : "neko\/util\/SpanningTreeClient$.html#DoneextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Initiate", "tail" : "", "member" : "neko.util.SpanningTreeClient.Initiate", "link" : "neko\/util\/SpanningTreeClient$.html#Initiate", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/SpanningTreeClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/SpanningTreeClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/SpanningTreeClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/SpanningTreeClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/SpanningTreeClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/SpanningTreeClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/SpanningTreeClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SpanningTreeClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SpanningTreeClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/SpanningTreeClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/SpanningTreeClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/SpanningTreeClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/SpanningTreeClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/SpanningTreeClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/SpanningTreeClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/SpanningTreeClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/SpanningTreeClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/SpanningTreeClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/SpanningTreeClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/SpanningTreeClient.html", "kind" : "trait"}, {"name" : "neko.util.TerminationDetectionClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/TerminationDetectionClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/TerminationDetectionClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TerminationDetectionClient) ⇒ Boolean, msg: ⇒ Any): TerminationDetectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TerminationDetectionClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TerminationDetectionClient) ⇒ Boolean): TerminationDetectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TerminationDetectionClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TerminationDetectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TerminationDetectionClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TerminationDetectionClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TerminationDetectionClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TerminationDetectionClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/TerminationDetectionClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TerminationDetectionClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/TerminationDetectionClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "becomePassive", "tail" : "(): Unit", "member" : "neko.util.TerminationDetectionClient.becomePassive", "link" : "neko\/util\/TerminationDetectionClient.html#becomePassive():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/TerminationDetectionClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/TerminationDetectionClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/TerminationDetectionClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/TerminationDetectionClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/TerminationDetectionClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/TerminationDetectionClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/TerminationDetectionClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TerminationDetectionClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TerminationDetectionClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TerminationDetectionClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/TerminationDetectionClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/TerminationDetectionClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/TerminationDetectionClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/TerminationDetectionClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/TerminationDetectionClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/TerminationDetectionClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/TerminationDetectionClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/TerminationDetectionClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/TerminationDetectionClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/TerminationDetectionClient$.html", "members_object" : [{"label" : "BecomePassive", "tail" : "", "member" : "neko.util.TerminationDetectionClient.BecomePassive", "link" : "neko\/util\/TerminationDetectionClient$.html#BecomePassive", "kind" : "object"}, {"label" : "Terminate", "tail" : "", "member" : "neko.util.TerminationDetectionClient.Terminate", "link" : "neko\/util\/TerminationDetectionClient$.html#Terminate", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/TerminationDetectionClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/TerminationDetectionClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/TerminationDetectionClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/TerminationDetectionClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/TerminationDetectionClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/TerminationDetectionClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/TerminationDetectionClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TerminationDetectionClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TerminationDetectionClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TerminationDetectionClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/TerminationDetectionClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/TerminationDetectionClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/TerminationDetectionClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/TerminationDetectionClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/TerminationDetectionClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/TerminationDetectionClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/TerminationDetectionClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/TerminationDetectionClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/TerminationDetectionClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/TerminationDetectionClient.html", "kind" : "trait"}, {"name" : "neko.util.Time", "shortDescription" : "type-safe representation of time in ScalaNeko.", "object" : "neko\/util\/Time$.html", "members_object" : [{"label" : "formatTimeSeconds", "tail" : "(time: Time): String", "member" : "neko.util.Time.formatTimeSeconds", "link" : "neko\/util\/Time$.html#formatTimeSeconds(time:neko.util.Time):String", "kind" : "def"}, {"label" : "formatTime", "tail" : "(time: Time, unit: Time, round: Time): String", "member" : "neko.util.Time.formatTime", "link" : "neko\/util\/Time$.html#formatTime(time:neko.util.Time,unit:neko.util.Time,round:neko.util.Time):String", "kind" : "def"}, {"label" : "SECOND", "tail" : ": Long", "member" : "neko.util.Time.SECOND", "link" : "neko\/util\/Time$.html#SECOND:Long", "kind" : "val"}, {"label" : "MILLISECOND", "tail" : ": Long", "member" : "neko.util.Time.MILLISECOND", "link" : "neko\/util\/Time$.html#MILLISECOND:Long", "kind" : "val"}, {"label" : "MICROSECOND", "tail" : ": Long", "member" : "neko.util.Time.MICROSECOND", "link" : "neko\/util\/Time$.html#MICROSECOND:Long", "kind" : "val"}, {"label" : "NANOSECOND", "tail" : ": Long", "member" : "neko.util.Time.NANOSECOND", "link" : "neko\/util\/Time$.html#NANOSECOND:Long", "kind" : "val"}, {"label" : "second", "tail" : ": Time", "member" : "neko.util.Time.second", "link" : "neko\/util\/Time$.html#second:neko.util.Time", "kind" : "val"}, {"label" : "millisecond", "tail" : ": Time", "member" : "neko.util.Time.millisecond", "link" : "neko\/util\/Time$.html#millisecond:neko.util.Time", "kind" : "val"}, {"label" : "microsecond", "tail" : ": Time", "member" : "neko.util.Time.microsecond", "link" : "neko\/util\/Time$.html#microsecond:neko.util.Time", "kind" : "val"}, {"label" : "nanosecond", "tail" : ": Time", "member" : "neko.util.Time.nanosecond", "link" : "neko\/util\/Time$.html#nanosecond:neko.util.Time", "kind" : "val"}, {"label" : "ZERO", "tail" : ": Time", "member" : "neko.util.Time.ZERO", "link" : "neko\/util\/Time$.html#ZERO:neko.util.Time", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/Time$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/Time$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/Time$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/Time$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/Time$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/Time$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/Time$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Time$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Time$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Time$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/Time$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/Time$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/Time$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/Time$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/Time$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/Time$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/Time$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/Time$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/Time$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/Time.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Time) ⇒ Boolean, msg: ⇒ Any): Time", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Time.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Time) ⇒ Boolean): Time", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Time.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Time", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Time.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Time", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Time.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Time, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/Time.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Time, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/Time.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toDuration", "tail" : "(): Duration", "member" : "neko.util.Time.toDuration", "link" : "neko\/util\/Time.html#toDuration:scala.concurrent.duration.Duration", "kind" : "def"}, {"label" : "asSeconds", "tail" : "(): String", "member" : "neko.util.Time.asSeconds", "link" : "neko\/util\/Time.html#asSeconds:String", "kind" : "def"}, {"label" : "asNanoseconds", "tail" : "(): String", "member" : "neko.util.Time.asNanoseconds", "link" : "neko\/util\/Time.html#asNanoseconds:String", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Long) ⇒ Long): Time", "member" : "neko.util.Time.map", "link" : "neko\/util\/Time.html#map(f:Long=>Long):neko.util.Time", "kind" : "def"}, {"label" : "map2", "tail" : "(that: Time)(f: (Long, Long) ⇒ Long): Time", "member" : "neko.util.Time.map2", "link" : "neko\/util\/Time.html#map2(that:neko.util.Time)(f:(Long,Long)=>Long):neko.util.Time", "kind" : "def"}, {"label" : "combine", "tail" : "(that: Time)(f: (Long, Long) ⇒ A): A", "member" : "neko.util.Time.combine", "link" : "neko\/util\/Time.html#combine[A](that:neko.util.Time)(f:(Long,Long)=>A):A", "kind" : "def"}, {"label" : "max", "tail" : "(that: Time): Time", "member" : "neko.util.Time.max", "link" : "neko\/util\/Time.html#max(that:neko.util.Time):neko.util.Time", "kind" : "def"}, {"label" : "min", "tail" : "(that: Time): Time", "member" : "neko.util.Time.min", "link" : "neko\/util\/Time.html#min(that:neko.util.Time):neko.util.Time", "kind" : "def"}, {"label" : "after", "tail" : "(that: Time): Boolean", "member" : "neko.util.Time.after", "link" : "neko\/util\/Time.html#after(that:neko.util.Time):Boolean", "kind" : "def"}, {"label" : "before", "tail" : "(that: Time): Boolean", "member" : "neko.util.Time.before", "link" : "neko\/util\/Time.html#before(that:neko.util.Time):Boolean", "kind" : "def"}, {"label" : "pred", "tail" : "(): Time", "member" : "neko.util.Time.pred", "link" : "neko\/util\/Time.html#pred:neko.util.Time", "kind" : "def"}, {"label" : "succ", "tail" : "(): Time", "member" : "neko.util.Time.succ", "link" : "neko\/util\/Time.html#succ:neko.util.Time", "kind" : "def"}, {"label" : "compare", "tail" : "(that: Time): Int", "member" : "neko.util.Time.compare", "link" : "neko\/util\/Time.html#compare(that:neko.util.Time):Int", "kind" : "def"}, {"label" : "*", "tail" : "(factor: Double): Time", "member" : "neko.util.Time.*", "link" : "neko\/util\/Time.html#*(factor:Double):neko.util.Time", "kind" : "def"}, {"label" : "*", "tail" : "(factor: Long): Time", "member" : "neko.util.Time.*", "link" : "neko\/util\/Time.html#*(factor:Long):neko.util.Time", "kind" : "def"}, {"label" : "\/", "tail" : "(divisor: Double): Time", "member" : "neko.util.Time.\/", "link" : "neko\/util\/Time.html#\/(divisor:Double):neko.util.Time", "kind" : "def"}, {"label" : "\/", "tail" : "(divisor: Long): Time", "member" : "neko.util.Time.\/", "link" : "neko\/util\/Time.html#\/(divisor:Long):neko.util.Time", "kind" : "def"}, {"label" : "\/", "tail" : "(that: Time): Long", "member" : "neko.util.Time.\/", "link" : "neko\/util\/Time.html#\/(that:neko.util.Time):Long", "kind" : "def"}, {"label" : "-", "tail" : "(that: Time): Time", "member" : "neko.util.Time.-", "link" : "neko\/util\/Time.html#-(that:neko.util.Time):neko.util.Time", "kind" : "def"}, {"label" : "+", "tail" : "(that: Time): Time", "member" : "neko.util.Time.+", "link" : "neko\/util\/Time.html#+(that:neko.util.Time):neko.util.Time", "kind" : "def"}, {"member" : "neko.util.Time#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Long", "member" : "neko.util.Time.value", "link" : "neko\/util\/Time.html#value:Long", "kind" : "val"}, {"label" : "compareTo", "tail" : "(that: Time): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/util\/Time.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Time): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/util\/Time.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Time): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/util\/Time.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Time): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/util\/Time.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Time): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/util\/Time.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/Time.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/Time.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/Time.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/Time.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/Time.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/Time.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/Time.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Time.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Time.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Time.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/Time.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/Time.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/Time.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/Time.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/Time.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/Time.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/util\/Time.html", "kind" : "case class"}, {"name" : "neko.util.Topology", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/Topology.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/Topology.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Topology) ⇒ Boolean, msg: ⇒ Any): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Topology.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Topology) ⇒ Boolean): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Topology.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Topology.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/Topology.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Topology, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/Topology.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Topology, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/Topology.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toDotString", "tail" : "(): String", "member" : "neko.util.Topology.toDotString", "link" : "neko\/util\/Topology.html#toDotString:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/Topology.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/Topology.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/Topology.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/Topology.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/Topology.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/Topology.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/Topology.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Topology.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Topology.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Topology.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/Topology.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/Topology.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/Topology.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/Topology.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/Topology.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/Topology.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/Topology.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/Topology.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/Topology.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "neighborhood", "tail" : "(): Set[Int]", "member" : "neko.util.Topology.neighborhood", "link" : "neko\/util\/Topology.html#neighborhood:Set[Int]", "kind" : "abstract def"}, {"label" : "topology", "tail" : "(): Graph[Int, UnDiEdge]", "member" : "neko.util.Topology.topology", "link" : "neko\/util\/Topology.html#topology:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "neko\/util\/Topology$.html", "members_object" : [{"label" : "Grid", "tail" : "", "member" : "neko.util.Topology.Grid", "link" : "neko\/util\/Topology$.html#Grid", "kind" : "object"}, {"label" : "GeometricRandom", "tail" : "", "member" : "neko.util.Topology.GeometricRandom", "link" : "neko\/util\/Topology$.html#GeometricRandom", "kind" : "object"}, {"label" : "Random", "tail" : "", "member" : "neko.util.Topology.Random", "link" : "neko\/util\/Topology$.html#Random", "kind" : "object"}, {"label" : "Clique", "tail" : "", "member" : "neko.util.Topology.Clique", "link" : "neko\/util\/Topology$.html#Clique", "kind" : "object"}, {"label" : "DirectedRing", "tail" : "", "member" : "neko.util.Topology.DirectedRing", "link" : "neko\/util\/Topology$.html#DirectedRing", "kind" : "object"}, {"label" : "Ring", "tail" : "", "member" : "neko.util.Topology.Ring", "link" : "neko\/util\/Topology$.html#Ring", "kind" : "object"}, {"label" : "toDotString", "tail" : "(g: Graph[Int, UnDiEdge]): String", "member" : "neko.util.Topology.toDotString", "link" : "neko\/util\/Topology$.html#toDotString(g:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/Topology$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/Topology$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/Topology$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/Topology$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/Topology$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/Topology$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/Topology$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Topology$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Topology$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/Topology$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/Topology$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/Topology$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/Topology$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/Topology$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/Topology$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/Topology$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/Topology$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/Topology$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/Topology$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/Topology.html", "kind" : "trait"}, {"name" : "neko.util.TraversalClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/TraversalClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/TraversalClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TraversalClient) ⇒ Boolean, msg: ⇒ Any): TraversalClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TraversalClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TraversalClient) ⇒ Boolean): TraversalClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TraversalClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TraversalClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TraversalClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TraversalClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/TraversalClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TraversalClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/TraversalClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TraversalClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/TraversalClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "initiate", "tail" : "(): Unit", "member" : "neko.util.TraversalClient.initiate", "link" : "neko\/util\/TraversalClient.html#initiate():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/TraversalClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/TraversalClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/TraversalClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/TraversalClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/TraversalClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/TraversalClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/TraversalClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TraversalClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TraversalClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TraversalClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/TraversalClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/TraversalClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/TraversalClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/TraversalClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/TraversalClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/TraversalClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/TraversalClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/TraversalClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/TraversalClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/TraversalClient$.html", "members_object" : [{"label" : "Done", "tail" : "", "member" : "neko.util.TraversalClient.Done", "link" : "neko\/util\/TraversalClient$.html#Done", "kind" : "object"}, {"label" : "Visit", "tail" : "", "member" : "neko.util.TraversalClient.Visit", "link" : "neko\/util\/TraversalClient$.html#Visit", "kind" : "object"}, {"label" : "Initiate", "tail" : "", "member" : "neko.util.TraversalClient.Initiate", "link" : "neko\/util\/TraversalClient$.html#Initiate", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/TraversalClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/TraversalClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/TraversalClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/TraversalClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/TraversalClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/TraversalClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/TraversalClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TraversalClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TraversalClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/TraversalClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/TraversalClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/TraversalClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/TraversalClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/TraversalClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/TraversalClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/TraversalClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/TraversalClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/TraversalClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/TraversalClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/TraversalClient.html", "kind" : "trait"}, {"name" : "neko.util.WaveClient", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/util\/WaveClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/util\/WaveClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WaveClient) ⇒ Boolean, msg: ⇒ Any): WaveClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/WaveClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WaveClient) ⇒ Boolean): WaveClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/WaveClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): WaveClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/WaveClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): WaveClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/util\/WaveClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (WaveClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/util\/WaveClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (WaveClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/util\/WaveClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "initiate", "tail" : "(): Unit", "member" : "neko.util.WaveClient.initiate", "link" : "neko\/util\/WaveClient.html#initiate():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/WaveClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/WaveClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/WaveClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/WaveClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/WaveClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/WaveClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/WaveClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/WaveClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/WaveClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/WaveClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/WaveClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/WaveClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/WaveClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/WaveClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/WaveClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/WaveClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/WaveClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/WaveClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/WaveClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/util\/WaveClient$.html", "members_object" : [{"label" : "Done", "tail" : "", "member" : "neko.util.WaveClient.Done", "link" : "neko\/util\/WaveClient$.html#Done", "kind" : "object"}, {"label" : "Visit", "tail" : "", "member" : "neko.util.WaveClient.Visit", "link" : "neko\/util\/WaveClient$.html#VisitextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Initiate", "tail" : "", "member" : "neko.util.WaveClient.Initiate", "link" : "neko\/util\/WaveClient$.html#Initiate", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/util\/WaveClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/util\/WaveClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/util\/WaveClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/util\/WaveClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/util\/WaveClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/util\/WaveClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/util\/WaveClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/WaveClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/WaveClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/util\/WaveClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/util\/WaveClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/util\/WaveClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/util\/WaveClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/util\/WaveClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/util\/WaveClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/util\/WaveClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/util\/WaveClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/util\/WaveClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/util\/WaveClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/util\/WaveClient.html", "kind" : "trait"}], "neko" : [{"name" : "neko.ActiveProtocol", "shortDescription" : "Basic class for defining active protocols; those typically at the top of the protocol stack.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ActiveProtocol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ActiveProtocol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActiveProtocol) ⇒ Boolean, msg: ⇒ Any): ActiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ActiveProtocol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActiveProtocol) ⇒ Boolean): ActiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ActiveProtocol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ActiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ActiveProtocol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ActiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ActiveProtocol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ActiveProtocol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ActiveProtocol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ActiveProtocol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ActiveProtocol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ActiveProtocol.setTrace", "link" : "neko\/ActiveProtocol.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ActiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ActiveProtocol.SEND", "link" : "neko\/ActiveProtocol.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "sleep", "tail" : "(duration: Time): Unit", "member" : "neko.ActiveProtocol.sleep", "link" : "neko\/ActiveProtocol.html#sleep(duration:neko.util.Time):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(withTimeout: Time): Option[Event]", "member" : "neko.ActiveProtocol.receive", "link" : "neko\/ActiveProtocol.html#receive(withTimeout:neko.util.Time):Option[neko.Event]", "kind" : "def"}, {"label" : "receive", "tail" : "(): Event", "member" : "neko.ActiveProtocol.receive", "link" : "neko\/ActiveProtocol.html#receive():neko.Event", "kind" : "def"}, {"label" : "hasPendingMessages", "tail" : "(): Boolean", "member" : "neko.ActiveProtocol.hasPendingMessages", "link" : "neko\/ActiveProtocol.html#hasPendingMessages:Boolean", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.ActiveProtocol.onReceive", "link" : "neko\/ActiveProtocol.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "deliver", "tail" : "(event: Event): Unit", "member" : "neko.ActiveProtocol.deliver", "link" : "neko\/ActiveProtocol.html#deliver(event:neko.Event):Unit", "kind" : "def"}, {"label" : "RECEIVE", "tail" : "(withTimeout: Time): Event", "member" : "neko.ActiveProtocol.RECEIVE", "link" : "neko\/ActiveProtocol.html#RECEIVE(withTimeout:neko.util.Time):neko.Event", "kind" : "def"}, {"label" : "RECEIVE", "tail" : "(): Event", "member" : "neko.ActiveProtocol.RECEIVE", "link" : "neko\/ActiveProtocol.html#RECEIVE():neko.Event", "kind" : "def"}, {"label" : "Receive", "tail" : "", "member" : "neko.ActiveProtocol.Receive", "link" : "neko\/ActiveProtocol.html#Receive", "kind" : "object"}, {"member" : "neko.ActiveProtocol#<init>", "error" : "unsupported entity"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/ActiveProtocol.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/ActiveProtocol.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/ActiveProtocol.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/ActiveProtocol.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.start", "link" : "neko\/ActiveProtocol.html#start():Unit", "kind" : "final def"}, {"label" : "willFinish", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.willFinish", "link" : "neko\/ActiveProtocol.html#willFinish():Unit", "kind" : "def"}, {"label" : "willWait", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.willWait", "link" : "neko\/ActiveProtocol.html#willWait():Unit", "kind" : "def"}, {"label" : "activityID", "tail" : ": ActivityID", "member" : "neko.kernel.ManagedActivity.activityID", "link" : "neko\/ActiveProtocol.html#activityID:neko.kernel.ActivityID", "kind" : "val"}, {"label" : "activityManager", "tail" : ": ActivityManager", "member" : "neko.kernel.ManagedActivity.activityManager", "link" : "neko\/ActiveProtocol.html#activityManager:neko.kernel.ActivityManager", "kind" : "val"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/ActiveProtocol.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/ActiveProtocol.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/ActiveProtocol.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/ActiveProtocol.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/ActiveProtocol.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/ActiveProtocol.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/ActiveProtocol.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/ActiveProtocol.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/ActiveProtocol.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/ActiveProtocol.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/ActiveProtocol.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/ActiveProtocol.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/ActiveProtocol.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/ActiveProtocol.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/ActiveProtocol.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/ActiveProtocol.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/ActiveProtocol.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/ActiveProtocol.html#onShutdown():Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.Protocol.onFinish", "link" : "neko\/ActiveProtocol.html#onFinish():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/ActiveProtocol.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/ActiveProtocol.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/ActiveProtocol.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/ActiveProtocol.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ActiveProtocol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ActiveProtocol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ActiveProtocol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ActiveProtocol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ActiveProtocol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ActiveProtocol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ActiveProtocol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ActiveProtocol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ActiveProtocol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ActiveProtocol.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ActiveProtocol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ActiveProtocol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ActiveProtocol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ActiveProtocol.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ActiveProtocol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ActiveProtocol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ActiveProtocol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ActiveProtocol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(): Unit", "member" : "java.lang.Runnable.run", "link" : "neko\/ActiveProtocol.html#run():Unit", "kind" : "abstract def"}], "class" : "neko\/ActiveProtocol.html", "kind" : "class"}, {"name" : "neko.BroadcastMessage", "shortDescription" : "Base class to define a new broadcast message.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/BroadcastMessage.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/BroadcastMessage.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BroadcastMessage) ⇒ Boolean, msg: ⇒ Any): BroadcastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/BroadcastMessage.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BroadcastMessage) ⇒ Boolean): BroadcastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/BroadcastMessage.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BroadcastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/BroadcastMessage.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BroadcastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/BroadcastMessage.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BroadcastMessage, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/BroadcastMessage.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BroadcastMessage, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/BroadcastMessage.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "destinations", "tail" : "(): Set[PID]", "member" : "neko.BroadcastMessage.destinations", "link" : "neko\/BroadcastMessage.html#destinations:scala.collection.immutable.Set[neko.PID]", "kind" : "def"}, {"label" : "id", "tail" : ": MessageID", "member" : "neko.BroadcastMessage.id", "link" : "neko\/BroadcastMessage.html#id:neko.MessageID", "kind" : "val"}, {"member" : "neko.BroadcastMessage#<init>", "error" : "unsupported entity"}, {"label" : "toPrettyString", "tail" : ": String", "member" : "neko.Message.toPrettyString", "link" : "neko\/BroadcastMessage.html#toPrettyString:String", "kind" : "lazy val"}, {"label" : "IDType", "tail" : "", "member" : "neko.Message.IDType", "link" : "neko\/BroadcastMessage.html#IDType=neko.MessageID", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/BroadcastMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/BroadcastMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/BroadcastMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/BroadcastMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/BroadcastMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/BroadcastMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/BroadcastMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/BroadcastMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/BroadcastMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/BroadcastMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/BroadcastMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/BroadcastMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/BroadcastMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/BroadcastMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/BroadcastMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/BroadcastMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/BroadcastMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/BroadcastMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/BroadcastMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "from", "tail" : "(): PID", "member" : "neko.Message.from", "link" : "neko\/BroadcastMessage.html#from:neko.PID", "kind" : "abstract def"}], "class" : "neko\/BroadcastMessage.html", "kind" : "class"}, {"name" : "neko.Event", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Event.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Event.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Event) ⇒ Boolean, msg: ⇒ Any): Event", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Event.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Event) ⇒ Boolean): Event", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Event.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Event", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Event.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Event", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Event.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Event, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Event.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Event, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Event.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Event.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Event.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Event.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Event.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Event.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Event.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Event.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Event.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Event.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Event.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Event.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Event.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Event.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Event.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Event.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Event.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Event.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Event.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Event.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toPrettyString", "tail" : "(): String", "member" : "neko.Event.toPrettyString", "link" : "neko\/Event.html#toPrettyString:String", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): IDType", "member" : "neko.Event.id", "link" : "neko\/Event.html#id:Event.this.IDType", "kind" : "abstract def"}, {"member" : "neko.Event.IDType", "error" : "unsupported entity"}], "shortDescription" : "Basic trait to define all processable events in ScalaNeko.", "trait" : "neko\/Event.html", "kind" : "trait"}, {"name" : "neko.ID", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ID[T]) ⇒ Boolean, msg: ⇒ Any): ID[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ID[T]) ⇒ Boolean): ID[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ID[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ID[T]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ID[T], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ID[T], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "map2", "tail" : "(that: ID[B])(f: (T, B) ⇒ T): SameType", "member" : "neko.ID.map2", "link" : "neko\/ID.html#map2[B<:T](that:neko.ID[B])(f:(T,B)=>T):ID.this.SameType", "kind" : "def"}, {"label" : "map", "tail" : "(f: (T) ⇒ T): SameType", "member" : "neko.ID.map", "link" : "neko\/ID.html#map(f:T=>T):ID.this.SameType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ID.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/ID.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ID.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ID.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ID.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "idWith", "tail" : "(newID: T): SameType", "member" : "neko.ID.idWith", "link" : "neko\/ID.html#idWith(newID:T):ID.this.SameType", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.ID.name", "link" : "neko\/ID.html#name:String", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): T", "member" : "neko.ID.value", "link" : "neko\/ID.html#value:T", "kind" : "abstract def"}, {"member" : "neko.ID.SameType", "error" : "unsupported entity"}], "shortDescription" : "Generic type to represent all kinds of identifiers in ScalaNeko.", "trait" : "neko\/ID.html", "kind" : "trait"}, {"name" : "neko.Listener", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Listener.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Listener.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Listener) ⇒ Boolean, msg: ⇒ Any): Listener", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Listener.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Listener) ⇒ Boolean): Listener", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Listener.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Listener", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Listener.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Listener", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Listener.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Listener, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Listener.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Listener, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Listener.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Listener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Listener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Listener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Listener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Listener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Listener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Listener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Listener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Listener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Listener.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Listener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Listener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Listener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Listener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Listener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Listener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Listener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Listener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Listener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.Listener.listenTo", "link" : "neko\/Listener.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "abstract def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.Receiver.deliver", "link" : "neko\/Listener.html#deliver(m:neko.Event):Unit", "kind" : "abstract def"}], "shortDescription" : "declares that the protocol implementing the trait is able to \"listen\" to messages.", "trait" : "neko\/Listener.html", "kind" : "trait"}, {"name" : "neko.ListenerUtils", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ListenerUtils.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ListenerUtils.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListenerUtils) ⇒ Boolean, msg: ⇒ Any): ListenerUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ListenerUtils.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListenerUtils) ⇒ Boolean): ListenerUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ListenerUtils.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ListenerUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ListenerUtils.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ListenerUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ListenerUtils.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ListenerUtils, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ListenerUtils.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ListenerUtils, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ListenerUtils.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/ListenerUtils.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ListenerUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ListenerUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ListenerUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ListenerUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ListenerUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ListenerUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ListenerUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ListenerUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ListenerUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ListenerUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ListenerUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ListenerUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/ListenerUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ListenerUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ListenerUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ListenerUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ListenerUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ListenerUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ListenerUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.Receiver.deliver", "link" : "neko\/ListenerUtils.html#deliver(m:neko.Event):Unit", "kind" : "abstract def"}], "shortDescription" : "mixin trait to provide support to listening to a message type.", "trait" : "neko\/ListenerUtils.html", "kind" : "trait"}, {"name" : "neko.Main", "shortDescription" : "Basic class used to define the system.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Main.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Main.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Main) ⇒ Boolean, msg: ⇒ Any): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Main.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Main) ⇒ Boolean): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Main.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Main.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Main", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Main.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Main, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Main.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Main, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Main.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "neko.Main.main", "link" : "neko\/Main.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "neko.Main.args", "link" : "neko\/Main.html#args:Array[String]", "kind" : "final def"}, {"label" : "logger", "tail" : ": Logger", "member" : "neko.Main.logger", "link" : "neko\/Main.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "topoFactory", "tail" : ": TopologyFactory", "member" : "neko.Main.topoFactory", "link" : "neko\/Main.html#topoFactory:neko.topology.TopologyFactory", "kind" : "val"}, {"label" : "N", "tail" : "(): Int", "member" : "neko.Main.N", "link" : "neko\/Main.html#N:Int", "kind" : "def"}, {"member" : "neko.Main#<init>", "error" : "unsupported entity"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.Main.topology", "link" : "neko\/Main.html#topology:neko.topology.Topology", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Main.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Main.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Main.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Main.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Main.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Main.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Main.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Main.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Main.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Main.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Main.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Main.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Main.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Main.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Main.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Main.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Main.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Main.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Main.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/Main.html", "kind" : "class"}, {"name" : "neko.Message", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Message.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Message.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Message) ⇒ Boolean, msg: ⇒ Any): Message", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Message.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Message) ⇒ Boolean): Message", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Message.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Message", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Message.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Message", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Message.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Message, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Message.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Message, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Message.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toPrettyString", "tail" : ": String", "member" : "neko.Message.toPrettyString", "link" : "neko\/Message.html#toPrettyString:String", "kind" : "lazy val"}, {"label" : "IDType", "tail" : "", "member" : "neko.Message.IDType", "link" : "neko\/Message.html#IDType=neko.MessageID", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Message.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Message.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Message.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Message.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Message.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Message.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Message.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Message.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Message.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Message.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Message.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Message.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Message.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Message.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Message.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Message.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Message.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Message.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Message.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "destinations", "tail" : "(): Set[PID]", "member" : "neko.Message.destinations", "link" : "neko\/Message.html#destinations:Set[neko.PID]", "kind" : "abstract def"}, {"label" : "from", "tail" : "(): PID", "member" : "neko.Message.from", "link" : "neko\/Message.html#from:neko.PID", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): MessageID", "member" : "neko.Message.id", "link" : "neko\/Message.html#id:neko.MessageID", "kind" : "abstract def"}], "shortDescription" : "Basic trait to define all messages.", "trait" : "neko\/Message.html", "kind" : "trait"}, {"name" : "neko.MessageID", "shortDescription" : "Class to represent the identifier of a message.", "object" : "neko\/MessageID$.html", "members_object" : [{"label" : "autoIncrement", "tail" : "(): MessageID", "member" : "neko.MessageID.autoIncrement", "link" : "neko\/MessageID$.html#autoIncrement():neko.MessageID", "kind" : "def"}, {"label" : "auto", "tail" : "(): MessageID", "member" : "neko.MessageID.auto", "link" : "neko\/MessageID$.html#auto():neko.MessageID", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/MessageID$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/MessageID$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/MessageID$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/MessageID$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/MessageID$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/MessageID$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/MessageID$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MessageID$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MessageID$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MessageID$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/MessageID$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/MessageID$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/MessageID$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/MessageID$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/MessageID$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/MessageID$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/MessageID$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/MessageID$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/MessageID$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/MessageID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/MessageID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MessageID) ⇒ Boolean, msg: ⇒ Any): MessageID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MessageID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MessageID) ⇒ Boolean): MessageID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MessageID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MessageID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MessageID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MessageID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MessageID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MessageID, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/MessageID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MessageID, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/MessageID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "idWith", "tail" : "(newID: Long): MessageID", "member" : "neko.MessageID.idWith", "link" : "neko\/MessageID.html#idWith(newID:Long):neko.MessageID", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.MessageID.name", "link" : "neko\/MessageID.html#name:String", "kind" : "def"}, {"label" : "compare", "tail" : "(that: MessageID): Int", "member" : "neko.MessageID.compare", "link" : "neko\/MessageID.html#compare(that:neko.MessageID):Int", "kind" : "def"}, {"label" : "SameType", "tail" : "", "member" : "neko.MessageID.SameType", "link" : "neko\/MessageID.html#SameType=neko.MessageID", "kind" : "type"}, {"member" : "neko.MessageID#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Long", "member" : "neko.MessageID.value", "link" : "neko\/MessageID.html#value:Long", "kind" : "val"}, {"label" : "compareTo", "tail" : "(that: MessageID): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/MessageID.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: MessageID): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/MessageID.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: MessageID): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/MessageID.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: MessageID): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/MessageID.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: MessageID): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/MessageID.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "map2", "tail" : "(that: ID[B])(f: (Long, B) ⇒ Long): SameType", "member" : "neko.ID.map2", "link" : "neko\/MessageID.html#map2[B<:T](that:neko.ID[B])(f:(T,B)=>T):ID.this.SameType", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Long) ⇒ Long): SameType", "member" : "neko.ID.map", "link" : "neko\/MessageID.html#map(f:T=>T):ID.this.SameType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/MessageID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/MessageID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/MessageID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/MessageID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/MessageID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/MessageID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/MessageID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MessageID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MessageID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MessageID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/MessageID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/MessageID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/MessageID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/MessageID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/MessageID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/MessageID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/MessageID.html", "kind" : "case class"}, {"name" : "neko.MulticastMessage", "shortDescription" : "Base class to define a new message with multiple destination processes (multicast).", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/MulticastMessage.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/MulticastMessage.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MulticastMessage) ⇒ Boolean, msg: ⇒ Any): MulticastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MulticastMessage.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MulticastMessage) ⇒ Boolean): MulticastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MulticastMessage.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MulticastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MulticastMessage.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MulticastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/MulticastMessage.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MulticastMessage, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/MulticastMessage.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MulticastMessage, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/MulticastMessage.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "destinations", "tail" : "(): Set[PID]", "member" : "neko.MulticastMessage.destinations", "link" : "neko\/MulticastMessage.html#destinations:Set[neko.PID]", "kind" : "def"}, {"label" : "id", "tail" : ": MessageID", "member" : "neko.MulticastMessage.id", "link" : "neko\/MulticastMessage.html#id:neko.MessageID", "kind" : "val"}, {"member" : "neko.MulticastMessage#<init>", "error" : "unsupported entity"}, {"label" : "toPrettyString", "tail" : ": String", "member" : "neko.Message.toPrettyString", "link" : "neko\/MulticastMessage.html#toPrettyString:String", "kind" : "lazy val"}, {"label" : "IDType", "tail" : "", "member" : "neko.Message.IDType", "link" : "neko\/MulticastMessage.html#IDType=neko.MessageID", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/MulticastMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/MulticastMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/MulticastMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/MulticastMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/MulticastMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/MulticastMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/MulticastMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MulticastMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MulticastMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/MulticastMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/MulticastMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/MulticastMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/MulticastMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/MulticastMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/MulticastMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/MulticastMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/MulticastMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/MulticastMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/MulticastMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "from", "tail" : "(): PID", "member" : "neko.MulticastMessage.from", "link" : "neko\/MulticastMessage.html#from:neko.PID", "kind" : "abstract def"}, {"label" : "to", "tail" : "(): Set[PID]", "member" : "neko.MulticastMessage.to", "link" : "neko\/MulticastMessage.html#to:Set[neko.PID]", "kind" : "abstract def"}], "class" : "neko\/MulticastMessage.html", "kind" : "class"}, {"name" : "neko.NamedEntity", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/NamedEntity.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/NamedEntity.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NamedEntity) ⇒ Boolean, msg: ⇒ Any): NamedEntity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NamedEntity.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NamedEntity) ⇒ Boolean): NamedEntity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NamedEntity.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NamedEntity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NamedEntity.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NamedEntity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NamedEntity.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NamedEntity, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/NamedEntity.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NamedEntity, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/NamedEntity.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/NamedEntity.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/NamedEntity.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/NamedEntity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/NamedEntity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/NamedEntity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/NamedEntity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/NamedEntity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/NamedEntity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/NamedEntity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NamedEntity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NamedEntity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NamedEntity.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/NamedEntity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/NamedEntity.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/NamedEntity.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/NamedEntity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/NamedEntity.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/NamedEntity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/NamedEntity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/NamedEntity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/NamedEntity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.NamedEntity.senderOpt", "link" : "neko\/NamedEntity.html#senderOpt:Option[neko.Sender]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.NamedEntity.name", "link" : "neko\/NamedEntity.html#name:String", "kind" : "abstract def"}], "shortDescription" : "Created by defago on 02\/05\/2017.", "trait" : "neko\/NamedEntity.html", "kind" : "trait"}, {"name" : "neko.NekoMain", "shortDescription" : "Basic class used to define the system.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/NekoMain.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/NekoMain.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoMain) ⇒ Boolean, msg: ⇒ Any): NekoMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoMain.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoMain) ⇒ Boolean): NekoMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoMain.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NekoMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoMain.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NekoMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoMain.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NekoMain, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/NekoMain.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NekoMain, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/NekoMain.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.NekoMain.system", "link" : "neko\/NekoMain.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "neko.NekoMain.logger", "link" : "neko\/NekoMain.html#logger:org.slf4j.Logger", "kind" : "final val"}, {"member" : "neko.NekoMain#<init>", "error" : "unsupported entity"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "neko\/NekoMain.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(body: ⇒ Unit): Unit", "member" : "scala.App.delayedInit", "link" : "neko\/NekoMain.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "neko\/NekoMain.html#args:Array[String]", "kind" : "def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "neko\/NekoMain.html#executionStart:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/NekoMain.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/NekoMain.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/NekoMain.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/NekoMain.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/NekoMain.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/NekoMain.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/NekoMain.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoMain.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoMain.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoMain.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/NekoMain.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/NekoMain.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/NekoMain.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/NekoMain.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/NekoMain.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/NekoMain.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/NekoMain.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/NekoMain.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/NekoMain.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/NekoMain.html", "kind" : "class"}, {"name" : "neko.NekoProcess", "shortDescription" : "", "object" : "neko\/NekoProcess$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/NekoProcess.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/NekoProcess.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoProcess) ⇒ Boolean, msg: ⇒ Any): NekoProcess", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcess.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoProcess) ⇒ Boolean): NekoProcess", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcess.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NekoProcess", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcess.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NekoProcess", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcess.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NekoProcess, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/NekoProcess.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NekoProcess, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/NekoProcess.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "shutdown", "tail" : "(): Unit", "member" : "neko.NekoProcess.shutdown", "link" : "neko\/NekoProcess.html#shutdown():Unit", "kind" : "def"}, {"label" : "finish", "tail" : "(): Unit", "member" : "neko.NekoProcess.finish", "link" : "neko\/NekoProcess.html#finish():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.NekoProcess.start", "link" : "neko\/NekoProcess.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.NekoProcess.preStart", "link" : "neko\/NekoProcess.html#preStart():Unit", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.NekoProcess.neighbors", "link" : "neko\/NekoProcess.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "protocols", "tail" : ": Set[Protocol]", "member" : "neko.NekoProcess.protocols", "link" : "neko\/NekoProcess.html#protocols:Set[neko.Protocol]", "kind" : "val"}, {"label" : "receivers", "tail" : ": IndexedSeq[NekoProcess.Receiver]", "member" : "neko.NekoProcess.receivers", "link" : "neko\/NekoProcess.html#receivers:IndexedSeq[neko.NekoProcess.Receiver]", "kind" : "val"}, {"label" : "sender", "tail" : ": NekoProcess.Sender", "member" : "neko.NekoProcess.sender", "link" : "neko\/NekoProcess.html#sender:neko.NekoProcess.Sender", "kind" : "val"}, {"label" : "dispatcher", "tail" : ": Dispatcher", "member" : "neko.NekoProcess.dispatcher", "link" : "neko\/NekoProcess.html#dispatcher:neko.kernel.Dispatcher", "kind" : "val"}, {"label" : "network", "tail" : ": Network", "member" : "neko.NekoProcess.network", "link" : "neko\/NekoProcess.html#network:neko.network.Network", "kind" : "val"}, {"label" : "senderOpt", "tail" : "(): Some[NekoProcess.Sender]", "member" : "neko.NekoProcess.senderOpt", "link" : "neko\/NekoProcess.html#senderOpt:Some[neko.NekoProcess.Sender]", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.NekoProcess.name", "link" : "neko\/NekoProcess.html#name:String", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.NekoProcess.out", "link" : "neko\/NekoProcess.html#out:java.io.PrintWriter", "kind" : "def"}, {"member" : "neko.NekoProcess#<init>", "error" : "unsupported entity"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.NekoProcess.system", "link" : "neko\/NekoProcess.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "id", "tail" : ": PID", "member" : "neko.NekoProcess.id", "link" : "neko\/NekoProcess.html#id:neko.PID", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/NekoProcess.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/NekoProcess.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/NekoProcess.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/NekoProcess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/NekoProcess.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/NekoProcess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/NekoProcess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/NekoProcess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/NekoProcess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/NekoProcess.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcess.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/NekoProcess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/NekoProcess.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/NekoProcess.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/NekoProcess.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/NekoProcess.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/NekoProcess.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/NekoProcess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/NekoProcess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/NekoProcess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Receiver", "tail" : "", "member" : "neko.NekoProcess.Receiver", "link" : "neko\/NekoProcess$.html#ReceiverextendsReceiverwithLazyLogging", "kind" : "class"}, {"label" : "Sender", "tail" : "", "member" : "neko.NekoProcess.Sender", "link" : "neko\/NekoProcess$.html#SenderextendsSender", "kind" : "class"}, {"label" : "Initializer", "tail" : "", "member" : "neko.NekoProcess.Initializer", "link" : "neko\/NekoProcess$.html#Initializer=Function[neko.NekoProcess,Unit]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/NekoProcess$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/NekoProcess$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/NekoProcess$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/NekoProcess$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/NekoProcess$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/NekoProcess$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/NekoProcess$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcess$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcess$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcess$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/NekoProcess$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/NekoProcess$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/NekoProcess$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/NekoProcess$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/NekoProcess$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/NekoProcess$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/NekoProcess$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/NekoProcess$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/NekoProcess$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/NekoProcess.html", "kind" : "class"}, {"name" : "neko.NekoProcessConfig", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/NekoProcessConfig.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/NekoProcessConfig.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoProcessConfig) ⇒ Boolean, msg: ⇒ Any): NekoProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessConfig.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoProcessConfig) ⇒ Boolean): NekoProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessConfig.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NekoProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessConfig.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NekoProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessConfig.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NekoProcessConfig, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/NekoProcessConfig.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NekoProcessConfig, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/NekoProcessConfig.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "neko.NekoProcessConfig#<init>", "error" : "unsupported entity"}, {"label" : "registeredProtocols", "tail" : "(): Set[Protocol]", "member" : "neko.ProcessConfig.registeredProtocols", "link" : "neko\/NekoProcessConfig.html#registeredProtocols:scala.collection.immutable.Set[neko.Protocol]", "kind" : "def"}, {"label" : "register", "tail" : "(proto: T): T", "member" : "neko.ProcessConfig.register", "link" : "neko\/NekoProcessConfig.html#register[T<:neko.Protocol](proto:T):T", "kind" : "def"}, {"label" : "out", "tail" : ": PrintWriter", "member" : "neko.ProcessConfig.out", "link" : "neko\/NekoProcessConfig.html#out:java.io.PrintWriter", "kind" : "val"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.ProcessConfig.tracer", "link" : "neko\/NekoProcessConfig.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "dispatcher", "tail" : ": Dispatcher", "member" : "neko.ProcessConfig.dispatcher", "link" : "neko\/NekoProcessConfig.html#dispatcher:neko.kernel.Dispatcher", "kind" : "val"}, {"label" : "pid", "tail" : ": PID", "member" : "neko.ProcessConfig.pid", "link" : "neko\/NekoProcessConfig.html#pid:neko.PID", "kind" : "val"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.ProcessConfig.system", "link" : "neko\/NekoProcessConfig.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/NekoProcessConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/NekoProcessConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/NekoProcessConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/NekoProcessConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/NekoProcessConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/NekoProcessConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/NekoProcessConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/NekoProcessConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/NekoProcessConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/NekoProcessConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/NekoProcessConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/NekoProcessConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/NekoProcessConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/NekoProcessConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/NekoProcessConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/NekoProcessConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/NekoProcessConfig.html", "kind" : "class"}, {"name" : "neko.NekoProcessInitializer", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/NekoProcessInitializer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/NekoProcessInitializer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoProcessInitializer) ⇒ Boolean, msg: ⇒ Any): NekoProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessInitializer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoProcessInitializer) ⇒ Boolean): NekoProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessInitializer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NekoProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessInitializer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NekoProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/NekoProcessInitializer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NekoProcessInitializer, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/NekoProcessInitializer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NekoProcessInitializer, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/NekoProcessInitializer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "neko\/NekoProcessInitializer.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Unit) ⇒ A): (NekoProcessConfig) ⇒ A", "member" : "scala.Function1.andThen", "link" : "neko\/NekoProcessInitializer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ NekoProcessConfig): (A) ⇒ Unit", "member" : "scala.Function1.compose", "link" : "neko\/NekoProcessInitializer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/NekoProcessInitializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/NekoProcessInitializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/NekoProcessInitializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/NekoProcessInitializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/NekoProcessInitializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/NekoProcessInitializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/NekoProcessInitializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessInitializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessInitializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessInitializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/NekoProcessInitializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/NekoProcessInitializer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/NekoProcessInitializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/NekoProcessInitializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/NekoProcessInitializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/NekoProcessInitializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/NekoProcessInitializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/NekoProcessInitializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(config: NekoProcessConfig): Unit", "member" : "neko.NekoProcessInitializer.apply", "link" : "neko\/NekoProcessInitializer.html#apply(config:neko.NekoProcessConfig):Unit", "kind" : "abstract def"}], "shortDescription" : "Implements the initialization of a process by creating the protocols and connecting them.", "object" : "neko\/NekoProcessInitializer$.html", "members_object" : [{"label" : "forName", "tail" : "(className: String): Try[NekoProcessInitializer]", "member" : "neko.NekoProcessInitializer.forName", "link" : "neko\/NekoProcessInitializer$.html#forName(className:String):scala.util.Try[neko.NekoProcessInitializer]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/NekoProcessInitializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/NekoProcessInitializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/NekoProcessInitializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/NekoProcessInitializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/NekoProcessInitializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/NekoProcessInitializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/NekoProcessInitializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessInitializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessInitializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/NekoProcessInitializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/NekoProcessInitializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/NekoProcessInitializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/NekoProcessInitializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/NekoProcessInitializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/NekoProcessInitializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/NekoProcessInitializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/NekoProcessInitializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/NekoProcessInitializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/NekoProcessInitializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/NekoProcessInitializer.html", "kind" : "trait"}, {"name" : "neko.PID", "shortDescription" : "Class to represent process identifiers.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/PID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/PID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PID) ⇒ Boolean, msg: ⇒ Any): PID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/PID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PID) ⇒ Boolean): PID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/PID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/PID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/PID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PID, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/PID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PID, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/PID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "idWith", "tail" : "(newID: Int): SameType", "member" : "neko.PID.idWith", "link" : "neko\/PID.html#idWith(newID:Int):PID.this.SameType", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.PID.name", "link" : "neko\/PID.html#name:String", "kind" : "def"}, {"label" : "compare", "tail" : "(that: PID): Int", "member" : "neko.PID.compare", "link" : "neko\/PID.html#compare(that:neko.PID):Int", "kind" : "def"}, {"label" : "SameType", "tail" : "", "member" : "neko.PID.SameType", "link" : "neko\/PID.html#SameType=neko.PID", "kind" : "type"}, {"member" : "neko.PID#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Int", "member" : "neko.PID.value", "link" : "neko\/PID.html#value:Int", "kind" : "val"}, {"label" : "compareTo", "tail" : "(that: PID): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/PID.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: PID): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/PID.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: PID): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/PID.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: PID): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/PID.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: PID): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/PID.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "map2", "tail" : "(that: ID[B])(f: (Int, B) ⇒ Int): SameType", "member" : "neko.ID.map2", "link" : "neko\/PID.html#map2[B<:T](that:neko.ID[B])(f:(T,B)=>T):ID.this.SameType", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Int) ⇒ Int): SameType", "member" : "neko.ID.map", "link" : "neko\/PID.html#map(f:T=>T):ID.this.SameType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/PID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/PID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/PID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/PID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/PID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/PID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/PID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/PID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/PID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/PID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/PID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/PID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/PID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/PID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/PID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/PID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/PID.html", "kind" : "case class"}, {"name" : "neko.ProcessConfig", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ProcessConfig.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ProcessConfig.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProcessConfig) ⇒ Boolean, msg: ⇒ Any): ProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessConfig.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProcessConfig) ⇒ Boolean): ProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessConfig.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessConfig.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProcessConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessConfig.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProcessConfig, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ProcessConfig.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProcessConfig, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ProcessConfig.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "registeredProtocols", "tail" : "(): Set[Protocol]", "member" : "neko.ProcessConfig.registeredProtocols", "link" : "neko\/ProcessConfig.html#registeredProtocols:scala.collection.immutable.Set[neko.Protocol]", "kind" : "def"}, {"label" : "register", "tail" : "(proto: T): T", "member" : "neko.ProcessConfig.register", "link" : "neko\/ProcessConfig.html#register[T<:neko.Protocol](proto:T):T", "kind" : "def"}, {"member" : "neko.ProcessConfig#<init>", "error" : "unsupported entity"}, {"label" : "out", "tail" : ": PrintWriter", "member" : "neko.ProcessConfig.out", "link" : "neko\/ProcessConfig.html#out:java.io.PrintWriter", "kind" : "val"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.ProcessConfig.tracer", "link" : "neko\/ProcessConfig.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "dispatcher", "tail" : ": Dispatcher", "member" : "neko.ProcessConfig.dispatcher", "link" : "neko\/ProcessConfig.html#dispatcher:neko.kernel.Dispatcher", "kind" : "val"}, {"label" : "pid", "tail" : ": PID", "member" : "neko.ProcessConfig.pid", "link" : "neko\/ProcessConfig.html#pid:neko.PID", "kind" : "val"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.ProcessConfig.system", "link" : "neko\/ProcessConfig.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ProcessConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ProcessConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ProcessConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ProcessConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ProcessConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ProcessConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ProcessConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ProcessConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ProcessConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/ProcessConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ProcessConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ProcessConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ProcessConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ProcessConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ProcessConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ProcessConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/ProcessConfig.html", "kind" : "class"}, {"name" : "neko.ProcessInitializer", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ProcessInitializer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ProcessInitializer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProcessInitializer) ⇒ Boolean, msg: ⇒ Any): ProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessInitializer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProcessInitializer) ⇒ Boolean): ProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessInitializer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessInitializer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProcessInitializer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProcessInitializer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProcessInitializer, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ProcessInitializer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProcessInitializer, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ProcessInitializer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "init", "tail" : "(initializer: Function[ProcessConfig, Unit]): Unit", "member" : "neko.ProcessInitializer.init", "link" : "neko\/ProcessInitializer.html#init(initializer:Function[neko.ProcessConfig,Unit]):Unit", "kind" : "def"}, {"label" : "forProcess", "tail" : "(initializer: (ProcessConfig) ⇒ Unit): Unit", "member" : "neko.ProcessInitializer.forProcess", "link" : "neko\/ProcessInitializer.html#forProcess(initializer:neko.ProcessConfig=>Unit):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(p: NekoProcessConfig): Unit", "member" : "neko.ProcessInitializer.apply", "link" : "neko\/ProcessInitializer.html#apply(p:neko.NekoProcessConfig):Unit", "kind" : "final def"}, {"label" : "apply", "tail" : "(p: ProcessConfig): Unit", "member" : "neko.ProcessInitializer.apply", "link" : "neko\/ProcessInitializer.html#apply(p:neko.ProcessConfig):Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "neko\/ProcessInitializer.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (Unit) ⇒ A): (ProcessConfig) ⇒ A", "member" : "scala.Function1.andThen", "link" : "neko\/ProcessInitializer.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ ProcessConfig): (A) ⇒ Unit", "member" : "scala.Function1.compose", "link" : "neko\/ProcessInitializer.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ProcessInitializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ProcessInitializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ProcessInitializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ProcessInitializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ProcessInitializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ProcessInitializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ProcessInitializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessInitializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessInitializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessInitializer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ProcessInitializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ProcessInitializer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ProcessInitializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ProcessInitializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ProcessInitializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ProcessInitializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ProcessInitializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ProcessInitializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Basic trait for implementing the process initialization.", "object" : "neko\/ProcessInitializer$.html", "members_object" : [{"label" : "apply", "tail" : "(initializer: (ProcessConfig) ⇒ Unit): ProcessInitializer", "member" : "neko.ProcessInitializer.apply", "link" : "neko\/ProcessInitializer$.html#apply(initializer:neko.ProcessConfig=>Unit):neko.ProcessInitializer", "kind" : "def"}, {"label" : "forName", "tail" : "(className: String): Try[ProcessInitializer]", "member" : "neko.ProcessInitializer.forName", "link" : "neko\/ProcessInitializer$.html#forName(className:String):scala.util.Try[neko.ProcessInitializer]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ProcessInitializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ProcessInitializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ProcessInitializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ProcessInitializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ProcessInitializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ProcessInitializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ProcessInitializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessInitializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessInitializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProcessInitializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ProcessInitializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ProcessInitializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/ProcessInitializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ProcessInitializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ProcessInitializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ProcessInitializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ProcessInitializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ProcessInitializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ProcessInitializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/ProcessInitializer.html", "kind" : "trait"}, {"name" : "neko.Protocol", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Protocol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Protocol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Protocol) ⇒ Boolean, msg: ⇒ Any): Protocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Protocol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Protocol) ⇒ Boolean): Protocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Protocol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Protocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Protocol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Protocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Protocol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Protocol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Protocol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Protocol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Protocol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/Protocol.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/Protocol.html#onShutdown():Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.Protocol.onFinish", "link" : "neko\/Protocol.html#onFinish():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/Protocol.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/Protocol.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/Protocol.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/Protocol.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/Protocol.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Protocol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Protocol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Protocol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Protocol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Protocol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Protocol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Protocol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Protocol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Protocol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Protocol.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Protocol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Protocol.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Protocol.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Protocol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Protocol.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Protocol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Protocol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Protocol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Protocol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "id", "tail" : "(): ProtoID", "member" : "neko.Protocol.id", "link" : "neko\/Protocol.html#id:neko.ProtoID", "kind" : "abstract def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.Protocol.process", "link" : "neko\/Protocol.html#process:neko.PID", "kind" : "abstract def"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.Protocol.system", "link" : "neko\/Protocol.html#system:neko.kernel.NekoSystem", "kind" : "abstract def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.NamedEntity.senderOpt", "link" : "neko\/Protocol.html#senderOpt:Option[neko.Sender]", "kind" : "abstract def"}], "shortDescription" : "Defines the basic operations that a protocol must provide.", "trait" : "neko\/Protocol.html", "kind" : "trait"}, {"name" : "neko.ProtocolImpl", "shortDescription" : "Core class for implementing a reactive protocol.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ProtocolImpl.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ProtocolImpl.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtocolImpl) ⇒ Boolean, msg: ⇒ Any): ProtocolImpl", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolImpl.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtocolImpl) ⇒ Boolean): ProtocolImpl", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolImpl.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProtocolImpl", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolImpl.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProtocolImpl", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolImpl.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProtocolImpl, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ProtocolImpl.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProtocolImpl, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ProtocolImpl.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/ProtocolImpl.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/ProtocolImpl.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/ProtocolImpl.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/ProtocolImpl.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/ProtocolImpl.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/ProtocolImpl.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/ProtocolImpl.html#process:neko.PID", "kind" : "def"}, {"member" : "neko.ProtocolImpl#<init>", "error" : "unsupported entity"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/ProtocolImpl.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/ProtocolImpl.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/ProtocolImpl.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/ProtocolImpl.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/ProtocolImpl.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/ProtocolImpl.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/ProtocolImpl.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/ProtocolImpl.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/ProtocolImpl.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/ProtocolImpl.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/ProtocolImpl.html#onShutdown():Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.Protocol.onFinish", "link" : "neko\/ProtocolImpl.html#onFinish():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/ProtocolImpl.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/ProtocolImpl.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/ProtocolImpl.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/ProtocolImpl.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/ProtocolImpl.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ProtocolImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ProtocolImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ProtocolImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ProtocolImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ProtocolImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ProtocolImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ProtocolImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtocolImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtocolImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtocolImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ProtocolImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ProtocolImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ProtocolImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ProtocolImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ProtocolImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ProtocolImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ProtocolImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ProtocolImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/ProtocolImpl.html", "kind" : "class"}, {"name" : "neko.ProtocolUtils", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ProtocolUtils.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ProtocolUtils.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtocolUtils) ⇒ Boolean, msg: ⇒ Any): ProtocolUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolUtils.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtocolUtils) ⇒ Boolean): ProtocolUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolUtils.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProtocolUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolUtils.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProtocolUtils", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtocolUtils.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProtocolUtils, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ProtocolUtils.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProtocolUtils, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ProtocolUtils.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/ProtocolUtils.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/ProtocolUtils.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/ProtocolUtils.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/ProtocolUtils.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/ProtocolUtils.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/ProtocolUtils.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/ProtocolUtils.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/ProtocolUtils.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/ProtocolUtils.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ProtocolUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ProtocolUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ProtocolUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ProtocolUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ProtocolUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ProtocolUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ProtocolUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtocolUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtocolUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtocolUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ProtocolUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ProtocolUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/ProtocolUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ProtocolUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ProtocolUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ProtocolUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ProtocolUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ProtocolUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ProtocolUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides basic functionality to the protocol that implements this trait.", "trait" : "neko\/ProtocolUtils.html", "kind" : "trait"}, {"name" : "neko.ProtoID", "shortDescription" : "Class to represent protocol identifiers.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ProtoID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ProtoID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtoID) ⇒ Boolean, msg: ⇒ Any): ProtoID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtoID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtoID) ⇒ Boolean): ProtoID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtoID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProtoID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtoID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProtoID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ProtoID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProtoID, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ProtoID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProtoID, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ProtoID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "idWith", "tail" : "(newID: String): ProtoID", "member" : "neko.ProtoID.idWith", "link" : "neko\/ProtoID.html#idWith(newID:String):neko.ProtoID", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.ProtoID.name", "link" : "neko\/ProtoID.html#name:String", "kind" : "def"}, {"label" : "SameType", "tail" : "", "member" : "neko.ProtoID.SameType", "link" : "neko\/ProtoID.html#SameType=neko.ProtoID", "kind" : "type"}, {"member" : "neko.ProtoID#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "neko.ProtoID.value", "link" : "neko\/ProtoID.html#value:String", "kind" : "val"}, {"label" : "map2", "tail" : "(that: ID[B])(f: (String, B) ⇒ String): SameType", "member" : "neko.ID.map2", "link" : "neko\/ProtoID.html#map2[B<:T](that:neko.ID[B])(f:(T,B)=>T):ID.this.SameType", "kind" : "def"}, {"label" : "map", "tail" : "(f: (String) ⇒ String): SameType", "member" : "neko.ID.map", "link" : "neko\/ProtoID.html#map(f:T=>T):ID.this.SameType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ProtoID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ProtoID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ProtoID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ProtoID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ProtoID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ProtoID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ProtoID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtoID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtoID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ProtoID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ProtoID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ProtoID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ProtoID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ProtoID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ProtoID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ProtoID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/ProtoID.html", "kind" : "case class"}, {"name" : "neko.ReactiveProtocol", "shortDescription" : "Convenience class to replace ProtocolImpl with all common traits already mixed in.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/ReactiveProtocol.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/ReactiveProtocol.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ReactiveProtocol) ⇒ Boolean, msg: ⇒ Any): ReactiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ReactiveProtocol.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ReactiveProtocol) ⇒ Boolean): ReactiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ReactiveProtocol.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ReactiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ReactiveProtocol.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ReactiveProtocol", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/ReactiveProtocol.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ReactiveProtocol, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/ReactiveProtocol.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ReactiveProtocol, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/ReactiveProtocol.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/ReactiveProtocol.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/ReactiveProtocol.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/ReactiveProtocol.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/ReactiveProtocol.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/ReactiveProtocol.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/ReactiveProtocol.html#onFinish():Unit", "kind" : "final def"}, {"member" : "neko.ReactiveProtocol#<init>", "error" : "unsupported entity"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/ReactiveProtocol.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/ReactiveProtocol.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/ReactiveProtocol.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/ReactiveProtocol.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/ReactiveProtocol.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/ReactiveProtocol.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/ReactiveProtocol.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/ReactiveProtocol.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/ReactiveProtocol.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/ReactiveProtocol.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/ReactiveProtocol.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/ReactiveProtocol.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/ReactiveProtocol.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/ReactiveProtocol.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/ReactiveProtocol.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/ReactiveProtocol.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/ReactiveProtocol.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/ReactiveProtocol.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/ReactiveProtocol.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/ReactiveProtocol.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/ReactiveProtocol.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/ReactiveProtocol.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/ReactiveProtocol.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/ReactiveProtocol.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/ReactiveProtocol.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/ReactiveProtocol.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/ReactiveProtocol.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/ReactiveProtocol.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/ReactiveProtocol.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/ReactiveProtocol.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/ReactiveProtocol.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/ReactiveProtocol.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/ReactiveProtocol.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ReactiveProtocol.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ReactiveProtocol.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/ReactiveProtocol.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/ReactiveProtocol.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/ReactiveProtocol.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/ReactiveProtocol.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/ReactiveProtocol.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/ReactiveProtocol.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/ReactiveProtocol.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/ReactiveProtocol.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/ReactiveProtocol.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.Receiving.onReceive", "link" : "neko\/ReactiveProtocol.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "abstract def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.Sending.onSend", "link" : "neko\/ReactiveProtocol.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "abstract def"}], "class" : "neko\/ReactiveProtocol.html", "kind" : "class"}, {"name" : "neko.Receiver", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Receiver.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Receiver.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Receiver) ⇒ Boolean, msg: ⇒ Any): Receiver", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiver.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Receiver) ⇒ Boolean): Receiver", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiver.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Receiver", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiver.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Receiver", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiver.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Receiver, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Receiver.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Receiver, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Receiver.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Receiver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Receiver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Receiver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Receiver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Receiver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Receiver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Receiver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Receiver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Receiver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Receiver.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Receiver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Receiver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Receiver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Receiver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Receiver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Receiver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Receiver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Receiver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Receiver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.Receiver.deliver", "link" : "neko\/Receiver.html#deliver(m:neko.Event):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "neko\/Receiver.html", "kind" : "trait"}, {"name" : "neko.Receiving", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Receiving.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Receiving.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Receiving) ⇒ Boolean, msg: ⇒ Any): Receiving", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiving.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Receiving) ⇒ Boolean): Receiving", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiving.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Receiving", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiving.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Receiving", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Receiving.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Receiving, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Receiving.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Receiving, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Receiving.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/Receiving.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.Receiving.SEND", "link" : "neko\/Receiving.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.Receiving.deliver", "link" : "neko\/Receiving.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Receiving.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Receiving.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Receiving.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Receiving.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Receiving.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Receiving.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Receiving.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Receiving.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Receiving.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Receiving.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Receiving.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Receiving.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Receiving.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Receiving.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Receiving.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Receiving.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Receiving.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Receiving.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Receiving.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.Receiving.sender", "link" : "neko\/Receiving.html#sender:neko.Sender", "kind" : "abstract def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.Receiving.onReceive", "link" : "neko\/Receiving.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "neko\/Receiving.html", "kind" : "trait"}, {"name" : "neko.Sender", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Sender.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Sender.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sender) ⇒ Boolean, msg: ⇒ Any): Sender", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sender.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sender) ⇒ Boolean): Sender", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sender.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Sender", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sender.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Sender", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sender.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Sender, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Sender.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Sender, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Sender.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/Sender.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/Sender.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Sender.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Sender.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Sender.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Sender.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Sender.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Sender.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Sender.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Sender.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Sender.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Sender.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Sender.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Sender.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Sender.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Sender.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Sender.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Sender.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Sender.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Sender.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Sender.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.Sender.send", "link" : "neko\/Sender.html#send(m:neko.Event):Unit", "kind" : "abstract def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.NamedEntity.senderOpt", "link" : "neko\/Sender.html#senderOpt:Option[neko.Sender]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.NamedEntity.name", "link" : "neko\/Sender.html#name:String", "kind" : "abstract def"}], "shortDescription" : "provides the send operation.", "trait" : "neko\/Sender.html", "kind" : "trait"}, {"name" : "neko.Sending", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Sending.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Sending.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sending) ⇒ Boolean, msg: ⇒ Any): Sending", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sending.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sending) ⇒ Boolean): Sending", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sending.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Sending", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sending.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Sending", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Sending.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Sending, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Sending.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Sending, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Sending.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.Sending.DELIVER", "link" : "neko\/Sending.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.Sending.send", "link" : "neko\/Sending.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/Sending.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/Sending.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Sending.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Sending.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Sending.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Sending.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Sending.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Sending.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Sending.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Sending.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Sending.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Sending.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Sending.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Sending.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Sending.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Sending.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Sending.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Sending.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Sending.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Sending.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Sending.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.Sending.receiver", "link" : "neko\/Sending.html#receiver:neko.Receiver", "kind" : "abstract def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.Sending.onSend", "link" : "neko\/Sending.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "abstract def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.NamedEntity.senderOpt", "link" : "neko\/Sending.html#senderOpt:Option[neko.Sender]", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.NamedEntity.name", "link" : "neko\/Sending.html#name:String", "kind" : "abstract def"}], "shortDescription" : "Defines the behavior for a protocol that provides the sending of messages as capability.", "trait" : "neko\/Sending.html", "kind" : "trait"}, {"name" : "neko.Signal", "shortDescription" : "Basic class for internal events.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Signal.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Signal.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Signal) ⇒ Boolean, msg: ⇒ Any): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Signal.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Signal) ⇒ Boolean): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Signal.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Signal.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Signal", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Signal.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Signal, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Signal.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Signal, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Signal.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toPrettyString", "tail" : "(): String", "member" : "neko.Signal.toPrettyString", "link" : "neko\/Signal.html#toPrettyString:String", "kind" : "def"}, {"label" : "id", "tail" : ": SignalID", "member" : "neko.Signal.id", "link" : "neko\/Signal.html#id:neko.SignalID", "kind" : "lazy val"}, {"label" : "IDType", "tail" : "", "member" : "neko.Signal.IDType", "link" : "neko\/Signal.html#IDType=neko.SignalID", "kind" : "type"}, {"member" : "neko.Signal#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Signal.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Signal.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Signal.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Signal.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Signal.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Signal.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Signal.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Signal.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Signal.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Signal.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Signal.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Signal.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Signal.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Signal.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Signal.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Signal.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Signal.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Signal.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Signal.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/Signal.html", "kind" : "class"}, {"name" : "neko.SignalID", "shortDescription" : "Class to represent unique identifiers for instances of Signal.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/SignalID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/SignalID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SignalID) ⇒ Boolean, msg: ⇒ Any): SignalID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/SignalID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SignalID) ⇒ Boolean): SignalID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/SignalID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SignalID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/SignalID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SignalID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/SignalID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SignalID, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/SignalID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SignalID, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/SignalID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "idWith", "tail" : "(newID: UUID): SameType", "member" : "neko.SignalID.idWith", "link" : "neko\/SignalID.html#idWith(newID:java.util.UUID):SignalID.this.SameType", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.SignalID.name", "link" : "neko\/SignalID.html#name:String", "kind" : "def"}, {"label" : "SameType", "tail" : "", "member" : "neko.SignalID.SameType", "link" : "neko\/SignalID.html#SameType=neko.SignalID", "kind" : "type"}, {"member" : "neko.SignalID#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": UUID", "member" : "neko.SignalID.value", "link" : "neko\/SignalID.html#value:java.util.UUID", "kind" : "val"}, {"label" : "map2", "tail" : "(that: ID[B])(f: (UUID, B) ⇒ UUID): SameType", "member" : "neko.ID.map2", "link" : "neko\/SignalID.html#map2[B<:T](that:neko.ID[B])(f:(T,B)=>T):ID.this.SameType", "kind" : "def"}, {"label" : "map", "tail" : "(f: (UUID) ⇒ UUID): SameType", "member" : "neko.ID.map", "link" : "neko\/SignalID.html#map(f:T=>T):ID.this.SameType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/SignalID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/SignalID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/SignalID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/SignalID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/SignalID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/SignalID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/SignalID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/SignalID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/SignalID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/SignalID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/SignalID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/SignalID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/SignalID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/SignalID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/SignalID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/SignalID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/SignalID.html", "kind" : "case class"}, {"name" : "neko.StashedReceive", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/StashedReceive.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/StashedReceive.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StashedReceive) ⇒ Boolean, msg: ⇒ Any): StashedReceive", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/StashedReceive.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StashedReceive) ⇒ Boolean): StashedReceive", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/StashedReceive.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StashedReceive", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/StashedReceive.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StashedReceive", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/StashedReceive.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StashedReceive, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/StashedReceive.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StashedReceive, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/StashedReceive.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "ReceiveOrStash", "tail" : "(pf: PartialFunction[Event, Unit]): Unit", "member" : "neko.StashedReceive.ReceiveOrStash", "link" : "neko\/StashedReceive.html#ReceiveOrStash(pf:PartialFunction[neko.Event,Unit]):Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Seq[Event]", "member" : "neko.StashedReceive.stash", "link" : "neko\/StashedReceive.html#stash:Seq[neko.Event]", "kind" : "def"}, {"label" : "stashForLater", "tail" : "(m: Event): Unit", "member" : "neko.StashedReceive.stashForLater", "link" : "neko\/StashedReceive.html#stashForLater(m:neko.Event):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/StashedReceive.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/StashedReceive.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/StashedReceive.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/StashedReceive.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/StashedReceive.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/StashedReceive.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/StashedReceive.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/StashedReceive.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/StashedReceive.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/StashedReceive.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/StashedReceive.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/StashedReceive.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/StashedReceive.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/StashedReceive.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/StashedReceive.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/StashedReceive.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/StashedReceive.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/StashedReceive.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/StashedReceive.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "neko\/StashedReceive.html", "kind" : "trait"}, {"name" : "neko.TaskID", "shortDescription" : "identifier of a task obtained from scheduling an action through an instance of Timer.", "object" : "neko\/TaskID$.html", "members_object" : [{"label" : "autoIncrement", "tail" : "(): TaskID", "member" : "neko.TaskID.autoIncrement", "link" : "neko\/TaskID$.html#autoIncrement():neko.TaskID", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/TaskID$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/TaskID$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/TaskID$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/TaskID$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/TaskID$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/TaskID$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/TaskID$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/TaskID$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/TaskID$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/TaskID$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/TaskID$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/TaskID$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/TaskID$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/TaskID$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/TaskID$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/TaskID$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/TaskID$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/TaskID$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/TaskID$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/TaskID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/TaskID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TaskID) ⇒ Boolean, msg: ⇒ Any): TaskID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/TaskID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TaskID) ⇒ Boolean): TaskID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/TaskID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TaskID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/TaskID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TaskID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/TaskID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TaskID, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/TaskID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TaskID, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/TaskID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "compare", "tail" : "(that: TaskID): Int", "member" : "neko.TaskID.compare", "link" : "neko\/TaskID.html#compare(that:neko.TaskID):Int", "kind" : "def"}, {"label" : "idWith", "tail" : "(newID: Long): TaskID", "member" : "neko.TaskID.idWith", "link" : "neko\/TaskID.html#idWith(newID:Long):neko.TaskID", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.TaskID.name", "link" : "neko\/TaskID.html#name:String", "kind" : "def"}, {"label" : "SameType", "tail" : "", "member" : "neko.TaskID.SameType", "link" : "neko\/TaskID.html#SameType=neko.TaskID", "kind" : "type"}, {"member" : "neko.TaskID#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Long", "member" : "neko.TaskID.value", "link" : "neko\/TaskID.html#value:Long", "kind" : "val"}, {"label" : "compareTo", "tail" : "(that: TaskID): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/TaskID.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: TaskID): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/TaskID.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: TaskID): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/TaskID.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: TaskID): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/TaskID.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: TaskID): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/TaskID.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "map2", "tail" : "(that: ID[B])(f: (Long, B) ⇒ Long): SameType", "member" : "neko.ID.map2", "link" : "neko\/TaskID.html#map2[B<:T](that:neko.ID[B])(f:(T,B)=>T):ID.this.SameType", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Long) ⇒ Long): SameType", "member" : "neko.ID.map", "link" : "neko\/TaskID.html#map(f:T=>T):ID.this.SameType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/TaskID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/TaskID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/TaskID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/TaskID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/TaskID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/TaskID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/TaskID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/TaskID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/TaskID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/TaskID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/TaskID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/TaskID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/TaskID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/TaskID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/TaskID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/TaskID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/TaskID.html", "kind" : "case class"}, {"name" : "neko.Timeout", "shortDescription" : "Event generated by ActiveProtocol.Receive.withTimeout upon a timeout.", "object" : "neko\/Timeout$.html", "members_object" : [{"label" : "toPrettyString", "tail" : "(): String", "member" : "neko.Signal.toPrettyString", "link" : "neko\/Timeout$.html#toPrettyString:String", "kind" : "def"}, {"label" : "id", "tail" : ": SignalID", "member" : "neko.Signal.id", "link" : "neko\/Timeout$.html#id:neko.SignalID", "kind" : "lazy val"}, {"label" : "IDType", "tail" : "", "member" : "neko.Signal.IDType", "link" : "neko\/Timeout$.html#IDType=neko.SignalID", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Timeout$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Timeout$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Timeout$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Timeout$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Timeout$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Timeout$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Timeout$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Timeout$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Timeout$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Timeout$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Timeout$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Timeout$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Timeout$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Timeout$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Timeout$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Timeout$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Timeout$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.Timer", "shortDescription" : "supports the scheduling of delayed and periodic tasks.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Timer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Timer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Timer) ⇒ Boolean, msg: ⇒ Any): Timer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Timer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Timer) ⇒ Boolean): Timer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Timer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Timer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Timer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Timer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Timer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Timer, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Timer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Timer, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Timer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "cancel", "tail" : "(id: TaskID): Unit", "member" : "neko.Timer.cancel", "link" : "neko\/Timer.html#cancel(id:neko.TaskID):Unit", "kind" : "def"}, {"label" : "schedule", "tail" : "(task: Task): TaskID", "member" : "neko.Timer.schedule", "link" : "neko\/Timer.html#schedule(task:neko.kernel.Task):neko.TaskID", "kind" : "def"}, {"label" : "continueUntil", "tail" : "(cond: ⇒ Boolean): Boolean", "member" : "neko.Timer.continueUntil", "link" : "neko\/Timer.html#continueUntil(cond:=>Boolean):Boolean", "kind" : "final def"}, {"label" : "continueWhile", "tail" : "(cond: ⇒ Boolean): Boolean", "member" : "neko.Timer.continueWhile", "link" : "neko\/Timer.html#continueWhile(cond:=>Boolean):Boolean", "kind" : "final def"}, {"label" : "periodically", "tail" : "(delay: Time, period: Time)(action: (Time) ⇒ Boolean): TaskID", "member" : "neko.Timer.periodically", "link" : "neko\/Timer.html#periodically(delay:neko.util.Time,period:neko.util.Time)(action:neko.util.Time=>Boolean):neko.TaskID", "kind" : "def"}, {"label" : "periodically", "tail" : "(period: Time)(action: (Time) ⇒ Boolean): TaskID", "member" : "neko.Timer.periodically", "link" : "neko\/Timer.html#periodically(period:neko.util.Time)(action:neko.util.Time=>Boolean):neko.TaskID", "kind" : "def"}, {"label" : "scheduleAt", "tail" : "(time: Time)(action: (Time) ⇒ Unit): TaskID", "member" : "neko.Timer.scheduleAt", "link" : "neko\/Timer.html#scheduleAt(time:neko.util.Time)(action:neko.util.Time=>Unit):neko.TaskID", "kind" : "def"}, {"label" : "scheduleAfter", "tail" : "(delay: Time)(action: (Time) ⇒ Unit): TaskID", "member" : "neko.Timer.scheduleAfter", "link" : "neko\/Timer.html#scheduleAfter(delay:neko.util.Time)(action:neko.util.Time=>Unit):neko.TaskID", "kind" : "def"}, {"label" : "nonEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.Timer.nonEmptyBesideDaemons", "link" : "neko\/Timer.html#nonEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "isEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.Timer.isEmptyBesideDaemons", "link" : "neko\/Timer.html#isEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "neko.Timer.nonEmpty", "link" : "neko\/Timer.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "neko.Timer.isEmpty", "link" : "neko\/Timer.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "now", "tail" : "(): Time", "member" : "neko.Timer.now", "link" : "neko\/Timer.html#now:neko.util.Time", "kind" : "def"}, {"member" : "neko.Timer#<init>", "error" : "unsupported entity"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "neko.Timer.scheduler", "link" : "neko\/Timer.html#scheduler:neko.kernel.Scheduler", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Timer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Timer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Timer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Timer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Timer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Timer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Timer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Timer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Timer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Timer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Timer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Timer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Timer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Timer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Timer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Timer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Timer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Timer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Timer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/Timer.html", "kind" : "class"}, {"name" : "neko.UnicastMessage", "shortDescription" : "Base class to define a new message with one single destination process (unicast).", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/UnicastMessage.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/UnicastMessage.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnicastMessage) ⇒ Boolean, msg: ⇒ Any): UnicastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/UnicastMessage.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (UnicastMessage) ⇒ Boolean): UnicastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/UnicastMessage.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): UnicastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/UnicastMessage.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): UnicastMessage", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/UnicastMessage.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (UnicastMessage, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/UnicastMessage.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (UnicastMessage, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/UnicastMessage.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "destinations", "tail" : "(): Set[PID]", "member" : "neko.UnicastMessage.destinations", "link" : "neko\/UnicastMessage.html#destinations:scala.collection.immutable.Set[neko.PID]", "kind" : "def"}, {"label" : "id", "tail" : ": MessageID", "member" : "neko.UnicastMessage.id", "link" : "neko\/UnicastMessage.html#id:neko.MessageID", "kind" : "val"}, {"member" : "neko.UnicastMessage#<init>", "error" : "unsupported entity"}, {"label" : "toPrettyString", "tail" : ": String", "member" : "neko.Message.toPrettyString", "link" : "neko\/UnicastMessage.html#toPrettyString:String", "kind" : "lazy val"}, {"label" : "IDType", "tail" : "", "member" : "neko.Message.IDType", "link" : "neko\/UnicastMessage.html#IDType=neko.MessageID", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/UnicastMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/UnicastMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/UnicastMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/UnicastMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/UnicastMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/UnicastMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/UnicastMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/UnicastMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/UnicastMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/UnicastMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/UnicastMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/UnicastMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/UnicastMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/UnicastMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/UnicastMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/UnicastMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/UnicastMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/UnicastMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/UnicastMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "from", "tail" : "(): PID", "member" : "neko.UnicastMessage.from", "link" : "neko\/UnicastMessage.html#from:neko.PID", "kind" : "abstract def"}, {"label" : "to", "tail" : "(): PID", "member" : "neko.UnicastMessage.to", "link" : "neko\/UnicastMessage.html#to:neko.PID", "kind" : "abstract def"}], "class" : "neko\/UnicastMessage.html", "kind" : "class"}, {"name" : "neko.Wrapper", "shortDescription" : "Basic class from messages used to add information to existing messages (wrappers).", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/Wrapper.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/Wrapper.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Wrapper) ⇒ Boolean, msg: ⇒ Any): Wrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Wrapper.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Wrapper) ⇒ Boolean): Wrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Wrapper.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Wrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Wrapper.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Wrapper", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/Wrapper.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Wrapper, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/Wrapper.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Wrapper, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/Wrapper.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "id", "tail" : "(): MessageID", "member" : "neko.Wrapper.id", "link" : "neko\/Wrapper.html#id:neko.MessageID", "kind" : "def"}, {"label" : "from", "tail" : "(): PID", "member" : "neko.Wrapper.from", "link" : "neko\/Wrapper.html#from:neko.PID", "kind" : "def"}, {"label" : "destinations", "tail" : "(): Set[PID]", "member" : "neko.Wrapper.destinations", "link" : "neko\/Wrapper.html#destinations:Set[neko.PID]", "kind" : "def"}, {"member" : "neko.Wrapper#<init>", "error" : "unsupported entity"}, {"label" : "toPrettyString", "tail" : ": String", "member" : "neko.Message.toPrettyString", "link" : "neko\/Wrapper.html#toPrettyString:String", "kind" : "lazy val"}, {"label" : "IDType", "tail" : "", "member" : "neko.Message.IDType", "link" : "neko\/Wrapper.html#IDType=neko.MessageID", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/Wrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/Wrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/Wrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/Wrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/Wrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/Wrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/Wrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Wrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Wrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/Wrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/Wrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/Wrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/Wrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/Wrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/Wrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/Wrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/Wrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/Wrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/Wrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/Wrapper.html", "kind" : "class"}], "neko.topology" : [{"name" : "neko.topology.Clique", "shortDescription" : "", "object" : "neko\/topology\/Clique$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/topology\/Clique.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/topology\/Clique.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Clique) ⇒ Boolean, msg: ⇒ Any): Clique", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Clique.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Clique) ⇒ Boolean): Clique", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Clique.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Clique", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Clique.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Clique", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Clique.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Clique, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/topology\/Clique.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Clique, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/topology\/Clique.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "union", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Clique.union", "link" : "neko\/topology\/Clique.html#union(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Clique.intersect", "link" : "neko\/topology\/Clique.html#intersect(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Clique.diff", "link" : "neko\/topology\/Clique.html#diff(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "underlying", "tail" : ": Graph[Int, UnDiEdge]", "member" : "neko.topology.Clique.underlying", "link" : "neko\/topology\/Clique.html#underlying:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "lazy val"}, {"label" : "isConnected", "tail" : "(): Boolean", "member" : "neko.topology.Clique.isConnected", "link" : "neko\/topology\/Clique.html#isConnected:Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(process: PID): Boolean", "member" : "neko.topology.Clique.contains", "link" : "neko\/topology\/Clique.html#contains(process:neko.PID):Boolean", "kind" : "def"}, {"label" : "numberOfEdges", "tail" : "(): Int", "member" : "neko.topology.Clique.numberOfEdges", "link" : "neko\/topology\/Clique.html#numberOfEdges:Int", "kind" : "def"}, {"label" : "neighborsFor", "tail" : "(process: PID): Option[Set[PID]]", "member" : "neko.topology.Clique.neighborsFor", "link" : "neko\/topology\/Clique.html#neighborsFor(process:neko.PID):Option[Set[neko.PID]]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "neko.topology.Clique.size", "link" : "neko\/topology\/Clique.html#size:Int", "kind" : "val"}, {"label" : "processSet", "tail" : ": Set[PID]", "member" : "neko.topology.Clique.processSet", "link" : "neko\/topology\/Clique.html#processSet:Set[neko.PID]", "kind" : "val"}, {"member" : "neko.topology.Clique#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Clique.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Clique.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Clique.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Clique.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Clique.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Clique.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Clique.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Clique.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Clique.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Clique.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Clique.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Clique.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Clique.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Clique.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Clique.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Clique.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Clique.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Clique.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Clique.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.Clique.apply", "link" : "neko\/topology\/Clique$.html#apply(n:Int):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range): Topology", "member" : "neko.topology.Clique.apply", "link" : "neko\/topology\/Clique$.html#apply(range:Range):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Clique$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Clique$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Clique$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Clique$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Clique$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Clique$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Clique$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Clique$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Clique$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Clique$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Clique$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Clique$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Clique$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Clique$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Clique$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Clique$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Clique$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Clique$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Clique$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/topology\/Clique.html", "kind" : "class"}, {"name" : "neko.topology.Combinator", "shortDescription" : "", "object" : "neko\/topology\/Combinator$.html", "members_object" : [{"label" : "Diff", "tail" : "", "member" : "neko.topology.Combinator.Diff", "link" : "neko\/topology\/Combinator$.html#DiffextendsTopology", "kind" : "class"}, {"label" : "Intersect", "tail" : "", "member" : "neko.topology.Combinator.Intersect", "link" : "neko\/topology\/Combinator$.html#IntersectextendsTopology", "kind" : "class"}, {"label" : "Union", "tail" : "", "member" : "neko.topology.Combinator.Union", "link" : "neko\/topology\/Combinator$.html#UnionextendsTopology", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Combinator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Combinator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Combinator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Combinator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Combinator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Combinator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Combinator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Combinator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Combinator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Combinator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Combinator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Combinator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Combinator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Combinator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Combinator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Combinator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Combinator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Combinator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Combinator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.topology.DirectedRing", "shortDescription" : "", "object" : "neko\/topology\/DirectedRing$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/topology\/DirectedRing.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/topology\/DirectedRing.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DirectedRing) ⇒ Boolean, msg: ⇒ Any): DirectedRing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/DirectedRing.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DirectedRing) ⇒ Boolean): DirectedRing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/DirectedRing.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DirectedRing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/DirectedRing.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DirectedRing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/DirectedRing.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DirectedRing, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/topology\/DirectedRing.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DirectedRing, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/topology\/DirectedRing.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "union", "tail" : "(that: Topology): Topology", "member" : "neko.topology.DirectedRing.union", "link" : "neko\/topology\/DirectedRing.html#union(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Topology): Topology", "member" : "neko.topology.DirectedRing.intersect", "link" : "neko\/topology\/DirectedRing.html#intersect(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Topology): Topology", "member" : "neko.topology.DirectedRing.diff", "link" : "neko\/topology\/DirectedRing.html#diff(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "underlying", "tail" : "(): Graph[Int, UnDiEdge]", "member" : "neko.topology.DirectedRing.underlying", "link" : "neko\/topology\/DirectedRing.html#underlying:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "isConnected", "tail" : "(): Boolean", "member" : "neko.topology.DirectedRing.isConnected", "link" : "neko\/topology\/DirectedRing.html#isConnected:Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(process: PID): Boolean", "member" : "neko.topology.DirectedRing.contains", "link" : "neko\/topology\/DirectedRing.html#contains(process:neko.PID):Boolean", "kind" : "def"}, {"label" : "numberOfEdges", "tail" : "(): Int", "member" : "neko.topology.DirectedRing.numberOfEdges", "link" : "neko\/topology\/DirectedRing.html#numberOfEdges:Int", "kind" : "def"}, {"label" : "neighborsFor", "tail" : "(process: PID): Option[Set[PID]]", "member" : "neko.topology.DirectedRing.neighborsFor", "link" : "neko\/topology\/DirectedRing.html#neighborsFor(process:neko.PID):Option[Set[neko.PID]]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "neko.topology.DirectedRing.size", "link" : "neko\/topology\/DirectedRing.html#size:Int", "kind" : "val"}, {"label" : "processSet", "tail" : ": Set[PID]", "member" : "neko.topology.DirectedRing.processSet", "link" : "neko\/topology\/DirectedRing.html#processSet:Set[neko.PID]", "kind" : "val"}, {"member" : "neko.topology.DirectedRing#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/DirectedRing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/DirectedRing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/DirectedRing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/DirectedRing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/DirectedRing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/DirectedRing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/DirectedRing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/DirectedRing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/DirectedRing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/DirectedRing.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/DirectedRing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/DirectedRing.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/DirectedRing.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/DirectedRing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/DirectedRing.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/DirectedRing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/DirectedRing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/DirectedRing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/DirectedRing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.DirectedRing.apply", "link" : "neko\/topology\/DirectedRing$.html#apply(n:Int):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int, ascending: Boolean): Topology", "member" : "neko.topology.DirectedRing.apply", "link" : "neko\/topology\/DirectedRing$.html#apply(n:Int,ascending:Boolean):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range): Topology", "member" : "neko.topology.DirectedRing.apply", "link" : "neko\/topology\/DirectedRing$.html#apply(range:Range):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range, ascending: Boolean): Topology", "member" : "neko.topology.DirectedRing.apply", "link" : "neko\/topology\/DirectedRing$.html#apply(range:Range,ascending:Boolean):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/DirectedRing$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/DirectedRing$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/DirectedRing$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/DirectedRing$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/DirectedRing$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/DirectedRing$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/DirectedRing$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/DirectedRing$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/DirectedRing$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/DirectedRing$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/DirectedRing$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/DirectedRing$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/DirectedRing$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/DirectedRing$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/DirectedRing$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/DirectedRing$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/DirectedRing$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/DirectedRing$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/DirectedRing$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/topology\/DirectedRing.html", "kind" : "class"}, {"name" : "neko.topology.GeometricRandom", "shortDescription" : "Factory object to create a geometric random graph.", "object" : "neko\/topology\/GeometricRandom$.html", "members_object" : [{"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.GeometricRandom.apply", "link" : "neko\/topology\/GeometricRandom$.html#apply(n:Int):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int, alpha: Double): Topology", "member" : "neko.topology.GeometricRandom.apply", "link" : "neko\/topology\/GeometricRandom$.html#apply(n:Int,alpha:Double):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range): Topology", "member" : "neko.topology.GeometricRandom.apply", "link" : "neko\/topology\/GeometricRandom$.html#apply(range:Range):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range, alpha: Double): Topology", "member" : "neko.topology.GeometricRandom.apply", "link" : "neko\/topology\/GeometricRandom$.html#apply(range:Range,alpha:Double):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/GeometricRandom$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/GeometricRandom$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/GeometricRandom$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/GeometricRandom$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/GeometricRandom$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/GeometricRandom$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/GeometricRandom$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/GeometricRandom$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/GeometricRandom$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/GeometricRandom$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/GeometricRandom$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/GeometricRandom$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/GeometricRandom$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/GeometricRandom$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/GeometricRandom$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/GeometricRandom$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/GeometricRandom$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/GeometricRandom$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/GeometricRandom$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.topology.GraphTopology", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/topology\/GraphTopology.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/topology\/GraphTopology.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GraphTopology) ⇒ Boolean, msg: ⇒ Any): GraphTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/GraphTopology.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GraphTopology) ⇒ Boolean): GraphTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/GraphTopology.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GraphTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/GraphTopology.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GraphTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/GraphTopology.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GraphTopology, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/topology\/GraphTopology.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GraphTopology, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/topology\/GraphTopology.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "combine", "tail" : "(that: Topology)(f: (Graph[Int, UnDiEdge], Graph[Int, UnDiEdge]) ⇒ Graph[Int, UnDiEdge]): Topology", "member" : "neko.topology.GraphTopology.combine", "link" : "neko\/topology\/GraphTopology.html#combine(that:neko.topology.Topology)(f:(scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge],scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge])=>scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]):neko.topology.Topology", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Topology): Topology", "member" : "neko.topology.GraphTopology.intersect", "link" : "neko\/topology\/GraphTopology.html#intersect(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Topology): Topology", "member" : "neko.topology.GraphTopology.diff", "link" : "neko\/topology\/GraphTopology.html#diff(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "union", "tail" : "(that: Topology): Topology", "member" : "neko.topology.GraphTopology.union", "link" : "neko\/topology\/GraphTopology.html#union(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "numberOfEdges", "tail" : "(): Int", "member" : "neko.topology.GraphTopology.numberOfEdges", "link" : "neko\/topology\/GraphTopology.html#numberOfEdges:Int", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "neko.topology.GraphTopology.size", "link" : "neko\/topology\/GraphTopology.html#size:Int", "kind" : "def"}, {"label" : "isConnected", "tail" : "(): Boolean", "member" : "neko.topology.GraphTopology.isConnected", "link" : "neko\/topology\/GraphTopology.html#isConnected:Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(process: PID): Boolean", "member" : "neko.topology.GraphTopology.contains", "link" : "neko\/topology\/GraphTopology.html#contains(process:neko.PID):Boolean", "kind" : "def"}, {"label" : "neighborsFor", "tail" : "(process: PID): Option[Set[PID]]", "member" : "neko.topology.GraphTopology.neighborsFor", "link" : "neko\/topology\/GraphTopology.html#neighborsFor(process:neko.PID):Option[Set[neko.PID]]", "kind" : "def"}, {"label" : "processSet", "tail" : ": Set[PID]", "member" : "neko.topology.GraphTopology.processSet", "link" : "neko\/topology\/GraphTopology.html#processSet:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/GraphTopology.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/GraphTopology.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/GraphTopology.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/GraphTopology.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/GraphTopology.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/GraphTopology.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/GraphTopology.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/GraphTopology.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/GraphTopology.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/GraphTopology.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/GraphTopology.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/GraphTopology.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/GraphTopology.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/GraphTopology.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/GraphTopology.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/GraphTopology.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/GraphTopology.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/GraphTopology.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/GraphTopology.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "underlying", "tail" : ": Graph[Int, UnDiEdge]", "member" : "neko.topology.GraphTopology.underlying", "link" : "neko\/topology\/GraphTopology.html#underlying:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "abstract val"}], "shortDescription" : "", "trait" : "neko\/topology\/GraphTopology.html", "kind" : "trait"}, {"name" : "neko.topology.Grid", "shortDescription" : "Factory object to generate a grid topologyDescriptor.", "object" : "neko\/topology\/Grid$.html", "members_object" : [{"label" : "apply", "tail" : "(width: Int, height: Int, start: Int, withDiagonals: Boolean): Topology", "member" : "neko.topology.Grid.apply", "link" : "neko\/topology\/Grid$.html#apply(width:Int,height:Int,start:Int,withDiagonals:Boolean):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.Grid.apply", "link" : "neko\/topology\/Grid$.html#apply(n:Int):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range): Topology", "member" : "neko.topology.Grid.apply", "link" : "neko\/topology\/Grid$.html#apply(range:Range):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Grid$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Grid$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Grid$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Grid$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Grid$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Grid$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Grid$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Grid$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Grid$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Grid$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Grid$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Grid$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Grid$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Grid$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Grid$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Grid$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Grid$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Grid$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Grid$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.topology.Ladder", "shortDescription" : "", "object" : "neko\/topology\/Ladder$.html", "members_object" : [{"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.Ladder.apply", "link" : "neko\/topology\/Ladder$.html#apply(n:Int):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Ladder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Ladder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Ladder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Ladder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Ladder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Ladder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Ladder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ladder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ladder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ladder$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Ladder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Ladder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Ladder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Ladder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Ladder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Ladder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Ladder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Ladder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Ladder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.topology.Random", "shortDescription" : "Factory object to create a random graph (of type Erdös-Renyi).", "object" : "neko\/topology\/Random$.html", "members_object" : [{"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.Random.apply", "link" : "neko\/topology\/Random$.html#apply(n:Int):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range): Topology", "member" : "neko.topology.Random.apply", "link" : "neko\/topology\/Random$.html#apply(range:Range):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Random$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Random$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Random$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Random$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Random$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Random$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Random$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Random$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Random$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Random$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Random$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Random$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Random$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Random$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Random$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Random$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Random$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Random$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Random$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.topology.Ring", "shortDescription" : "", "object" : "neko\/topology\/Ring$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/topology\/Ring.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/topology\/Ring.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ring) ⇒ Boolean, msg: ⇒ Any): Ring", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Ring.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ring) ⇒ Boolean): Ring", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Ring.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Ring", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Ring.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Ring", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Ring.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Ring, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/topology\/Ring.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Ring, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/topology\/Ring.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "union", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Ring.union", "link" : "neko\/topology\/Ring.html#union(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Ring.intersect", "link" : "neko\/topology\/Ring.html#intersect(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "diff", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Ring.diff", "link" : "neko\/topology\/Ring.html#diff(that:neko.topology.Topology):neko.topology.Topology", "kind" : "def"}, {"label" : "underlying", "tail" : "(): Graph[Int, UnDiEdge]", "member" : "neko.topology.Ring.underlying", "link" : "neko\/topology\/Ring.html#underlying:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "isConnected", "tail" : "(): Boolean", "member" : "neko.topology.Ring.isConnected", "link" : "neko\/topology\/Ring.html#isConnected:Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(process: PID): Boolean", "member" : "neko.topology.Ring.contains", "link" : "neko\/topology\/Ring.html#contains(process:neko.PID):Boolean", "kind" : "def"}, {"label" : "numberOfEdges", "tail" : "(): Int", "member" : "neko.topology.Ring.numberOfEdges", "link" : "neko\/topology\/Ring.html#numberOfEdges:Int", "kind" : "def"}, {"label" : "neighborsFor", "tail" : "(process: PID): Option[Set[PID]]", "member" : "neko.topology.Ring.neighborsFor", "link" : "neko\/topology\/Ring.html#neighborsFor(process:neko.PID):Option[Set[neko.PID]]", "kind" : "def"}, {"label" : "size", "tail" : ": Int", "member" : "neko.topology.Ring.size", "link" : "neko\/topology\/Ring.html#size:Int", "kind" : "val"}, {"label" : "processSet", "tail" : ": Set[PID]", "member" : "neko.topology.Ring.processSet", "link" : "neko\/topology\/Ring.html#processSet:Set[neko.PID]", "kind" : "val"}, {"member" : "neko.topology.Ring#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Ring.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Ring.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Ring.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Ring.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Ring.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Ring.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Ring.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ring.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ring.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ring.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Ring.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Ring.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Ring.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Ring.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Ring.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Ring.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Ring.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Ring.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Ring.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.Ring.apply", "link" : "neko\/topology\/Ring$.html#apply(n:Int):neko.topology.Topology", "kind" : "def"}, {"label" : "apply", "tail" : "(range: Range): Topology", "member" : "neko.topology.Ring.apply", "link" : "neko\/topology\/Ring$.html#apply(range:Range):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Ring$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Ring$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Ring$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Ring$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Ring$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Ring$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Ring$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ring$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ring$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Ring$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Ring$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Ring$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Ring$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Ring$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Ring$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Ring$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Ring$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Ring$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Ring$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/topology\/Ring.html", "kind" : "class"}, {"name" : "neko.topology.Topology", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/topology\/Topology.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/topology\/Topology.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Topology) ⇒ Boolean, msg: ⇒ Any): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Topology.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Topology) ⇒ Boolean): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Topology.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Topology.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Topology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/Topology.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Topology, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/topology\/Topology.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Topology, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/topology\/Topology.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Topology.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Topology.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Topology.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Topology.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Topology.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Topology.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Topology.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Topology.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Topology.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Topology.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Topology.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Topology.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Topology.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Topology.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Topology.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Topology.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Topology.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Topology.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Topology.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "intersect", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Topology.intersect", "link" : "neko\/topology\/Topology.html#intersect(that:neko.topology.Topology):neko.topology.Topology", "kind" : "abstract def"}, {"label" : "diff", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Topology.diff", "link" : "neko\/topology\/Topology.html#diff(that:neko.topology.Topology):neko.topology.Topology", "kind" : "abstract def"}, {"label" : "union", "tail" : "(that: Topology): Topology", "member" : "neko.topology.Topology.union", "link" : "neko\/topology\/Topology.html#union(that:neko.topology.Topology):neko.topology.Topology", "kind" : "abstract def"}, {"label" : "numberOfEdges", "tail" : "(): Int", "member" : "neko.topology.Topology.numberOfEdges", "link" : "neko\/topology\/Topology.html#numberOfEdges:Int", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "neko.topology.Topology.size", "link" : "neko\/topology\/Topology.html#size:Int", "kind" : "abstract def"}, {"label" : "isConnected", "tail" : "(): Boolean", "member" : "neko.topology.Topology.isConnected", "link" : "neko\/topology\/Topology.html#isConnected:Boolean", "kind" : "abstract def"}, {"label" : "contains", "tail" : "(process: PID): Boolean", "member" : "neko.topology.Topology.contains", "link" : "neko\/topology\/Topology.html#contains(process:neko.PID):Boolean", "kind" : "abstract def"}, {"label" : "neighborsFor", "tail" : "(process: PID): Option[Set[PID]]", "member" : "neko.topology.Topology.neighborsFor", "link" : "neko\/topology\/Topology.html#neighborsFor(process:neko.PID):Option[Set[neko.PID]]", "kind" : "abstract def"}, {"label" : "processSet", "tail" : "(): Set[PID]", "member" : "neko.topology.Topology.processSet", "link" : "neko\/topology\/Topology.html#processSet:Set[neko.PID]", "kind" : "abstract def"}, {"label" : "underlying", "tail" : "(): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.underlying", "link" : "neko\/topology\/Topology.html#underlying:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "abstract def"}], "shortDescription" : "Describes a network topology.", "object" : "neko\/topology\/Topology$.html", "members_object" : [{"label" : "geometricRandomGraphOf", "tail" : "(range: Range, alpha: Double): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.geometricRandomGraphOf", "link" : "neko\/topology\/Topology$.html#geometricRandomGraphOf(range:Range,alpha:Double):scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "randomGraphOf", "tail" : "(range: Range): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.randomGraphOf", "link" : "neko\/topology\/Topology$.html#randomGraphOf(range:Range):scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "torusOf", "tail" : "(width: Int, height: Int, startingAt: Int, withDiagonals: Boolean): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.torusOf", "link" : "neko\/topology\/Topology$.html#torusOf(width:Int,height:Int,startingAt:Int,withDiagonals:Boolean):scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "gridOf", "tail" : "(width: Int, height: Int, startingAt: Int, withDiagonals: Boolean): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.gridOf", "link" : "neko\/topology\/Topology$.html#gridOf(width:Int,height:Int,startingAt:Int,withDiagonals:Boolean):scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "directedRingOf", "tail" : "(range: Range, ascending: Boolean): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.directedRingOf", "link" : "neko\/topology\/Topology$.html#directedRingOf(range:Range,ascending:Boolean):scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "cliqueOf", "tail" : "(range: Range): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.cliqueOf", "link" : "neko\/topology\/Topology$.html#cliqueOf(range:Range):scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "ringOf", "tail" : "(range: Range): Graph[Int, UnDiEdge]", "member" : "neko.topology.Topology.ringOf", "link" : "neko\/topology\/Topology$.html#ringOf(range:Range):scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "def"}, {"label" : "from", "tail" : "(graph: Graph[Int, UnDiEdge]): Topology", "member" : "neko.topology.Topology.from", "link" : "neko\/topology\/Topology$.html#from(graph:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]):neko.topology.Topology", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/Topology$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/Topology$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/Topology$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/Topology$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/Topology$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/Topology$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/Topology$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Topology$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Topology$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/Topology$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/Topology$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/Topology$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/Topology$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/Topology$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/Topology$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/Topology$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/Topology$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/Topology$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/Topology$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/topology\/Topology.html", "kind" : "trait"}, {"name" : "neko.topology.TopologyFactory", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/topology\/TopologyFactory.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/topology\/TopologyFactory.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TopologyFactory) ⇒ Boolean, msg: ⇒ Any): TopologyFactory", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/TopologyFactory.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TopologyFactory) ⇒ Boolean): TopologyFactory", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/TopologyFactory.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TopologyFactory", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/TopologyFactory.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TopologyFactory", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/topology\/TopologyFactory.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TopologyFactory, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/topology\/TopologyFactory.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TopologyFactory, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/topology\/TopologyFactory.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/TopologyFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/TopologyFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/TopologyFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/TopologyFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/TopologyFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/TopologyFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/TopologyFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/TopologyFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/TopologyFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/TopologyFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/TopologyFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/TopologyFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/TopologyFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/TopologyFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/TopologyFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/TopologyFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/TopologyFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/TopologyFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/TopologyFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(n: Int): Topology", "member" : "neko.topology.TopologyFactory.apply", "link" : "neko\/topology\/TopologyFactory.html#apply(n:Int):neko.topology.Topology", "kind" : "abstract def"}], "shortDescription" : "", "object" : "neko\/topology\/TopologyFactory$.html", "members_object" : [{"label" : "apply", "tail" : "(topology: Topology): TopologyFactory", "member" : "neko.topology.TopologyFactory.apply", "link" : "neko\/topology\/TopologyFactory$.html#apply(topology:neko.topology.Topology):neko.topology.TopologyFactory", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/topology\/TopologyFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/topology\/TopologyFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/topology\/TopologyFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/topology\/TopologyFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/topology\/TopologyFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/topology\/TopologyFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/topology\/TopologyFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/TopologyFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/TopologyFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/topology\/TopologyFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/topology\/TopologyFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/topology\/TopologyFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/topology\/TopologyFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/topology\/TopologyFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/topology\/TopologyFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/topology\/TopologyFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/topology\/TopologyFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/topology\/TopologyFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/topology\/TopologyFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/topology\/TopologyFactory.html", "kind" : "trait"}], "neko.network.sim" : [{"name" : "neko.network.sim.ConstantSimNetwork", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstantSimNetwork) ⇒ Boolean, msg: ⇒ Any): ConstantSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConstantSimNetwork) ⇒ Boolean): ConstantSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConstantSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConstantSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConstantSimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConstantSimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "delayForMessage", "tail" : "(dest: PID, m: Message): Option[Time]", "member" : "neko.network.sim.ConstantSimNetwork.delayForMessage", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#delayForMessage(dest:neko.PID,m:neko.Message):Option[neko.util.Time]", "kind" : "def"}, {"label" : "lambda", "tail" : ": Double", "member" : "neko.network.sim.ConstantSimNetwork.lambda", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#lambda:Double", "kind" : "val"}, {"member" : "neko.network.sim.ConstantSimNetwork#<init>", "error" : "unsupported entity"}, {"label" : "sendTo", "tail" : "(dest: PID, m: Message): Unit", "member" : "neko.network.sim.DelaySimNetwork.sendTo", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#sendTo(dest:neko.PID,m:neko.Message):Unit", "kind" : "def"}, {"label" : "neighborhoodFor", "tail" : ": Map[PID, Set[PID]]", "member" : "neko.network.sim.DelaySimNetwork.neighborhoodFor", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#neighborhoodFor:Map[neko.PID,Set[neko.PID]]", "kind" : "val"}, {"label" : "simulator", "tail" : ": Simulator", "member" : "neko.network.sim.SimNetwork.simulator", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#simulator:neko.kernel.sim.Simulator", "kind" : "val"}, {"label" : "send", "tail" : "(event: Event): Unit", "member" : "neko.network.AbstractNetwork.send", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#send(event:neko.Event):Unit", "kind" : "def"}, {"label" : "receivers_=", "tail" : "(receivers: Map[PID, Receiver]): Unit", "member" : "neko.network.AbstractNetwork.receivers_=", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#receivers_=(receivers:Map[neko.PID,neko.Receiver]):Unit", "kind" : "def"}, {"label" : "receivers", "tail" : "(): Map[PID, Receiver]", "member" : "neko.network.AbstractNetwork.receivers", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#receivers:Map[neko.PID,neko.Receiver]", "kind" : "def"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.network.AbstractNetwork.topology", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#topology:neko.topology.Topology", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.network.AbstractNetwork.N", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#N:Int", "kind" : "val"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.network.AbstractNetwork.system", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.network.Network.start", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.network.Network.preStart", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#preStart():Unit", "kind" : "def"}, {"label" : "doForProcess", "tail" : "(pid: PID)(action: (Receiver) ⇒ T): Option[T]", "member" : "neko.network.Network.doForProcess", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#doForProcess[T](pid:neko.PID)(action:neko.Receiver=>T):Option[T]", "kind" : "def"}, {"label" : "receiverFor", "tail" : "(pid: PID): Option[Receiver]", "member" : "neko.network.Network.receiverFor", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#receiverFor(pid:neko.PID):Option[neko.Receiver]", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): None.type", "member" : "neko.network.Network.senderOpt", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#senderOpt:None.type", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.network.Network.name", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#name:String", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/sim\/ConstantSimNetwork.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/sim\/ConstantSimNetwork.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/network\/sim\/ConstantSimNetwork.html", "kind" : "class"}, {"name" : "neko.network.sim.DelaySimNetwork", "shortDescription" : "generic simulated network that adds a delay to messages.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/network\/sim\/DelaySimNetwork.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/network\/sim\/DelaySimNetwork.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DelaySimNetwork) ⇒ Boolean, msg: ⇒ Any): DelaySimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/DelaySimNetwork.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (DelaySimNetwork) ⇒ Boolean): DelaySimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/DelaySimNetwork.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): DelaySimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/DelaySimNetwork.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): DelaySimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/DelaySimNetwork.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (DelaySimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/network\/sim\/DelaySimNetwork.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (DelaySimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/network\/sim\/DelaySimNetwork.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "sendTo", "tail" : "(dest: PID, m: Message): Unit", "member" : "neko.network.sim.DelaySimNetwork.sendTo", "link" : "neko\/network\/sim\/DelaySimNetwork.html#sendTo(dest:neko.PID,m:neko.Message):Unit", "kind" : "def"}, {"label" : "neighborhoodFor", "tail" : ": Map[PID, Set[PID]]", "member" : "neko.network.sim.DelaySimNetwork.neighborhoodFor", "link" : "neko\/network\/sim\/DelaySimNetwork.html#neighborhoodFor:Map[neko.PID,Set[neko.PID]]", "kind" : "val"}, {"member" : "neko.network.sim.DelaySimNetwork#<init>", "error" : "unsupported entity"}, {"label" : "simulator", "tail" : ": Simulator", "member" : "neko.network.sim.SimNetwork.simulator", "link" : "neko\/network\/sim\/DelaySimNetwork.html#simulator:neko.kernel.sim.Simulator", "kind" : "val"}, {"label" : "send", "tail" : "(event: Event): Unit", "member" : "neko.network.AbstractNetwork.send", "link" : "neko\/network\/sim\/DelaySimNetwork.html#send(event:neko.Event):Unit", "kind" : "def"}, {"label" : "receivers_=", "tail" : "(receivers: Map[PID, Receiver]): Unit", "member" : "neko.network.AbstractNetwork.receivers_=", "link" : "neko\/network\/sim\/DelaySimNetwork.html#receivers_=(receivers:Map[neko.PID,neko.Receiver]):Unit", "kind" : "def"}, {"label" : "receivers", "tail" : "(): Map[PID, Receiver]", "member" : "neko.network.AbstractNetwork.receivers", "link" : "neko\/network\/sim\/DelaySimNetwork.html#receivers:Map[neko.PID,neko.Receiver]", "kind" : "def"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.network.AbstractNetwork.topology", "link" : "neko\/network\/sim\/DelaySimNetwork.html#topology:neko.topology.Topology", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.network.AbstractNetwork.N", "link" : "neko\/network\/sim\/DelaySimNetwork.html#N:Int", "kind" : "val"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.network.AbstractNetwork.system", "link" : "neko\/network\/sim\/DelaySimNetwork.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/network\/sim\/DelaySimNetwork.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/network\/sim\/DelaySimNetwork.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.network.Network.start", "link" : "neko\/network\/sim\/DelaySimNetwork.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.network.Network.preStart", "link" : "neko\/network\/sim\/DelaySimNetwork.html#preStart():Unit", "kind" : "def"}, {"label" : "doForProcess", "tail" : "(pid: PID)(action: (Receiver) ⇒ T): Option[T]", "member" : "neko.network.Network.doForProcess", "link" : "neko\/network\/sim\/DelaySimNetwork.html#doForProcess[T](pid:neko.PID)(action:neko.Receiver=>T):Option[T]", "kind" : "def"}, {"label" : "receiverFor", "tail" : "(pid: PID): Option[Receiver]", "member" : "neko.network.Network.receiverFor", "link" : "neko\/network\/sim\/DelaySimNetwork.html#receiverFor(pid:neko.PID):Option[neko.Receiver]", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): None.type", "member" : "neko.network.Network.senderOpt", "link" : "neko\/network\/sim\/DelaySimNetwork.html#senderOpt:None.type", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.network.Network.name", "link" : "neko\/network\/sim\/DelaySimNetwork.html#name:String", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/network\/sim\/DelaySimNetwork.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/network\/sim\/DelaySimNetwork.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/sim\/DelaySimNetwork.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/sim\/DelaySimNetwork.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/sim\/DelaySimNetwork.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/sim\/DelaySimNetwork.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/sim\/DelaySimNetwork.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/sim\/DelaySimNetwork.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/sim\/DelaySimNetwork.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/DelaySimNetwork.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/DelaySimNetwork.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/DelaySimNetwork.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/sim\/DelaySimNetwork.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/sim\/DelaySimNetwork.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/sim\/DelaySimNetwork.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/sim\/DelaySimNetwork.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/sim\/DelaySimNetwork.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/sim\/DelaySimNetwork.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/sim\/DelaySimNetwork.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/sim\/DelaySimNetwork.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/sim\/DelaySimNetwork.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "delayForMessage", "tail" : "(dest: PID, m: Message): Option[Time]", "member" : "neko.network.sim.DelaySimNetwork.delayForMessage", "link" : "neko\/network\/sim\/DelaySimNetwork.html#delayForMessage(dest:neko.PID,m:neko.Message):Option[neko.util.Time]", "kind" : "abstract def"}], "class" : "neko\/network\/sim\/DelaySimNetwork.html", "kind" : "class"}, {"name" : "neko.network.sim.RandomSimNetwork", "shortDescription" : "simulated network that adds a random delay to messages.", "object" : "neko\/network\/sim\/RandomSimNetwork$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/network\/sim\/RandomSimNetwork.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/network\/sim\/RandomSimNetwork.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RandomSimNetwork) ⇒ Boolean, msg: ⇒ Any): RandomSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/RandomSimNetwork.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RandomSimNetwork) ⇒ Boolean): RandomSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/RandomSimNetwork.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RandomSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/RandomSimNetwork.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RandomSimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/RandomSimNetwork.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RandomSimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/network\/sim\/RandomSimNetwork.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RandomSimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/network\/sim\/RandomSimNetwork.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "delayForMessage", "tail" : "(dest: PID, m: Message): Option[Time]", "member" : "neko.network.sim.RandomSimNetwork.delayForMessage", "link" : "neko\/network\/sim\/RandomSimNetwork.html#delayForMessage(dest:neko.PID,m:neko.Message):Option[neko.util.Time]", "kind" : "def"}, {"label" : "rand", "tail" : ": Random", "member" : "neko.network.sim.RandomSimNetwork.rand", "link" : "neko\/network\/sim\/RandomSimNetwork.html#rand:scala.util.Random", "kind" : "val"}, {"label" : "lambda", "tail" : ": Double", "member" : "neko.network.sim.RandomSimNetwork.lambda", "link" : "neko\/network\/sim\/RandomSimNetwork.html#lambda:Double", "kind" : "val"}, {"member" : "neko.network.sim.RandomSimNetwork#<init>", "error" : "unsupported entity"}, {"label" : "sendTo", "tail" : "(dest: PID, m: Message): Unit", "member" : "neko.network.sim.DelaySimNetwork.sendTo", "link" : "neko\/network\/sim\/RandomSimNetwork.html#sendTo(dest:neko.PID,m:neko.Message):Unit", "kind" : "def"}, {"label" : "neighborhoodFor", "tail" : ": Map[PID, Set[PID]]", "member" : "neko.network.sim.DelaySimNetwork.neighborhoodFor", "link" : "neko\/network\/sim\/RandomSimNetwork.html#neighborhoodFor:Map[neko.PID,Set[neko.PID]]", "kind" : "val"}, {"label" : "simulator", "tail" : ": Simulator", "member" : "neko.network.sim.SimNetwork.simulator", "link" : "neko\/network\/sim\/RandomSimNetwork.html#simulator:neko.kernel.sim.Simulator", "kind" : "val"}, {"label" : "send", "tail" : "(event: Event): Unit", "member" : "neko.network.AbstractNetwork.send", "link" : "neko\/network\/sim\/RandomSimNetwork.html#send(event:neko.Event):Unit", "kind" : "def"}, {"label" : "receivers_=", "tail" : "(receivers: Map[PID, Receiver]): Unit", "member" : "neko.network.AbstractNetwork.receivers_=", "link" : "neko\/network\/sim\/RandomSimNetwork.html#receivers_=(receivers:Map[neko.PID,neko.Receiver]):Unit", "kind" : "def"}, {"label" : "receivers", "tail" : "(): Map[PID, Receiver]", "member" : "neko.network.AbstractNetwork.receivers", "link" : "neko\/network\/sim\/RandomSimNetwork.html#receivers:Map[neko.PID,neko.Receiver]", "kind" : "def"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.network.AbstractNetwork.topology", "link" : "neko\/network\/sim\/RandomSimNetwork.html#topology:neko.topology.Topology", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.network.AbstractNetwork.N", "link" : "neko\/network\/sim\/RandomSimNetwork.html#N:Int", "kind" : "val"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.network.AbstractNetwork.system", "link" : "neko\/network\/sim\/RandomSimNetwork.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/network\/sim\/RandomSimNetwork.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/network\/sim\/RandomSimNetwork.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.network.Network.start", "link" : "neko\/network\/sim\/RandomSimNetwork.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.network.Network.preStart", "link" : "neko\/network\/sim\/RandomSimNetwork.html#preStart():Unit", "kind" : "def"}, {"label" : "doForProcess", "tail" : "(pid: PID)(action: (Receiver) ⇒ T): Option[T]", "member" : "neko.network.Network.doForProcess", "link" : "neko\/network\/sim\/RandomSimNetwork.html#doForProcess[T](pid:neko.PID)(action:neko.Receiver=>T):Option[T]", "kind" : "def"}, {"label" : "receiverFor", "tail" : "(pid: PID): Option[Receiver]", "member" : "neko.network.Network.receiverFor", "link" : "neko\/network\/sim\/RandomSimNetwork.html#receiverFor(pid:neko.PID):Option[neko.Receiver]", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): None.type", "member" : "neko.network.Network.senderOpt", "link" : "neko\/network\/sim\/RandomSimNetwork.html#senderOpt:None.type", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.network.Network.name", "link" : "neko\/network\/sim\/RandomSimNetwork.html#name:String", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/network\/sim\/RandomSimNetwork.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/network\/sim\/RandomSimNetwork.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/sim\/RandomSimNetwork.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/sim\/RandomSimNetwork.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/sim\/RandomSimNetwork.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/sim\/RandomSimNetwork.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/sim\/RandomSimNetwork.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/sim\/RandomSimNetwork.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/sim\/RandomSimNetwork.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/RandomSimNetwork.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/RandomSimNetwork.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/RandomSimNetwork.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/sim\/RandomSimNetwork.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/sim\/RandomSimNetwork.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/sim\/RandomSimNetwork.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/sim\/RandomSimNetwork.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/sim\/RandomSimNetwork.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/sim\/RandomSimNetwork.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/sim\/RandomSimNetwork.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/sim\/RandomSimNetwork.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/sim\/RandomSimNetwork.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "randomSeed", "tail" : ": Random", "member" : "neko.network.sim.RandomSimNetwork.randomSeed", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#randomSeed:scala.util.Random", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/sim\/RandomSimNetwork$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/sim\/RandomSimNetwork$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/network\/sim\/RandomSimNetwork.html", "kind" : "class"}, {"name" : "neko.network.sim.SimNetwork", "shortDescription" : "", "object" : "neko\/network\/sim\/SimNetwork$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/network\/sim\/SimNetwork.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/network\/sim\/SimNetwork.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimNetwork) ⇒ Boolean, msg: ⇒ Any): SimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/SimNetwork.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimNetwork) ⇒ Boolean): SimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/SimNetwork.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/SimNetwork.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SimNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/sim\/SimNetwork.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/network\/sim\/SimNetwork.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SimNetwork, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/network\/sim\/SimNetwork.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "neko.network.sim.SimNetwork#<init>", "error" : "unsupported entity"}, {"label" : "simulator", "tail" : ": Simulator", "member" : "neko.network.sim.SimNetwork.simulator", "link" : "neko\/network\/sim\/SimNetwork.html#simulator:neko.kernel.sim.Simulator", "kind" : "val"}, {"label" : "send", "tail" : "(event: Event): Unit", "member" : "neko.network.AbstractNetwork.send", "link" : "neko\/network\/sim\/SimNetwork.html#send(event:neko.Event):Unit", "kind" : "def"}, {"label" : "sendTo", "tail" : "(dest: PID, m: Message): Unit", "member" : "neko.network.AbstractNetwork.sendTo", "link" : "neko\/network\/sim\/SimNetwork.html#sendTo(dest:neko.PID,m:neko.Message):Unit", "kind" : "def"}, {"label" : "receivers_=", "tail" : "(receivers: Map[PID, Receiver]): Unit", "member" : "neko.network.AbstractNetwork.receivers_=", "link" : "neko\/network\/sim\/SimNetwork.html#receivers_=(receivers:Map[neko.PID,neko.Receiver]):Unit", "kind" : "def"}, {"label" : "receivers", "tail" : "(): Map[PID, Receiver]", "member" : "neko.network.AbstractNetwork.receivers", "link" : "neko\/network\/sim\/SimNetwork.html#receivers:Map[neko.PID,neko.Receiver]", "kind" : "def"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.network.AbstractNetwork.topology", "link" : "neko\/network\/sim\/SimNetwork.html#topology:neko.topology.Topology", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.network.AbstractNetwork.N", "link" : "neko\/network\/sim\/SimNetwork.html#N:Int", "kind" : "val"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.network.AbstractNetwork.system", "link" : "neko\/network\/sim\/SimNetwork.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/network\/sim\/SimNetwork.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/network\/sim\/SimNetwork.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.network.Network.start", "link" : "neko\/network\/sim\/SimNetwork.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.network.Network.preStart", "link" : "neko\/network\/sim\/SimNetwork.html#preStart():Unit", "kind" : "def"}, {"label" : "doForProcess", "tail" : "(pid: PID)(action: (Receiver) ⇒ T): Option[T]", "member" : "neko.network.Network.doForProcess", "link" : "neko\/network\/sim\/SimNetwork.html#doForProcess[T](pid:neko.PID)(action:neko.Receiver=>T):Option[T]", "kind" : "def"}, {"label" : "receiverFor", "tail" : "(pid: PID): Option[Receiver]", "member" : "neko.network.Network.receiverFor", "link" : "neko\/network\/sim\/SimNetwork.html#receiverFor(pid:neko.PID):Option[neko.Receiver]", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): None.type", "member" : "neko.network.Network.senderOpt", "link" : "neko\/network\/sim\/SimNetwork.html#senderOpt:None.type", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.network.Network.name", "link" : "neko\/network\/sim\/SimNetwork.html#name:String", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/network\/sim\/SimNetwork.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/network\/sim\/SimNetwork.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/sim\/SimNetwork.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/sim\/SimNetwork.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/sim\/SimNetwork.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/sim\/SimNetwork.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/sim\/SimNetwork.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/sim\/SimNetwork.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/sim\/SimNetwork.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/SimNetwork.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/SimNetwork.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/SimNetwork.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/sim\/SimNetwork.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/sim\/SimNetwork.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/sim\/SimNetwork.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/sim\/SimNetwork.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/sim\/SimNetwork.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/sim\/SimNetwork.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/sim\/SimNetwork.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/sim\/SimNetwork.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/sim\/SimNetwork.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "forName", "tail" : "(className: String): Try[Class[_ <: SimNetwork]]", "member" : "neko.network.sim.SimNetwork.forName", "link" : "neko\/network\/sim\/SimNetwork$.html#forName(className:String):scala.util.Try[Class[_<:neko.network.sim.SimNetwork]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/sim\/SimNetwork$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/sim\/SimNetwork$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/sim\/SimNetwork$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/sim\/SimNetwork$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/sim\/SimNetwork$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/sim\/SimNetwork$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/sim\/SimNetwork$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/SimNetwork$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/SimNetwork$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/sim\/SimNetwork$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/sim\/SimNetwork$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/sim\/SimNetwork$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/sim\/SimNetwork$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/sim\/SimNetwork$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/sim\/SimNetwork$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/sim\/SimNetwork$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/sim\/SimNetwork$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/sim\/SimNetwork$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/sim\/SimNetwork$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/network\/sim\/SimNetwork.html", "kind" : "class"}], "neko.protocol" : [{"name" : "neko.protocol.AnonymousRounds", "shortDescription" : "Support for protocols working in a model of anonymous rounds.", "object" : "neko\/protocol\/AnonymousRounds$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/AnonymousRounds.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/AnonymousRounds.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnonymousRounds) ⇒ Boolean, msg: ⇒ Any): AnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/AnonymousRounds.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AnonymousRounds) ⇒ Boolean): AnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/AnonymousRounds.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): AnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/AnonymousRounds.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/AnonymousRounds.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AnonymousRounds, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/AnonymousRounds.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AnonymousRounds, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/AnonymousRounds.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.AnonymousRounds.onReceive", "link" : "neko\/protocol\/AnonymousRounds.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.AnonymousRounds.onSend", "link" : "neko\/protocol\/AnonymousRounds.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.protocol.AnonymousRounds.preStart", "link" : "neko\/protocol\/AnonymousRounds.html#preStart():Unit", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.protocol.AnonymousRounds.-->", "link" : "neko\/protocol\/AnonymousRounds.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"member" : "neko.protocol.AnonymousRounds#<init>", "error" : "unsupported entity"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/AnonymousRounds.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/AnonymousRounds.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/AnonymousRounds.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/AnonymousRounds.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/AnonymousRounds.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/AnonymousRounds.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/AnonymousRounds.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/AnonymousRounds.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/AnonymousRounds.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/AnonymousRounds.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/AnonymousRounds.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/AnonymousRounds.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/AnonymousRounds.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/AnonymousRounds.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/AnonymousRounds.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/AnonymousRounds.html#process:neko.PID", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/AnonymousRounds.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/AnonymousRounds.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/AnonymousRounds.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/AnonymousRounds.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/AnonymousRounds.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/AnonymousRounds.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/AnonymousRounds.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/AnonymousRounds.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/AnonymousRounds.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/AnonymousRounds.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/AnonymousRounds.html#start():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/AnonymousRounds.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/AnonymousRounds.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/AnonymousRounds.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/AnonymousRounds.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/AnonymousRounds.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/AnonymousRounds.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/AnonymousRounds.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/AnonymousRounds.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/AnonymousRounds.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/AnonymousRounds.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/AnonymousRounds.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/AnonymousRounds.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/AnonymousRounds.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/AnonymousRounds.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/AnonymousRounds.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/AnonymousRounds.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/AnonymousRounds.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/AnonymousRounds.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/AnonymousRounds.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/AnonymousRounds.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/AnonymousRounds.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Anonymized", "tail" : "", "member" : "neko.protocol.AnonymousRounds.Anonymized", "link" : "neko\/protocol\/AnonymousRounds$.html#AnonymizedextendsMulticastMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Anonymous", "tail" : "", "member" : "neko.protocol.AnonymousRounds.Anonymous", "link" : "neko\/protocol\/AnonymousRounds$.html#AnonymousextendsSignal", "kind" : "abstract class"}, {"label" : "StartRound", "tail" : "", "member" : "neko.protocol.AnonymousRounds.StartRound", "link" : "neko\/protocol\/AnonymousRounds$.html#StartRoundextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Done", "tail" : "", "member" : "neko.protocol.AnonymousRounds.Done", "link" : "neko\/protocol\/AnonymousRounds$.html#Done", "kind" : "object"}, {"label" : "InitRound", "tail" : "", "member" : "neko.protocol.AnonymousRounds.InitRound", "link" : "neko\/protocol\/AnonymousRounds$.html#InitRound", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/AnonymousRounds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/AnonymousRounds$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/AnonymousRounds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/AnonymousRounds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/AnonymousRounds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/AnonymousRounds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/AnonymousRounds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/AnonymousRounds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/AnonymousRounds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/AnonymousRounds$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/AnonymousRounds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/AnonymousRounds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/AnonymousRounds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/AnonymousRounds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/AnonymousRounds$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/AnonymousRounds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/AnonymousRounds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/AnonymousRounds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/AnonymousRounds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/AnonymousRounds.html", "kind" : "class"}, {"name" : "neko.protocol.ArbitraryTopology", "shortDescription" : "Support for simulating arbitrary network topologies.", "object" : "neko\/protocol\/ArbitraryTopology$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/ArbitraryTopology.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/ArbitraryTopology.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArbitraryTopology) ⇒ Boolean, msg: ⇒ Any): ArbitraryTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/ArbitraryTopology.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ArbitraryTopology) ⇒ Boolean): ArbitraryTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/ArbitraryTopology.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ArbitraryTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/ArbitraryTopology.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ArbitraryTopology", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/ArbitraryTopology.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ArbitraryTopology, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/ArbitraryTopology.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ArbitraryTopology, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/ArbitraryTopology.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.ArbitraryTopology.onReceive", "link" : "neko\/protocol\/ArbitraryTopology.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.ArbitraryTopology.onSend", "link" : "neko\/protocol\/ArbitraryTopology.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "neighborhood", "tail" : ": Set[Int]", "member" : "neko.protocol.ArbitraryTopology.neighborhood", "link" : "neko\/protocol\/ArbitraryTopology.html#neighborhood:Set[Int]", "kind" : "val"}, {"label" : "myNode", "tail" : ": scalax.collection.Graph.NodeT", "member" : "neko.protocol.ArbitraryTopology.myNode", "link" : "neko\/protocol\/ArbitraryTopology.html#myNode:ArbitraryTopology.this.topology.NodeT", "kind" : "val"}, {"member" : "neko.protocol.ArbitraryTopology#<init>", "error" : "unsupported entity"}, {"label" : "topology", "tail" : ": Graph[Int, UnDiEdge]", "member" : "neko.protocol.ArbitraryTopology.topology", "link" : "neko\/protocol\/ArbitraryTopology.html#topology:scalax.collection.Graph[Int,scalax.collection.GraphEdge.UnDiEdge]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/protocol\/ArbitraryTopology.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "toDotString", "tail" : "(): String", "member" : "neko.util.Topology.toDotString", "link" : "neko\/protocol\/ArbitraryTopology.html#toDotString:String", "kind" : "def"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/ArbitraryTopology.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/ArbitraryTopology.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/ArbitraryTopology.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/ArbitraryTopology.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/ArbitraryTopology.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/ArbitraryTopology.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/ArbitraryTopology.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/ArbitraryTopology.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/ArbitraryTopology.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/ArbitraryTopology.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/ArbitraryTopology.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/ArbitraryTopology.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/ArbitraryTopology.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/ArbitraryTopology.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/ArbitraryTopology.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/ArbitraryTopology.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/ArbitraryTopology.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/ArbitraryTopology.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/ArbitraryTopology.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/ArbitraryTopology.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/ArbitraryTopology.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/ArbitraryTopology.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/ArbitraryTopology.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/ArbitraryTopology.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/ArbitraryTopology.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/ArbitraryTopology.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/ArbitraryTopology.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/ArbitraryTopology.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/protocol\/ArbitraryTopology.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/ArbitraryTopology.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/ArbitraryTopology.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/ArbitraryTopology.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/ArbitraryTopology.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/ArbitraryTopology.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/ArbitraryTopology.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/ArbitraryTopology.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/ArbitraryTopology.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/ArbitraryTopology.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/ArbitraryTopology.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/ArbitraryTopology.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/ArbitraryTopology.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/ArbitraryTopology.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/ArbitraryTopology.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/ArbitraryTopology.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/ArbitraryTopology.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/ArbitraryTopology.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/ArbitraryTopology.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/ArbitraryTopology.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/ArbitraryTopology.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/ArbitraryTopology.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "MessageShell", "tail" : "", "member" : "neko.protocol.ArbitraryTopology.MessageShell", "link" : "neko\/protocol\/ArbitraryTopology$.html#MessageShellextendsMulticastMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/ArbitraryTopology$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/ArbitraryTopology$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/ArbitraryTopology$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/ArbitraryTopology$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/ArbitraryTopology$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/ArbitraryTopology$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/ArbitraryTopology$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/ArbitraryTopology$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/ArbitraryTopology$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/ArbitraryTopology$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/ArbitraryTopology$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/ArbitraryTopology$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/ArbitraryTopology$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/ArbitraryTopology$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/ArbitraryTopology$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/ArbitraryTopology$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/ArbitraryTopology$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/ArbitraryTopology$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/ArbitraryTopology$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/ArbitraryTopology.html", "kind" : "class"}, {"name" : "neko.protocol.FastAnonymousRounds", "shortDescription" : "Support for protocols working in a model of anonymous rounds.", "object" : "neko\/protocol\/FastAnonymousRounds$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/FastAnonymousRounds.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/FastAnonymousRounds.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FastAnonymousRounds) ⇒ Boolean, msg: ⇒ Any): FastAnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FastAnonymousRounds.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FastAnonymousRounds) ⇒ Boolean): FastAnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FastAnonymousRounds.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): FastAnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FastAnonymousRounds.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FastAnonymousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FastAnonymousRounds.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FastAnonymousRounds, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/FastAnonymousRounds.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FastAnonymousRounds, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/FastAnonymousRounds.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.FastAnonymousRounds.onReceive", "link" : "neko\/protocol\/FastAnonymousRounds.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.FastAnonymousRounds.onSend", "link" : "neko\/protocol\/FastAnonymousRounds.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.protocol.FastAnonymousRounds.preStart", "link" : "neko\/protocol\/FastAnonymousRounds.html#preStart():Unit", "kind" : "def"}, {"label" : "sendRound", "tail" : ": Int", "member" : "neko.protocol.FastAnonymousRounds.sendRound", "link" : "neko\/protocol\/FastAnonymousRounds.html#sendRound:Int", "kind" : "var"}, {"label" : "anonList", "tail" : ": List[Anonymous]", "member" : "neko.protocol.FastAnonymousRounds.anonList", "link" : "neko\/protocol\/FastAnonymousRounds.html#anonList:List[neko.protocol.FastAnonymousRounds.Anonymous]", "kind" : "var"}, {"label" : "roundNum", "tail" : ": Int", "member" : "neko.protocol.FastAnonymousRounds.roundNum", "link" : "neko\/protocol\/FastAnonymousRounds.html#roundNum:Int", "kind" : "var"}, {"label" : "coordinator", "tail" : ": PID", "member" : "neko.protocol.FastAnonymousRounds.coordinator", "link" : "neko\/protocol\/FastAnonymousRounds.html#coordinator:neko.PID", "kind" : "val"}, {"member" : "neko.protocol.FastAnonymousRounds#<init>", "error" : "unsupported entity"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/FastAnonymousRounds.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/FastAnonymousRounds.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/FastAnonymousRounds.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/FastAnonymousRounds.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/FastAnonymousRounds.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/FastAnonymousRounds.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/FastAnonymousRounds.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/FastAnonymousRounds.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/FastAnonymousRounds.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/FastAnonymousRounds.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/FastAnonymousRounds.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/FastAnonymousRounds.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/FastAnonymousRounds.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/FastAnonymousRounds.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/FastAnonymousRounds.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/FastAnonymousRounds.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/FastAnonymousRounds.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/FastAnonymousRounds.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/FastAnonymousRounds.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/FastAnonymousRounds.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/FastAnonymousRounds.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/FastAnonymousRounds.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/FastAnonymousRounds.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/FastAnonymousRounds.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/FastAnonymousRounds.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/FastAnonymousRounds.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/FastAnonymousRounds.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/FastAnonymousRounds.html#start():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/FastAnonymousRounds.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/FastAnonymousRounds.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/FastAnonymousRounds.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/FastAnonymousRounds.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/FastAnonymousRounds.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/FastAnonymousRounds.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/FastAnonymousRounds.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/FastAnonymousRounds.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/FastAnonymousRounds.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/FastAnonymousRounds.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FastAnonymousRounds.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FastAnonymousRounds.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FastAnonymousRounds.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/FastAnonymousRounds.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/FastAnonymousRounds.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/FastAnonymousRounds.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/FastAnonymousRounds.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/FastAnonymousRounds.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/FastAnonymousRounds.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/FastAnonymousRounds.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/FastAnonymousRounds.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "RoundPropose", "tail" : "", "member" : "neko.protocol.FastAnonymousRounds.RoundPropose", "link" : "neko\/protocol\/FastAnonymousRounds$.html#RoundProposeextendsUnicastMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Round", "tail" : "", "member" : "neko.protocol.FastAnonymousRounds.Round", "link" : "neko\/protocol\/FastAnonymousRounds$.html#RoundextendsMulticastMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Anonymous", "tail" : "", "member" : "neko.protocol.FastAnonymousRounds.Anonymous", "link" : "neko\/protocol\/FastAnonymousRounds$.html#AnonymousextendsSignal", "kind" : "abstract class"}, {"label" : "StartRound", "tail" : "", "member" : "neko.protocol.FastAnonymousRounds.StartRound", "link" : "neko\/protocol\/FastAnonymousRounds$.html#StartRoundextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Done", "tail" : "", "member" : "neko.protocol.FastAnonymousRounds.Done", "link" : "neko\/protocol\/FastAnonymousRounds$.html#Done", "kind" : "object"}, {"label" : "InitRound", "tail" : "", "member" : "neko.protocol.FastAnonymousRounds.InitRound", "link" : "neko\/protocol\/FastAnonymousRounds$.html#InitRound", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/FastAnonymousRounds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/FastAnonymousRounds$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/FastAnonymousRounds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/FastAnonymousRounds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/FastAnonymousRounds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/FastAnonymousRounds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/FastAnonymousRounds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FastAnonymousRounds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FastAnonymousRounds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FastAnonymousRounds$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/FastAnonymousRounds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/FastAnonymousRounds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/FastAnonymousRounds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/FastAnonymousRounds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/FastAnonymousRounds$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/FastAnonymousRounds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/FastAnonymousRounds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/FastAnonymousRounds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/FastAnonymousRounds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/FastAnonymousRounds.html", "kind" : "class"}, {"name" : "neko.protocol.FIFOChannel", "shortDescription" : "Implements multi-party FIFO channels.", "object" : "neko\/protocol\/FIFOChannel$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/FIFOChannel.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/FIFOChannel.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FIFOChannel) ⇒ Boolean, msg: ⇒ Any): FIFOChannel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FIFOChannel.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FIFOChannel) ⇒ Boolean): FIFOChannel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FIFOChannel.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): FIFOChannel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FIFOChannel.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FIFOChannel", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/FIFOChannel.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FIFOChannel, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/FIFOChannel.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FIFOChannel, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/FIFOChannel.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.FIFOChannel.onReceive", "link" : "neko\/protocol\/FIFOChannel.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.FIFOChannel.onSend", "link" : "neko\/protocol\/FIFOChannel.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"member" : "neko.protocol.FIFOChannel#<init>", "error" : "unsupported entity"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/FIFOChannel.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/FIFOChannel.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/FIFOChannel.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/FIFOChannel.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/FIFOChannel.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/FIFOChannel.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/FIFOChannel.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/FIFOChannel.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/FIFOChannel.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/FIFOChannel.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/FIFOChannel.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/FIFOChannel.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/FIFOChannel.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/FIFOChannel.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/FIFOChannel.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/FIFOChannel.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/FIFOChannel.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/FIFOChannel.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/FIFOChannel.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/FIFOChannel.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/FIFOChannel.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/FIFOChannel.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/FIFOChannel.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/FIFOChannel.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/FIFOChannel.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/FIFOChannel.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/FIFOChannel.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/FIFOChannel.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/protocol\/FIFOChannel.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/FIFOChannel.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/FIFOChannel.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/FIFOChannel.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/FIFOChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/FIFOChannel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/FIFOChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/FIFOChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/FIFOChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/FIFOChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/FIFOChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FIFOChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FIFOChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FIFOChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/FIFOChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/FIFOChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/FIFOChannel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/FIFOChannel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/FIFOChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/FIFOChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/FIFOChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/FIFOChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "FIFOOrdering", "tail" : ": Ordering[FIFOInfo]", "member" : "neko.protocol.FIFOChannel.FIFOOrdering", "link" : "neko\/protocol\/FIFOChannel$.html#FIFOOrdering:scala.math.Ordering[neko.protocol.FIFOChannel.FIFOInfo]", "kind" : "val"}, {"label" : "FIFOInfo", "tail" : "", "member" : "neko.protocol.FIFOChannel.FIFOInfo", "link" : "neko\/protocol\/FIFOChannel$.html#FIFOInfoextendsProductwithSerializable", "kind" : "case class"}, {"label" : "FIFOSequenced", "tail" : "", "member" : "neko.protocol.FIFOChannel.FIFOSequenced", "link" : "neko\/protocol\/FIFOChannel$.html#FIFOSequencedextendsWrapperwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/FIFOChannel$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/FIFOChannel$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/FIFOChannel$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/FIFOChannel$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/FIFOChannel$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/FIFOChannel$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/FIFOChannel$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FIFOChannel$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FIFOChannel$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/FIFOChannel$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/FIFOChannel$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/FIFOChannel$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/FIFOChannel$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/FIFOChannel$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/FIFOChannel$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/FIFOChannel$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/FIFOChannel$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/FIFOChannel$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/FIFOChannel$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/FIFOChannel.html", "kind" : "class"}, {"name" : "neko.protocol.LamportClock", "shortDescription" : "Support for Lamport clocks.", "object" : "neko\/protocol\/LamportClock$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/LamportClock.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/LamportClock.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LamportClock) ⇒ Boolean, msg: ⇒ Any): LamportClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/LamportClock.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LamportClock) ⇒ Boolean): LamportClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/LamportClock.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): LamportClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/LamportClock.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): LamportClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/LamportClock.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (LamportClock, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/LamportClock.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (LamportClock, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/LamportClock.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.LamportClock.onReceive", "link" : "neko\/protocol\/LamportClock.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.LamportClock.onSend", "link" : "neko\/protocol\/LamportClock.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "internal", "tail" : "(action: ⇒ Unit): Unit", "member" : "neko.protocol.LamportClock.internal", "link" : "neko\/protocol\/LamportClock.html#internal(action:=>Unit):Unit", "kind" : "def"}, {"label" : "time", "tail" : "(): Long", "member" : "neko.protocol.LamportClock.time", "link" : "neko\/protocol\/LamportClock.html#time:Long", "kind" : "def"}, {"member" : "neko.protocol.LamportClock#<init>", "error" : "unsupported entity"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/LamportClock.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/LamportClock.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/LamportClock.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/LamportClock.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/LamportClock.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/LamportClock.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/LamportClock.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/LamportClock.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/LamportClock.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/LamportClock.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/LamportClock.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/LamportClock.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/LamportClock.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/LamportClock.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/LamportClock.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/LamportClock.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/LamportClock.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/LamportClock.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/LamportClock.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/LamportClock.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/LamportClock.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/LamportClock.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/LamportClock.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/LamportClock.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/LamportClock.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/LamportClock.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/LamportClock.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/LamportClock.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/protocol\/LamportClock.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/LamportClock.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/LamportClock.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/LamportClock.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/LamportClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/LamportClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/LamportClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/LamportClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/LamportClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/LamportClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/LamportClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/LamportClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/LamportClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/LamportClock.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/LamportClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/LamportClock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/LamportClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/LamportClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/LamportClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/LamportClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/LamportClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/LamportClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "LCTimeStamped", "tail" : "", "member" : "neko.protocol.LamportClock.LCTimeStamped", "link" : "neko\/protocol\/LamportClock$.html#LCTimeStampedextendsWrapperwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/LamportClock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/LamportClock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/LamportClock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/LamportClock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/LamportClock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/LamportClock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/LamportClock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/LamportClock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/LamportClock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/LamportClock$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/LamportClock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/LamportClock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/LamportClock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/LamportClock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/LamportClock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/LamportClock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/LamportClock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/LamportClock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/LamportClock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/LamportClock.html", "kind" : "class"}, {"name" : "neko.protocol.RoundBased", "shortDescription" : "Support for round-based protocols.", "object" : "neko\/protocol\/RoundBased$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/RoundBased.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/RoundBased.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RoundBased) ⇒ Boolean, msg: ⇒ Any): RoundBased", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBased.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RoundBased) ⇒ Boolean): RoundBased", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBased.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RoundBased", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBased.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RoundBased", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBased.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RoundBased, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/RoundBased.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RoundBased, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/RoundBased.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.RoundBased.onReceive", "link" : "neko\/protocol\/RoundBased.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.RoundBased.onSend", "link" : "neko\/protocol\/RoundBased.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.protocol.RoundBased.preStart", "link" : "neko\/protocol\/RoundBased.html#preStart():Unit", "kind" : "def"}, {"member" : "neko.protocol.RoundBased#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/protocol\/RoundBased.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/RoundBased.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/RoundBased.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/RoundBased.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/RoundBased.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/RoundBased.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/RoundBased.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/RoundBased.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/RoundBased.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/RoundBased.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/RoundBased.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/RoundBased.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/RoundBased.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/RoundBased.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/RoundBased.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/RoundBased.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/RoundBased.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/RoundBased.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/RoundBased.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/RoundBased.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/RoundBased.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/RoundBased.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/RoundBased.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/RoundBased.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/RoundBased.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/RoundBased.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/RoundBased.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/RoundBased.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/RoundBased.html#start():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/RoundBased.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/RoundBased.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/RoundBased.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/RoundBased.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/RoundBased.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/RoundBased.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/RoundBased.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/RoundBased.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/RoundBased.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/RoundBased.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBased.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBased.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBased.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/RoundBased.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/RoundBased.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/RoundBased.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/RoundBased.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/RoundBased.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/RoundBased.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/RoundBased.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/RoundBased.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "StartRound", "tail" : "", "member" : "neko.protocol.RoundBased.StartRound", "link" : "neko\/protocol\/RoundBased$.html#StartRoundextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Round", "tail" : "", "member" : "neko.protocol.RoundBased.Round", "link" : "neko\/protocol\/RoundBased$.html#RoundextendsWrapperwithProductwithSerializable", "kind" : "case class"}, {"label" : "InitRound", "tail" : "", "member" : "neko.protocol.RoundBased.InitRound", "link" : "neko\/protocol\/RoundBased$.html#InitRound", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/RoundBased$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/RoundBased$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/RoundBased$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/RoundBased$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/RoundBased$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/RoundBased$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/RoundBased$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBased$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBased$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBased$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/RoundBased$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/RoundBased$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/RoundBased$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/RoundBased$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/RoundBased$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/RoundBased$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/RoundBased$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/RoundBased$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/RoundBased$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/RoundBased.html", "kind" : "class"}, {"name" : "neko.protocol.RoundBasedWithFailures", "shortDescription" : "", "object" : "neko\/protocol\/RoundBasedWithFailures$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/RoundBasedWithFailures.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/RoundBasedWithFailures.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RoundBasedWithFailures) ⇒ Boolean, msg: ⇒ Any): RoundBasedWithFailures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBasedWithFailures.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RoundBasedWithFailures) ⇒ Boolean): RoundBasedWithFailures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBasedWithFailures.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RoundBasedWithFailures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBasedWithFailures.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RoundBasedWithFailures", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/RoundBasedWithFailures.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RoundBasedWithFailures, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/RoundBasedWithFailures.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RoundBasedWithFailures, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/RoundBasedWithFailures.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.RoundBasedWithFailures.onReceive", "link" : "neko\/protocol\/RoundBasedWithFailures.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.RoundBasedWithFailures.onSend", "link" : "neko\/protocol\/RoundBasedWithFailures.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.protocol.RoundBasedWithFailures.preStart", "link" : "neko\/protocol\/RoundBasedWithFailures.html#preStart():Unit", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.protocol.RoundBasedWithFailures.-->", "link" : "neko\/protocol\/RoundBasedWithFailures.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "rand", "tail" : ": Random", "member" : "neko.protocol.RoundBasedWithFailures.rand", "link" : "neko\/protocol\/RoundBasedWithFailures.html#rand:scala.util.Random", "kind" : "val"}, {"member" : "neko.protocol.RoundBasedWithFailures#<init>", "error" : "unsupported entity"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/RoundBasedWithFailures.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/RoundBasedWithFailures.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/RoundBasedWithFailures.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/RoundBasedWithFailures.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/RoundBasedWithFailures.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/RoundBasedWithFailures.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/RoundBasedWithFailures.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/RoundBasedWithFailures.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/RoundBasedWithFailures.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/RoundBasedWithFailures.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/RoundBasedWithFailures.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/RoundBasedWithFailures.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/RoundBasedWithFailures.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/RoundBasedWithFailures.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/RoundBasedWithFailures.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/RoundBasedWithFailures.html#process:neko.PID", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/RoundBasedWithFailures.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/RoundBasedWithFailures.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/RoundBasedWithFailures.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/RoundBasedWithFailures.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/RoundBasedWithFailures.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/RoundBasedWithFailures.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/RoundBasedWithFailures.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/RoundBasedWithFailures.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/RoundBasedWithFailures.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/RoundBasedWithFailures.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/RoundBasedWithFailures.html#start():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/RoundBasedWithFailures.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/RoundBasedWithFailures.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/RoundBasedWithFailures.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/RoundBasedWithFailures.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/RoundBasedWithFailures.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/RoundBasedWithFailures.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/RoundBasedWithFailures.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/RoundBasedWithFailures.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/RoundBasedWithFailures.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/RoundBasedWithFailures.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBasedWithFailures.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBasedWithFailures.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBasedWithFailures.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/RoundBasedWithFailures.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/RoundBasedWithFailures.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/RoundBasedWithFailures.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/RoundBasedWithFailures.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/RoundBasedWithFailures.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/RoundBasedWithFailures.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/RoundBasedWithFailures.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/RoundBasedWithFailures.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Crashed", "tail" : "", "member" : "neko.protocol.RoundBasedWithFailures.Crashed", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#CrashedextendsMulticastMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "PartialCrashed", "tail" : "", "member" : "neko.protocol.RoundBasedWithFailures.PartialCrashed", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#PartialCrashedextendsWrapperwithProductwithSerializable", "kind" : "case class"}, {"label" : "CRASH", "tail" : "", "member" : "neko.protocol.RoundBasedWithFailures.CRASH", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#CRASHextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "StartRound", "tail" : "", "member" : "neko.protocol.RoundBasedWithFailures.StartRound", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#StartRoundextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "InitRound", "tail" : "", "member" : "neko.protocol.RoundBasedWithFailures.InitRound", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#InitRound", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "neko.protocol.RoundBasedWithFailures.State", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#State", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "neko.protocol.RoundBasedWithFailures.State", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#StateextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/RoundBasedWithFailures$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/RoundBasedWithFailures$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/RoundBasedWithFailures.html", "kind" : "class"}, {"name" : "neko.protocol.SafraTerminationDetection", "shortDescription" : "Algorithm to detect the termination of a distributed computation.", "object" : "neko\/protocol\/SafraTerminationDetection$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/SafraTerminationDetection.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/SafraTerminationDetection.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SafraTerminationDetection) ⇒ Boolean, msg: ⇒ Any): SafraTerminationDetection", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SafraTerminationDetection.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SafraTerminationDetection) ⇒ Boolean): SafraTerminationDetection", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SafraTerminationDetection.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SafraTerminationDetection", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SafraTerminationDetection.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SafraTerminationDetection", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SafraTerminationDetection.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SafraTerminationDetection, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/SafraTerminationDetection.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SafraTerminationDetection, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/SafraTerminationDetection.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.SafraTerminationDetection.onReceive", "link" : "neko\/protocol\/SafraTerminationDetection.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.SafraTerminationDetection.onSend", "link" : "neko\/protocol\/SafraTerminationDetection.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"member" : "neko.protocol.SafraTerminationDetection#<init>", "error" : "unsupported entity"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/SafraTerminationDetection.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/SafraTerminationDetection.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/SafraTerminationDetection.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/SafraTerminationDetection.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/SafraTerminationDetection.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/SafraTerminationDetection.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/SafraTerminationDetection.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/SafraTerminationDetection.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/SafraTerminationDetection.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/SafraTerminationDetection.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/SafraTerminationDetection.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/SafraTerminationDetection.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/SafraTerminationDetection.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/SafraTerminationDetection.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/SafraTerminationDetection.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/SafraTerminationDetection.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/SafraTerminationDetection.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/SafraTerminationDetection.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/SafraTerminationDetection.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/SafraTerminationDetection.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/SafraTerminationDetection.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/SafraTerminationDetection.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/SafraTerminationDetection.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/SafraTerminationDetection.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/SafraTerminationDetection.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/SafraTerminationDetection.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/SafraTerminationDetection.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/SafraTerminationDetection.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/protocol\/SafraTerminationDetection.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/SafraTerminationDetection.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/SafraTerminationDetection.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/SafraTerminationDetection.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/SafraTerminationDetection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/SafraTerminationDetection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/SafraTerminationDetection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/SafraTerminationDetection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/SafraTerminationDetection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/SafraTerminationDetection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/SafraTerminationDetection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SafraTerminationDetection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SafraTerminationDetection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SafraTerminationDetection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/SafraTerminationDetection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/SafraTerminationDetection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/SafraTerminationDetection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/SafraTerminationDetection.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/SafraTerminationDetection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/SafraTerminationDetection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/SafraTerminationDetection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/SafraTerminationDetection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "TokenHolder", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.TokenHolder", "link" : "neko\/protocol\/SafraTerminationDetection$.html#TokenHolderextendsUnicastMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Token", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.Token", "link" : "neko\/protocol\/SafraTerminationDetection$.html#TokenextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Announce", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.Announce", "link" : "neko\/protocol\/SafraTerminationDetection$.html#AnnounceextendsMulticastMessagewithProductwithSerializable", "kind" : "case class"}, {"label" : "Payload", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.Payload", "link" : "neko\/protocol\/SafraTerminationDetection$.html#PayloadextendsWrapperwithProductwithSerializable", "kind" : "case class"}, {"label" : "Passive", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.Passive", "link" : "neko\/protocol\/SafraTerminationDetection$.html#Passive", "kind" : "object"}, {"label" : "Active", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.Active", "link" : "neko\/protocol\/SafraTerminationDetection$.html#Active", "kind" : "object"}, {"label" : "State", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.State", "link" : "neko\/protocol\/SafraTerminationDetection$.html#StateextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "White", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.White", "link" : "neko\/protocol\/SafraTerminationDetection$.html#White", "kind" : "object"}, {"label" : "Black", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.Black", "link" : "neko\/protocol\/SafraTerminationDetection$.html#Black", "kind" : "object"}, {"label" : "StateColor", "tail" : "", "member" : "neko.protocol.SafraTerminationDetection.StateColor", "link" : "neko\/protocol\/SafraTerminationDetection$.html#StateColorextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/SafraTerminationDetection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/SafraTerminationDetection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/SafraTerminationDetection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/SafraTerminationDetection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/SafraTerminationDetection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/SafraTerminationDetection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/SafraTerminationDetection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SafraTerminationDetection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SafraTerminationDetection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SafraTerminationDetection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/SafraTerminationDetection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/SafraTerminationDetection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/SafraTerminationDetection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/SafraTerminationDetection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/SafraTerminationDetection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/SafraTerminationDetection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/SafraTerminationDetection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/SafraTerminationDetection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/SafraTerminationDetection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/SafraTerminationDetection.html", "kind" : "class"}, {"name" : "neko.protocol.SynchronousRounds", "shortDescription" : "", "object" : "neko\/protocol\/SynchronousRounds$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/SynchronousRounds.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/SynchronousRounds.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SynchronousRounds) ⇒ Boolean, msg: ⇒ Any): SynchronousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SynchronousRounds.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SynchronousRounds) ⇒ Boolean): SynchronousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SynchronousRounds.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SynchronousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SynchronousRounds.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SynchronousRounds", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/SynchronousRounds.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SynchronousRounds, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/SynchronousRounds.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SynchronousRounds, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/SynchronousRounds.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "Receive", "tail" : "", "member" : "neko.ActiveProtocol.Receive", "link" : "neko\/ActiveProtocol.html#Receive", "kind" : "object"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.SynchronousRounds.onSend", "link" : "neko\/protocol\/SynchronousRounds.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "neko.protocol.SynchronousRounds.run", "link" : "neko\/protocol\/SynchronousRounds.html#run():Unit", "kind" : "def"}, {"member" : "neko.protocol.SynchronousRounds#<init>", "error" : "unsupported entity"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.Sending.DELIVER", "link" : "neko\/protocol\/SynchronousRounds.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.Sending.send", "link" : "neko\/protocol\/SynchronousRounds.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ActiveProtocol.setTrace", "link" : "neko\/protocol\/SynchronousRounds.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ActiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ActiveProtocol.SEND", "link" : "neko\/protocol\/SynchronousRounds.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "sleep", "tail" : "(duration: Time): Unit", "member" : "neko.ActiveProtocol.sleep", "link" : "neko\/protocol\/SynchronousRounds.html#sleep(duration:neko.util.Time):Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(withTimeout: Time): Option[Event]", "member" : "neko.ActiveProtocol.receive", "link" : "neko\/protocol\/SynchronousRounds.html#receive(withTimeout:neko.util.Time):Option[neko.Event]", "kind" : "def"}, {"label" : "receive", "tail" : "(): Event", "member" : "neko.ActiveProtocol.receive", "link" : "neko\/protocol\/SynchronousRounds.html#receive():neko.Event", "kind" : "def"}, {"label" : "hasPendingMessages", "tail" : "(): Boolean", "member" : "neko.ActiveProtocol.hasPendingMessages", "link" : "neko\/protocol\/SynchronousRounds.html#hasPendingMessages:Boolean", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.ActiveProtocol.onReceive", "link" : "neko\/protocol\/SynchronousRounds.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "deliver", "tail" : "(event: Event): Unit", "member" : "neko.ActiveProtocol.deliver", "link" : "neko\/protocol\/SynchronousRounds.html#deliver(event:neko.Event):Unit", "kind" : "def"}, {"label" : "RECEIVE", "tail" : "(withTimeout: Time): Event", "member" : "neko.ActiveProtocol.RECEIVE", "link" : "neko\/protocol\/SynchronousRounds.html#RECEIVE(withTimeout:neko.util.Time):neko.Event", "kind" : "def"}, {"label" : "RECEIVE", "tail" : "(): Event", "member" : "neko.ActiveProtocol.RECEIVE", "link" : "neko\/protocol\/SynchronousRounds.html#RECEIVE():neko.Event", "kind" : "def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/SynchronousRounds.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/protocol\/SynchronousRounds.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/SynchronousRounds.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/SynchronousRounds.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.start", "link" : "neko\/protocol\/SynchronousRounds.html#start():Unit", "kind" : "final def"}, {"label" : "willFinish", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.willFinish", "link" : "neko\/protocol\/SynchronousRounds.html#willFinish():Unit", "kind" : "def"}, {"label" : "willWait", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.willWait", "link" : "neko\/protocol\/SynchronousRounds.html#willWait():Unit", "kind" : "def"}, {"label" : "activityID", "tail" : ": ActivityID", "member" : "neko.kernel.ManagedActivity.activityID", "link" : "neko\/protocol\/SynchronousRounds.html#activityID:neko.kernel.ActivityID", "kind" : "val"}, {"label" : "activityManager", "tail" : ": ActivityManager", "member" : "neko.kernel.ManagedActivity.activityManager", "link" : "neko\/protocol\/SynchronousRounds.html#activityManager:neko.kernel.ActivityManager", "kind" : "val"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/SynchronousRounds.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/SynchronousRounds.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/SynchronousRounds.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/SynchronousRounds.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/SynchronousRounds.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/SynchronousRounds.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/SynchronousRounds.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/SynchronousRounds.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/SynchronousRounds.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/SynchronousRounds.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/SynchronousRounds.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/SynchronousRounds.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/SynchronousRounds.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/SynchronousRounds.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/SynchronousRounds.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/SynchronousRounds.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/SynchronousRounds.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/SynchronousRounds.html#onShutdown():Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.Protocol.onFinish", "link" : "neko\/protocol\/SynchronousRounds.html#onFinish():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/protocol\/SynchronousRounds.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/SynchronousRounds.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/SynchronousRounds.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/SynchronousRounds.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/SynchronousRounds.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/SynchronousRounds.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/SynchronousRounds.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/SynchronousRounds.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/SynchronousRounds.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/SynchronousRounds.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/SynchronousRounds.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SynchronousRounds.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SynchronousRounds.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SynchronousRounds.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/SynchronousRounds.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/SynchronousRounds.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/SynchronousRounds.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/SynchronousRounds.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/SynchronousRounds.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/SynchronousRounds.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/SynchronousRounds.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/SynchronousRounds.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "StartRound", "tail" : "", "member" : "neko.protocol.SynchronousRounds.StartRound", "link" : "neko\/protocol\/SynchronousRounds$.html#StartRoundextendsSignalwithProductwithSerializable", "kind" : "case class"}, {"label" : "Round", "tail" : "", "member" : "neko.protocol.SynchronousRounds.Round", "link" : "neko\/protocol\/SynchronousRounds$.html#RoundextendsWrapperwithProductwithSerializable", "kind" : "case class"}, {"label" : "Done", "tail" : "", "member" : "neko.protocol.SynchronousRounds.Done", "link" : "neko\/protocol\/SynchronousRounds$.html#Done", "kind" : "object"}, {"label" : "InitRound", "tail" : "", "member" : "neko.protocol.SynchronousRounds.InitRound", "link" : "neko\/protocol\/SynchronousRounds$.html#InitRound", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/SynchronousRounds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/SynchronousRounds$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/SynchronousRounds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/SynchronousRounds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/SynchronousRounds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/SynchronousRounds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/SynchronousRounds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SynchronousRounds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SynchronousRounds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/SynchronousRounds$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/SynchronousRounds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/SynchronousRounds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/SynchronousRounds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/SynchronousRounds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/SynchronousRounds$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/SynchronousRounds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/SynchronousRounds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/SynchronousRounds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/SynchronousRounds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/SynchronousRounds.html", "kind" : "class"}, {"name" : "neko.protocol.VectorClock", "shortDescription" : "Support for vector clocks.", "object" : "neko\/protocol\/VectorClock$.html", "members_class" : [{"label" : "toParArray", "tail" : "(): ParArray[T]", "member" : "scala.collection.parallel.CollectionsHaveToParArray.toParArray", "link" : "neko\/protocol\/VectorClock.html#toParArray:scala.collection.parallel.mutable.ParArray[T]", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/protocol\/VectorClock.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/protocol\/VectorClock.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VectorClock) ⇒ Boolean, msg: ⇒ Any): VectorClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/VectorClock.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VectorClock) ⇒ Boolean): VectorClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/VectorClock.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): VectorClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/VectorClock.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): VectorClock", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/protocol\/VectorClock.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (VectorClock, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/protocol\/VectorClock.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (VectorClock, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/protocol\/VectorClock.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "onReceive", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.VectorClock.onReceive", "link" : "neko\/protocol\/VectorClock.html#onReceive:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "onSend", "tail" : "(): PartialFunction[Event, Unit]", "member" : "neko.protocol.VectorClock.onSend", "link" : "neko\/protocol\/VectorClock.html#onSend:PartialFunction[neko.Event,Unit]", "kind" : "def"}, {"label" : "internal", "tail" : "(action: ⇒ Unit): Unit", "member" : "neko.protocol.VectorClock.internal", "link" : "neko\/protocol\/VectorClock.html#internal(action:=>Unit):Unit", "kind" : "def"}, {"label" : "time", "tail" : "(): IndexedSeq[Long]", "member" : "neko.protocol.VectorClock.time", "link" : "neko\/protocol\/VectorClock.html#time:IndexedSeq[Long]", "kind" : "def"}, {"member" : "neko.protocol.VectorClock#<init>", "error" : "unsupported entity"}, {"label" : "setTrace", "tail" : "(obj: A, nameOfVariable: String*)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.ReactiveProtocol.setTrace", "link" : "neko\/protocol\/VectorClock.html#setTrace[A](obj:A,nameOfVariable:String*)(implicitevidence$1:ReactiveProtocol.this.tracer.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.send", "link" : "neko\/protocol\/VectorClock.html#send(m:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.deliver", "link" : "neko\/protocol\/VectorClock.html#deliver(m:neko.Event):Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.DELIVER", "link" : "neko\/protocol\/VectorClock.html#DELIVER(m:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(m: Event): Unit", "member" : "neko.ReactiveProtocol.SEND", "link" : "neko\/protocol\/VectorClock.html#SEND(m:neko.Event):Unit", "kind" : "def"}, {"label" : "onFinish", "tail" : "(): Unit", "member" : "neko.ReactiveProtocol.onFinish", "link" : "neko\/protocol\/VectorClock.html#onFinish():Unit", "kind" : "final def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/protocol\/VectorClock.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "BROADCAST", "tail" : "(m: BroadcastMessage): Unit", "member" : "neko.Receiving.BROADCAST", "link" : "neko\/protocol\/VectorClock.html#BROADCAST(m:neko.BroadcastMessage):Unit", "kind" : "def"}, {"label" : "listenTo", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.ListenerUtils.listenTo", "link" : "neko\/protocol\/VectorClock.html#listenTo(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "eventTracer", "tail" : "(): EventTracer", "member" : "neko.ProtocolImpl.eventTracer", "link" : "neko\/protocol\/VectorClock.html#eventTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.ProtocolImpl.toString", "link" : "neko\/protocol\/VectorClock.html#toString():String", "kind" : "def"}, {"label" : "id", "tail" : ": ProtoID", "member" : "neko.ProtocolImpl.id", "link" : "neko\/protocol\/VectorClock.html#id:neko.ProtoID", "kind" : "val"}, {"label" : "system", "tail" : "(): NekoSystem", "member" : "neko.ProtocolImpl.system", "link" : "neko\/protocol\/VectorClock.html#system:neko.kernel.NekoSystem", "kind" : "def"}, {"label" : "dispatcher", "tail" : "(): Dispatcher", "member" : "neko.ProtocolImpl.dispatcher", "link" : "neko\/protocol\/VectorClock.html#dispatcher:neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "out", "tail" : "(): PrintWriter", "member" : "neko.ProtocolImpl.out", "link" : "neko\/protocol\/VectorClock.html#out:java.io.PrintWriter", "kind" : "def"}, {"label" : "process", "tail" : "(): PID", "member" : "neko.ProtocolImpl.process", "link" : "neko\/protocol\/VectorClock.html#process:neko.PID", "kind" : "def"}, {"label" : "-->", "tail" : "(sender: Sender): Unit", "member" : "neko.ProtocolUtils.-->", "link" : "neko\/protocol\/VectorClock.html#-->(sender:neko.Sender):Unit", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): Option[Sender]", "member" : "neko.ProtocolUtils.senderOpt", "link" : "neko\/protocol\/VectorClock.html#senderOpt:Option[neko.Sender]", "kind" : "def"}, {"label" : "sender", "tail" : "(): Sender", "member" : "neko.ProtocolUtils.sender", "link" : "neko\/protocol\/VectorClock.html#sender:neko.Sender", "kind" : "def"}, {"label" : "receiver_=", "tail" : "(receiver: Receiver): Unit", "member" : "neko.ProtocolUtils.receiver_=", "link" : "neko\/protocol\/VectorClock.html#receiver_=(receiver:neko.Receiver):Unit", "kind" : "def"}, {"label" : "receiver", "tail" : "(): Receiver", "member" : "neko.ProtocolUtils.receiver", "link" : "neko\/protocol\/VectorClock.html#receiver:neko.Receiver", "kind" : "def"}, {"label" : "neighbors", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.neighbors", "link" : "neko\/protocol\/VectorClock.html#neighbors:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "ALL", "tail" : ": Set[PID]", "member" : "neko.ProtocolUtils.ALL", "link" : "neko\/protocol\/VectorClock.html#ALL:Set[neko.PID]", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.ProtocolUtils.N", "link" : "neko\/protocol\/VectorClock.html#N:Int", "kind" : "lazy val"}, {"label" : "me", "tail" : ": PID", "member" : "neko.ProtocolUtils.me", "link" : "neko\/protocol\/VectorClock.html#me:neko.PID", "kind" : "lazy val"}, {"label" : "onError", "tail" : "(e: Throwable): Unit", "member" : "neko.Protocol.onError", "link" : "neko\/protocol\/VectorClock.html#onError(e:Throwable):Unit", "kind" : "def"}, {"label" : "onShutdown", "tail" : "(): Unit", "member" : "neko.Protocol.onShutdown", "link" : "neko\/protocol\/VectorClock.html#onShutdown():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.Protocol.start", "link" : "neko\/protocol\/VectorClock.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.Protocol.preStart", "link" : "neko\/protocol\/VectorClock.html#preStart():Unit", "kind" : "def"}, {"label" : "context", "tail" : "(): Some[PID]", "member" : "neko.Protocol.context", "link" : "neko\/protocol\/VectorClock.html#context:Some[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.Protocol.simpleName", "link" : "neko\/protocol\/VectorClock.html#simpleName:String", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.Protocol.name", "link" : "neko\/protocol\/VectorClock.html#name:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/VectorClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/VectorClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/VectorClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/VectorClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/VectorClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/VectorClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/VectorClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/VectorClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/VectorClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/VectorClock.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/VectorClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/VectorClock.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/VectorClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/VectorClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/VectorClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/VectorClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/VectorClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/VectorClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "VCTimeStamped", "tail" : "", "member" : "neko.protocol.VectorClock.VCTimeStamped", "link" : "neko\/protocol\/VectorClock$.html#VCTimeStampedextendsWrapperwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/protocol\/VectorClock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/protocol\/VectorClock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/protocol\/VectorClock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/protocol\/VectorClock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/protocol\/VectorClock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/protocol\/VectorClock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/protocol\/VectorClock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/VectorClock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/VectorClock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/protocol\/VectorClock$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/protocol\/VectorClock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/protocol\/VectorClock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/protocol\/VectorClock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/protocol\/VectorClock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/protocol\/VectorClock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/protocol\/VectorClock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/protocol\/VectorClock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/protocol\/VectorClock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/protocol\/VectorClock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/protocol\/VectorClock.html", "kind" : "class"}], "neko.kernel" : [{"name" : "neko.kernel.ActivityID", "shortDescription" : "identifier of an activity.", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/ActivityID.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/ActivityID.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActivityID) ⇒ Boolean, msg: ⇒ Any): ActivityID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityID.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActivityID) ⇒ Boolean): ActivityID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityID.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ActivityID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityID.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ActivityID", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityID.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ActivityID, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/ActivityID.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ActivityID, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/ActivityID.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "idWith", "tail" : "(newID: Int): SameType", "member" : "neko.kernel.ActivityID.idWith", "link" : "neko\/kernel\/ActivityID.html#idWith(newID:Int):ActivityID.this.SameType", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.kernel.ActivityID.name", "link" : "neko\/kernel\/ActivityID.html#name:String", "kind" : "def"}, {"label" : "SameType", "tail" : "", "member" : "neko.kernel.ActivityID.SameType", "link" : "neko\/kernel\/ActivityID.html#SameType=neko.kernel.ActivityID", "kind" : "type"}, {"member" : "neko.kernel.ActivityID#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Int", "member" : "neko.kernel.ActivityID.value", "link" : "neko\/kernel\/ActivityID.html#value:Int", "kind" : "val"}, {"label" : "map2", "tail" : "(that: ID[B])(f: (Int, B) ⇒ Int): SameType", "member" : "neko.ID.map2", "link" : "neko\/kernel\/ActivityID.html#map2[B<:T](that:neko.ID[B])(f:(T,B)=>T):ID.this.SameType", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Int) ⇒ Int): SameType", "member" : "neko.ID.map", "link" : "neko\/kernel\/ActivityID.html#map(f:T=>T):ID.this.SameType", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/ActivityID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/ActivityID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/ActivityID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/ActivityID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/ActivityID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/ActivityID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/ActivityID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityID.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/ActivityID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/ActivityID.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/ActivityID.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/ActivityID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/ActivityID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/ActivityID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/kernel\/ActivityID.html", "kind" : "case class"}, {"name" : "neko.kernel.ActivityManager", "shortDescription" : "handles the lockstep execution of registered concurrent activities(protocol objects that implement the trait ManagedActivity).", "object" : "neko\/kernel\/ActivityManager$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/ActivityManager.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/ActivityManager.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActivityManager) ⇒ Boolean, msg: ⇒ Any): ActivityManager", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityManager.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActivityManager) ⇒ Boolean): ActivityManager", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityManager.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ActivityManager", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityManager.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ActivityManager", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ActivityManager.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ActivityManager, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/ActivityManager.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ActivityManager, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/ActivityManager.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "join", "tail" : "(): Unit", "member" : "neko.kernel.ActivityManager.join", "link" : "neko\/kernel\/ActivityManager.html#join():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(whenDone: ⇒ Unit): Unit", "member" : "neko.kernel.ActivityManager.start", "link" : "neko\/kernel\/ActivityManager.html#start(whenDone:=>Unit):Unit", "kind" : "def"}, {"label" : "unfinishedActivities", "tail" : "(): String", "member" : "neko.kernel.ActivityManager.unfinishedActivities", "link" : "neko\/kernel\/ActivityManager.html#unfinishedActivities:String", "kind" : "def"}, {"label" : "hasPendingMessages", "tail" : "(): Boolean", "member" : "neko.kernel.ActivityManager.hasPendingMessages", "link" : "neko\/kernel\/ActivityManager.html#hasPendingMessages:Boolean", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "neko.kernel.ActivityManager.reset", "link" : "neko\/kernel\/ActivityManager.html#reset():Unit", "kind" : "def"}, {"label" : "willStart", "tail" : "(id: ActivityID): Unit", "member" : "neko.kernel.ActivityManager.willStart", "link" : "neko\/kernel\/ActivityManager.html#willStart(id:neko.kernel.ActivityID):Unit", "kind" : "def"}, {"label" : "willFinish", "tail" : "(id: ActivityID): Unit", "member" : "neko.kernel.ActivityManager.willFinish", "link" : "neko\/kernel\/ActivityManager.html#willFinish(id:neko.kernel.ActivityID):Unit", "kind" : "def"}, {"label" : "willWait", "tail" : "(id: ActivityID): Unit", "member" : "neko.kernel.ActivityManager.willWait", "link" : "neko\/kernel\/ActivityManager.html#willWait(id:neko.kernel.ActivityID):Unit", "kind" : "def"}, {"label" : "registerAction", "tail" : "(action: () ⇒ Unit): Unit", "member" : "neko.kernel.ActivityManager.registerAction", "link" : "neko\/kernel\/ActivityManager.html#registerAction(action:()=>Unit):Unit", "kind" : "def"}, {"label" : "registerActivity", "tail" : "(activeProtocol: ManagedActivity): ActivityID", "member" : "neko.kernel.ActivityManager.registerActivity", "link" : "neko\/kernel\/ActivityManager.html#registerActivity(activeProtocol:neko.kernel.ManagedActivity):neko.kernel.ActivityID", "kind" : "def"}, {"label" : "abnormallyTerminated", "tail" : "(): Option[Set[String]]", "member" : "neko.kernel.ActivityManager.abnormallyTerminated", "link" : "neko\/kernel\/ActivityManager.html#abnormallyTerminated:Option[Set[String]]", "kind" : "def"}, {"label" : "allActivitiesFinished", "tail" : "(): Boolean", "member" : "neko.kernel.ActivityManager.allActivitiesFinished", "link" : "neko\/kernel\/ActivityManager.html#allActivitiesFinished:Boolean", "kind" : "def"}, {"member" : "neko.kernel.ActivityManager#<init>", "error" : "unsupported entity"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.kernel.ActivityManager.system", "link" : "neko\/kernel\/ActivityManager.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/kernel\/ActivityManager.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/ActivityManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/ActivityManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/ActivityManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/ActivityManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/ActivityManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/ActivityManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/ActivityManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityManager.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/ActivityManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/ActivityManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/ActivityManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/ActivityManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/ActivityManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/ActivityManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/ActivityManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/ActivityManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/ActivityManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Status", "tail" : "", "member" : "neko.kernel.ActivityManager.Status", "link" : "neko\/kernel\/ActivityManager$.html#Status", "kind" : "object"}, {"label" : "Status", "tail" : "", "member" : "neko.kernel.ActivityManager.Status", "link" : "neko\/kernel\/ActivityManager$.html#StatusextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/ActivityManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/ActivityManager$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/ActivityManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/ActivityManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/ActivityManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/ActivityManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/ActivityManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ActivityManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/ActivityManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/ActivityManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/ActivityManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/ActivityManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/ActivityManager$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/ActivityManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/ActivityManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/ActivityManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/ActivityManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/ActivityManager.html", "kind" : "class"}, {"name" : "neko.kernel.Dispatcher", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/Dispatcher.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/Dispatcher.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Dispatcher) ⇒ Boolean, msg: ⇒ Any): Dispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Dispatcher.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Dispatcher) ⇒ Boolean): Dispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Dispatcher.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Dispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Dispatcher.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Dispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Dispatcher.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Dispatcher, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/Dispatcher.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Dispatcher, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/Dispatcher.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "deliver", "tail" : "(ev: Event): Unit", "member" : "neko.kernel.Dispatcher.deliver", "link" : "neko\/kernel\/Dispatcher.html#deliver(ev:neko.Event):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/Dispatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/Dispatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/Dispatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/Dispatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/Dispatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/Dispatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/Dispatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Dispatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Dispatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Dispatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/Dispatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/Dispatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/Dispatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/Dispatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/Dispatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/Dispatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/Dispatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/Dispatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/Dispatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "protocolsFor", "tail" : "(clazz: Class[_ <: Event]): Seq[Receiver]", "member" : "neko.kernel.Dispatcher.protocolsFor", "link" : "neko\/kernel\/Dispatcher.html#protocolsFor(clazz:Class[_<:neko.Event]):Seq[neko.Receiver]", "kind" : "abstract def"}, {"label" : "unregisterAllFor", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.kernel.Dispatcher.unregisterAllFor", "link" : "neko\/kernel\/Dispatcher.html#unregisterAllFor(clazz:Class[_<:neko.Event]):Unit", "kind" : "abstract def"}, {"label" : "unregisterFor", "tail" : "(clazz: Class[_ <: Event], proto: Receiver): Unit", "member" : "neko.kernel.Dispatcher.unregisterFor", "link" : "neko\/kernel\/Dispatcher.html#unregisterFor(clazz:Class[_<:neko.Event],proto:neko.Receiver):Unit", "kind" : "abstract def"}, {"label" : "registerFor", "tail" : "(clazz: Class[_ <: Event], proto: Receiver): Unit", "member" : "neko.kernel.Dispatcher.registerFor", "link" : "neko\/kernel\/Dispatcher.html#registerFor(clazz:Class[_<:neko.Event],proto:neko.Receiver):Unit", "kind" : "abstract def"}, {"label" : "orphanEventHandler", "tail" : "(): Receiver", "member" : "neko.kernel.Dispatcher.orphanEventHandler", "link" : "neko\/kernel\/Dispatcher.html#orphanEventHandler:neko.Receiver", "kind" : "abstract def"}], "shortDescription" : "", "object" : "neko\/kernel\/Dispatcher$.html", "members_object" : [{"label" : "withClassLookup", "tail" : "(): Dispatcher", "member" : "neko.kernel.Dispatcher.withClassLookup", "link" : "neko\/kernel\/Dispatcher$.html#withClassLookup():neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "apply", "tail" : "(): Dispatcher", "member" : "neko.kernel.Dispatcher.apply", "link" : "neko\/kernel\/Dispatcher$.html#apply():neko.kernel.Dispatcher", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/Dispatcher$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/Dispatcher$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/Dispatcher$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/Dispatcher$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/Dispatcher$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/Dispatcher$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/Dispatcher$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Dispatcher$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Dispatcher$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Dispatcher$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/Dispatcher$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/Dispatcher$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/Dispatcher$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/Dispatcher$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/Dispatcher$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/Dispatcher$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/Dispatcher$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/Dispatcher$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/Dispatcher$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/kernel\/Dispatcher.html", "kind" : "trait"}, {"name" : "neko.kernel.Initializer", "shortDescription" : "", "object" : "neko\/kernel\/Initializer$.html", "members_object" : [{"label" : "fromURL", "tail" : "(url: URL): Config", "member" : "neko.kernel.Initializer.fromURL", "link" : "neko\/kernel\/Initializer$.html#fromURL(url:java.net.URL):com.typesafe.config.Config", "kind" : "def"}, {"label" : "fromFile", "tail" : "(file: File): Config", "member" : "neko.kernel.Initializer.fromFile", "link" : "neko\/kernel\/Initializer$.html#fromFile(file:java.io.File):com.typesafe.config.Config", "kind" : "def"}, {"label" : "fromMap", "tail" : "(configMap: Map[String, _]): Config", "member" : "neko.kernel.Initializer.fromMap", "link" : "neko\/kernel\/Initializer$.html#fromMap(configMap:Map[String,_]):com.typesafe.config.Config", "kind" : "def"}, {"label" : "fromArgs", "tail" : "(args: Array[String]): Config", "member" : "neko.kernel.Initializer.fromArgs", "link" : "neko\/kernel\/Initializer$.html#fromArgs(args:Array[String]):com.typesafe.config.Config", "kind" : "def"}, {"label" : "baseConfig", "tail" : ": Config", "member" : "neko.kernel.Initializer.baseConfig", "link" : "neko\/kernel\/Initializer$.html#baseConfig:com.typesafe.config.Config", "kind" : "val"}, {"label" : "configFor", "tail" : "(processNum: Int, initializer: Class[_], logLevel: Level, logFile: Option[String]): Config", "member" : "neko.kernel.Initializer.configFor", "link" : "neko\/kernel\/Initializer$.html#configFor(processNum:Int,initializer:Class[_],logLevel:ch.qos.logback.classic.Level,logFile:Option[String]):com.typesafe.config.Config", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/Initializer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/Initializer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/Initializer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/Initializer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/Initializer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/Initializer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/Initializer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Initializer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Initializer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Initializer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/Initializer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/Initializer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/Initializer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/Initializer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/Initializer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/Initializer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/Initializer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/Initializer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/Initializer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.kernel.ManagedActivity", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/ManagedActivity.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/ManagedActivity.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ManagedActivity) ⇒ Boolean, msg: ⇒ Any): ManagedActivity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ManagedActivity.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ManagedActivity) ⇒ Boolean): ManagedActivity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ManagedActivity.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ManagedActivity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ManagedActivity.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ManagedActivity", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ManagedActivity.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ManagedActivity, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/ManagedActivity.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ManagedActivity, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/ManagedActivity.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.start", "link" : "neko\/kernel\/ManagedActivity.html#start():Unit", "kind" : "final def"}, {"label" : "willFinish", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.willFinish", "link" : "neko\/kernel\/ManagedActivity.html#willFinish():Unit", "kind" : "def"}, {"label" : "willWait", "tail" : "(): Unit", "member" : "neko.kernel.ManagedActivity.willWait", "link" : "neko\/kernel\/ManagedActivity.html#willWait():Unit", "kind" : "def"}, {"label" : "activityID", "tail" : ": ActivityID", "member" : "neko.kernel.ManagedActivity.activityID", "link" : "neko\/kernel\/ManagedActivity.html#activityID:neko.kernel.ActivityID", "kind" : "val"}, {"label" : "activityManager", "tail" : ": ActivityManager", "member" : "neko.kernel.ManagedActivity.activityManager", "link" : "neko\/kernel\/ManagedActivity.html#activityManager:neko.kernel.ActivityManager", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/ManagedActivity.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/ManagedActivity.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/ManagedActivity.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/ManagedActivity.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/ManagedActivity.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/ManagedActivity.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/ManagedActivity.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ManagedActivity.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ManagedActivity.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ManagedActivity.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/ManagedActivity.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/ManagedActivity.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/ManagedActivity.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/ManagedActivity.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/ManagedActivity.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/ManagedActivity.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/ManagedActivity.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/ManagedActivity.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/ManagedActivity.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hasPendingMessages", "tail" : "(): Boolean", "member" : "neko.kernel.ManagedActivity.hasPendingMessages", "link" : "neko\/kernel\/ManagedActivity.html#hasPendingMessages:Boolean", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.kernel.ManagedActivity.name", "link" : "neko\/kernel\/ManagedActivity.html#name:String", "kind" : "abstract def"}], "shortDescription" : "Trait that should be mixed in with any protocol having its own thread of execution (i.e., aninstance of java.lang.Runnable).", "trait" : "neko\/kernel\/ManagedActivity.html", "kind" : "trait"}, {"name" : "neko.kernel.NekoSystem", "shortDescription" : "", "object" : "neko\/kernel\/NekoSystem$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/NekoSystem.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/NekoSystem.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoSystem) ⇒ Boolean, msg: ⇒ Any): NekoSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/NekoSystem.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoSystem) ⇒ Boolean): NekoSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/NekoSystem.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NekoSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/NekoSystem.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NekoSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/NekoSystem.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NekoSystem, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/NekoSystem.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NekoSystem, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/NekoSystem.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "newTimer", "tail" : "(): Timer", "member" : "neko.kernel.NekoSystem.newTimer", "link" : "neko\/kernel\/NekoSystem.html#newTimer():neko.Timer", "kind" : "def"}, {"label" : "currentTime", "tail" : "(): Time", "member" : "neko.kernel.NekoSystem.currentTime", "link" : "neko\/kernel\/NekoSystem.html#currentTime:neko.util.Time", "kind" : "def"}, {"label" : "startNetwork", "tail" : "(): Unit", "member" : "neko.kernel.NekoSystem.startNetwork", "link" : "neko\/kernel\/NekoSystem.html#startNetwork():Unit", "kind" : "def"}, {"label" : "mainloop", "tail" : "(onFinish: (Time) ⇒ Unit): Unit", "member" : "neko.kernel.NekoSystem.mainloop", "link" : "neko\/kernel\/NekoSystem.html#mainloop(onFinish:neko.util.Time=>Unit):Unit", "kind" : "def"}, {"label" : "processes", "tail" : ": Map[PID, NekoProcess]", "member" : "neko.kernel.NekoSystem.processes", "link" : "neko\/kernel\/NekoSystem.html#processes:Map[neko.PID,neko.NekoProcess]", "kind" : "val"}, {"label" : "network", "tail" : ": Network", "member" : "neko.kernel.NekoSystem.network", "link" : "neko\/kernel\/NekoSystem.html#network:neko.network.Network", "kind" : "val"}, {"label" : "processSet", "tail" : ": Set[PID]", "member" : "neko.kernel.NekoSystem.processSet", "link" : "neko\/kernel\/NekoSystem.html#processSet:Set[neko.PID]", "kind" : "val"}, {"label" : "processIDs", "tail" : ": Seq[PID]", "member" : "neko.kernel.NekoSystem.processIDs", "link" : "neko\/kernel\/NekoSystem.html#processIDs:Seq[neko.PID]", "kind" : "val"}, {"label" : "timer", "tail" : ": Timer", "member" : "neko.kernel.NekoSystem.timer", "link" : "neko\/kernel\/NekoSystem.html#timer:neko.Timer", "kind" : "val"}, {"label" : "simulator", "tail" : ": Simulator", "member" : "neko.kernel.NekoSystem.simulator", "link" : "neko\/kernel\/NekoSystem.html#simulator:neko.kernel.sim.Simulator", "kind" : "val"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "neko.kernel.NekoSystem.scheduler", "link" : "neko\/kernel\/NekoSystem.html#scheduler:neko.kernel.Scheduler", "kind" : "val"}, {"label" : "activityManager", "tail" : ": ActivityManager", "member" : "neko.kernel.NekoSystem.activityManager", "link" : "neko\/kernel\/NekoSystem.html#activityManager:neko.kernel.ActivityManager", "kind" : "val"}, {"label" : "processNum", "tail" : ": Int", "member" : "neko.kernel.NekoSystem.processNum", "link" : "neko\/kernel\/NekoSystem.html#processNum:Int", "kind" : "val"}, {"label" : "executionContext", "tail" : ": ExecutionContext", "member" : "neko.kernel.NekoSystem.executionContext", "link" : "neko\/kernel\/NekoSystem.html#executionContext:scala.concurrent.ExecutionContext", "kind" : "val"}, {"label" : "executorService", "tail" : ": ExecutorService", "member" : "neko.kernel.NekoSystem.executorService", "link" : "neko\/kernel\/NekoSystem.html#executorService:java.util.concurrent.ExecutorService", "kind" : "val"}, {"member" : "neko.kernel.NekoSystem#<init>", "error" : "unsupported entity"}, {"label" : "config", "tail" : ": NekoConfig", "member" : "neko.kernel.NekoSystem.config", "link" : "neko\/kernel\/NekoSystem.html#config:neko.config.NekoConfig", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/kernel\/NekoSystem.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/NekoSystem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/NekoSystem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/NekoSystem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/NekoSystem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/NekoSystem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/NekoSystem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/NekoSystem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/NekoSystem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/NekoSystem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/NekoSystem.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/NekoSystem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/NekoSystem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/NekoSystem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/NekoSystem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/NekoSystem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/NekoSystem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/NekoSystem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/NekoSystem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/NekoSystem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createNetwork", "tail" : "(): Network", "member" : "neko.kernel.NekoSystem.createNetwork", "link" : "neko\/kernel\/NekoSystem.html#createNetwork():neko.network.Network", "kind" : "abstract def"}], "members_object" : [{"label" : "forClass", "tail" : "(clazz: Class[T])(config: NekoConfig): Try[T]", "member" : "neko.kernel.NekoSystem.forClass", "link" : "neko\/kernel\/NekoSystem$.html#forClass[T<:neko.kernel.NekoSystem](clazz:Class[T])(config:neko.config.NekoConfig):scala.util.Try[T]", "kind" : "def"}, {"label" : "forName", "tail" : "(className: String)(config: NekoConfig): Try[NekoSystem]", "member" : "neko.kernel.NekoSystem.forName", "link" : "neko\/kernel\/NekoSystem$.html#forName(className:String)(config:neko.config.NekoConfig):scala.util.Try[neko.kernel.NekoSystem]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/NekoSystem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/NekoSystem$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/NekoSystem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/NekoSystem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/NekoSystem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/NekoSystem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/NekoSystem$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/NekoSystem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/NekoSystem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/NekoSystem$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/NekoSystem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/NekoSystem$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/NekoSystem$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/NekoSystem$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/NekoSystem$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/NekoSystem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/NekoSystem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/NekoSystem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/NekoSystem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/NekoSystem.html", "kind" : "class"}, {"name" : "neko.kernel.ParallelScheduler", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/ParallelScheduler.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/ParallelScheduler.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParallelScheduler) ⇒ Boolean, msg: ⇒ Any): ParallelScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ParallelScheduler.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ParallelScheduler) ⇒ Boolean): ParallelScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ParallelScheduler.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ParallelScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ParallelScheduler.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ParallelScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/ParallelScheduler.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ParallelScheduler, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/ParallelScheduler.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ParallelScheduler, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/ParallelScheduler.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "executeTask", "tail" : "(time: Time, task: Task, done: CountDownLatch): Unit", "member" : "neko.kernel.ParallelScheduler.executeTask", "link" : "neko\/kernel\/ParallelScheduler.html#executeTask(time:neko.util.Time,task:neko.kernel.Task,done:java.util.concurrent.CountDownLatch):Unit", "kind" : "def"}, {"label" : "executeBatch", "tail" : "(time: Time, tasks: SortedSet[Task]): Unit", "member" : "neko.kernel.ParallelScheduler.executeBatch", "link" : "neko\/kernel\/ParallelScheduler.html#executeBatch(time:neko.util.Time,tasks:scala.collection.SortedSet[neko.kernel.Task]):Unit", "kind" : "def"}, {"label" : "exec", "tail" : ": ExecutionContext", "member" : "neko.kernel.ParallelScheduler.exec", "link" : "neko\/kernel\/ParallelScheduler.html#exec:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"member" : "neko.kernel.ParallelScheduler#<init>", "error" : "unsupported entity"}, {"label" : "executeNext", "tail" : "(): Unit", "member" : "neko.kernel.Scheduler.executeNext", "link" : "neko\/kernel\/ParallelScheduler.html#executeNext():Unit", "kind" : "def"}, {"label" : "dumpStatus", "tail" : "(): String", "member" : "neko.kernel.Scheduler.dumpStatus", "link" : "neko\/kernel\/ParallelScheduler.html#dumpStatus:String", "kind" : "def"}, {"label" : "cancel", "tail" : "(taskID: TaskID): Unit", "member" : "neko.kernel.Scheduler.cancel", "link" : "neko\/kernel\/ParallelScheduler.html#cancel(taskID:neko.TaskID):Unit", "kind" : "def"}, {"label" : "schedule", "tail" : "(gen: (Time) ⇒ Task): Task", "member" : "neko.kernel.Scheduler.schedule", "link" : "neko\/kernel\/ParallelScheduler.html#schedule(gen:neko.util.Time=>neko.kernel.Task):neko.kernel.Task", "kind" : "def"}, {"label" : "schedule", "tail" : "(task: Task): Task", "member" : "neko.kernel.Scheduler.schedule", "link" : "neko\/kernel\/ParallelScheduler.html#schedule(task:neko.kernel.Task):neko.kernel.Task", "kind" : "def"}, {"label" : "currentTime", "tail" : "(): Time", "member" : "neko.kernel.Scheduler.currentTime", "link" : "neko\/kernel\/ParallelScheduler.html#currentTime:neko.util.Time", "kind" : "def"}, {"label" : "nonEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.nonEmptyBesideDaemons", "link" : "neko\/kernel\/ParallelScheduler.html#nonEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "isEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.isEmptyBesideDaemons", "link" : "neko\/kernel\/ParallelScheduler.html#isEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.nonEmpty", "link" : "neko\/kernel\/ParallelScheduler.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.isEmpty", "link" : "neko\/kernel\/ParallelScheduler.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "newTimer", "tail" : "(): Timer", "member" : "neko.kernel.Scheduler.newTimer", "link" : "neko\/kernel\/ParallelScheduler.html#newTimer():neko.Timer", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/kernel\/ParallelScheduler.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/ParallelScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/ParallelScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/ParallelScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/ParallelScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/ParallelScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/ParallelScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/ParallelScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ParallelScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ParallelScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/ParallelScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/ParallelScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/ParallelScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/ParallelScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/ParallelScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/ParallelScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/ParallelScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/ParallelScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/ParallelScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/ParallelScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/ParallelScheduler.html", "kind" : "class"}, {"name" : "neko.kernel.PeriodicTask", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/PeriodicTask.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/PeriodicTask.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PeriodicTask) ⇒ Boolean, msg: ⇒ Any): PeriodicTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/PeriodicTask.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PeriodicTask) ⇒ Boolean): PeriodicTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/PeriodicTask.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PeriodicTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/PeriodicTask.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PeriodicTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/PeriodicTask.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PeriodicTask, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/PeriodicTask.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PeriodicTask, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/PeriodicTask.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.kernel.PeriodicTask.toString", "link" : "neko\/kernel\/PeriodicTask.html#toString():String", "kind" : "def"}, {"label" : "action", "tail" : ": (Time) ⇒ Unit", "member" : "neko.kernel.PeriodicTask.action", "link" : "neko\/kernel\/PeriodicTask.html#action:neko.util.Time=>Unit", "kind" : "val"}, {"member" : "neko.kernel.PeriodicTask#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": TaskID", "member" : "neko.kernel.PeriodicTask.id", "link" : "neko\/kernel\/PeriodicTask.html#id:neko.TaskID", "kind" : "val"}, {"label" : "repeatAction", "tail" : ": (Time) ⇒ Boolean", "member" : "neko.kernel.PeriodicTask.repeatAction", "link" : "neko\/kernel\/PeriodicTask.html#repeatAction:neko.util.Time=>Boolean", "kind" : "val"}, {"label" : "period", "tail" : ": Time", "member" : "neko.kernel.PeriodicTask.period", "link" : "neko\/kernel\/PeriodicTask.html#period:neko.util.Time", "kind" : "val"}, {"label" : "time", "tail" : ": Time", "member" : "neko.kernel.PeriodicTask.time", "link" : "neko\/kernel\/PeriodicTask.html#time:neko.util.Time", "kind" : "val"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "neko.kernel.PeriodicTask.scheduler", "link" : "neko\/kernel\/PeriodicTask.html#scheduler:neko.kernel.Scheduler", "kind" : "val"}, {"label" : "isDaemon", "tail" : "(): Boolean", "member" : "neko.kernel.Task.isDaemon", "link" : "neko\/kernel\/PeriodicTask.html#isDaemon:Boolean", "kind" : "def"}, {"label" : "executeAt", "tail" : "(t: Time): Unit", "member" : "neko.kernel.Task.executeAt", "link" : "neko\/kernel\/PeriodicTask.html#executeAt(t:neko.util.Time):Unit", "kind" : "def"}, {"label" : "compare", "tail" : "(that: Task): Int", "member" : "neko.kernel.Task.compare", "link" : "neko\/kernel\/PeriodicTask.html#compare(that:neko.kernel.Task):Int", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: Task): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/kernel\/PeriodicTask.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/kernel\/PeriodicTask.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/kernel\/PeriodicTask.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/kernel\/PeriodicTask.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/kernel\/PeriodicTask.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/PeriodicTask.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/PeriodicTask.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/PeriodicTask.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/PeriodicTask.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/PeriodicTask.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/PeriodicTask.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/PeriodicTask.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/PeriodicTask.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/PeriodicTask.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/PeriodicTask.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/PeriodicTask.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/PeriodicTask.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/PeriodicTask.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/PeriodicTask.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/PeriodicTask.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/PeriodicTask.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/kernel\/PeriodicTask.html", "kind" : "case class"}, {"name" : "neko.kernel.Scheduler", "shortDescription" : "", "object" : "neko\/kernel\/Scheduler$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/Scheduler.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/Scheduler.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Scheduler) ⇒ Boolean, msg: ⇒ Any): Scheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Scheduler.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Scheduler) ⇒ Boolean): Scheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Scheduler.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Scheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Scheduler.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Scheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Scheduler.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Scheduler, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/Scheduler.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Scheduler, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/Scheduler.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "executeNext", "tail" : "(): Unit", "member" : "neko.kernel.Scheduler.executeNext", "link" : "neko\/kernel\/Scheduler.html#executeNext():Unit", "kind" : "def"}, {"label" : "dumpStatus", "tail" : "(): String", "member" : "neko.kernel.Scheduler.dumpStatus", "link" : "neko\/kernel\/Scheduler.html#dumpStatus:String", "kind" : "def"}, {"label" : "cancel", "tail" : "(taskID: TaskID): Unit", "member" : "neko.kernel.Scheduler.cancel", "link" : "neko\/kernel\/Scheduler.html#cancel(taskID:neko.TaskID):Unit", "kind" : "def"}, {"label" : "schedule", "tail" : "(gen: (Time) ⇒ Task): Task", "member" : "neko.kernel.Scheduler.schedule", "link" : "neko\/kernel\/Scheduler.html#schedule(gen:neko.util.Time=>neko.kernel.Task):neko.kernel.Task", "kind" : "def"}, {"label" : "schedule", "tail" : "(task: Task): Task", "member" : "neko.kernel.Scheduler.schedule", "link" : "neko\/kernel\/Scheduler.html#schedule(task:neko.kernel.Task):neko.kernel.Task", "kind" : "def"}, {"label" : "currentTime", "tail" : "(): Time", "member" : "neko.kernel.Scheduler.currentTime", "link" : "neko\/kernel\/Scheduler.html#currentTime:neko.util.Time", "kind" : "def"}, {"label" : "nonEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.nonEmptyBesideDaemons", "link" : "neko\/kernel\/Scheduler.html#nonEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "isEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.isEmptyBesideDaemons", "link" : "neko\/kernel\/Scheduler.html#isEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.nonEmpty", "link" : "neko\/kernel\/Scheduler.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.isEmpty", "link" : "neko\/kernel\/Scheduler.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "newTimer", "tail" : "(): Timer", "member" : "neko.kernel.Scheduler.newTimer", "link" : "neko\/kernel\/Scheduler.html#newTimer():neko.Timer", "kind" : "def"}, {"member" : "neko.kernel.Scheduler#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/kernel\/Scheduler.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/Scheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/Scheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/Scheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/Scheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/Scheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/Scheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/Scheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Scheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Scheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Scheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/Scheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/Scheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/Scheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/Scheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/Scheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/Scheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/Scheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/Scheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/Scheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "executeBatch", "tail" : "(time: Time, tasks: SortedSet[Task]): Unit", "member" : "neko.kernel.Scheduler.executeBatch", "link" : "neko\/kernel\/Scheduler.html#executeBatch(time:neko.util.Time,tasks:scala.collection.SortedSet[neko.kernel.Task]):Unit", "kind" : "abstract def"}], "members_object" : [{"label" : "newDefaultScheduler", "tail" : "(): Scheduler", "member" : "neko.kernel.Scheduler.newDefaultScheduler", "link" : "neko\/kernel\/Scheduler$.html#newDefaultScheduler():neko.kernel.Scheduler", "kind" : "def"}, {"label" : "setDefaultScheduler", "tail" : "(scheduler: Scheduler): Unit", "member" : "neko.kernel.Scheduler.setDefaultScheduler", "link" : "neko\/kernel\/Scheduler$.html#setDefaultScheduler(scheduler:neko.kernel.Scheduler):Unit", "kind" : "def"}, {"label" : "_defaultScheduler", "tail" : ": Scheduler", "member" : "neko.kernel.Scheduler._defaultScheduler", "link" : "neko\/kernel\/Scheduler$.html#_defaultScheduler:neko.kernel.Scheduler", "kind" : "lazy val"}, {"label" : "defaultScheduler", "tail" : "(): Scheduler", "member" : "neko.kernel.Scheduler.defaultScheduler", "link" : "neko\/kernel\/Scheduler$.html#defaultScheduler:neko.kernel.Scheduler", "kind" : "def"}, {"label" : "apply", "tail" : "(): Scheduler", "member" : "neko.kernel.Scheduler.apply", "link" : "neko\/kernel\/Scheduler$.html#apply():neko.kernel.Scheduler", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/Scheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/Scheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/Scheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/Scheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/Scheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/Scheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/Scheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Scheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Scheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Scheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/Scheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/Scheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/Scheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/Scheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/Scheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/Scheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/Scheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/Scheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/Scheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/Scheduler.html", "kind" : "class"}, {"name" : "neko.kernel.SequentialScheduler", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/SequentialScheduler.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/SequentialScheduler.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SequentialScheduler) ⇒ Boolean, msg: ⇒ Any): SequentialScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SequentialScheduler.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SequentialScheduler) ⇒ Boolean): SequentialScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SequentialScheduler.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SequentialScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SequentialScheduler.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SequentialScheduler", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SequentialScheduler.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SequentialScheduler, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/SequentialScheduler.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SequentialScheduler, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/SequentialScheduler.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "executeBatch", "tail" : "(time: Time, tasks: SortedSet[Task]): Unit", "member" : "neko.kernel.SequentialScheduler.executeBatch", "link" : "neko\/kernel\/SequentialScheduler.html#executeBatch(time:neko.util.Time,tasks:scala.collection.SortedSet[neko.kernel.Task]):Unit", "kind" : "def"}, {"member" : "neko.kernel.SequentialScheduler#<init>", "error" : "unsupported entity"}, {"label" : "executeNext", "tail" : "(): Unit", "member" : "neko.kernel.Scheduler.executeNext", "link" : "neko\/kernel\/SequentialScheduler.html#executeNext():Unit", "kind" : "def"}, {"label" : "dumpStatus", "tail" : "(): String", "member" : "neko.kernel.Scheduler.dumpStatus", "link" : "neko\/kernel\/SequentialScheduler.html#dumpStatus:String", "kind" : "def"}, {"label" : "cancel", "tail" : "(taskID: TaskID): Unit", "member" : "neko.kernel.Scheduler.cancel", "link" : "neko\/kernel\/SequentialScheduler.html#cancel(taskID:neko.TaskID):Unit", "kind" : "def"}, {"label" : "schedule", "tail" : "(gen: (Time) ⇒ Task): Task", "member" : "neko.kernel.Scheduler.schedule", "link" : "neko\/kernel\/SequentialScheduler.html#schedule(gen:neko.util.Time=>neko.kernel.Task):neko.kernel.Task", "kind" : "def"}, {"label" : "schedule", "tail" : "(task: Task): Task", "member" : "neko.kernel.Scheduler.schedule", "link" : "neko\/kernel\/SequentialScheduler.html#schedule(task:neko.kernel.Task):neko.kernel.Task", "kind" : "def"}, {"label" : "currentTime", "tail" : "(): Time", "member" : "neko.kernel.Scheduler.currentTime", "link" : "neko\/kernel\/SequentialScheduler.html#currentTime:neko.util.Time", "kind" : "def"}, {"label" : "nonEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.nonEmptyBesideDaemons", "link" : "neko\/kernel\/SequentialScheduler.html#nonEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "isEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.isEmptyBesideDaemons", "link" : "neko\/kernel\/SequentialScheduler.html#isEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.nonEmpty", "link" : "neko\/kernel\/SequentialScheduler.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "neko.kernel.Scheduler.isEmpty", "link" : "neko\/kernel\/SequentialScheduler.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "newTimer", "tail" : "(): Timer", "member" : "neko.kernel.Scheduler.newTimer", "link" : "neko\/kernel\/SequentialScheduler.html#newTimer():neko.Timer", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/kernel\/SequentialScheduler.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/SequentialScheduler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/SequentialScheduler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/SequentialScheduler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/SequentialScheduler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/SequentialScheduler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/SequentialScheduler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/SequentialScheduler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SequentialScheduler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SequentialScheduler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SequentialScheduler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/SequentialScheduler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/SequentialScheduler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/SequentialScheduler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/SequentialScheduler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/SequentialScheduler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/SequentialScheduler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/SequentialScheduler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/SequentialScheduler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/SequentialScheduler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/SequentialScheduler.html", "kind" : "class"}, {"name" : "neko.kernel.SimpleDispatcher", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/SimpleDispatcher.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/SimpleDispatcher.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimpleDispatcher) ⇒ Boolean, msg: ⇒ Any): SimpleDispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleDispatcher.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimpleDispatcher) ⇒ Boolean): SimpleDispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleDispatcher.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SimpleDispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleDispatcher.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SimpleDispatcher", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleDispatcher.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SimpleDispatcher, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/SimpleDispatcher.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SimpleDispatcher, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/SimpleDispatcher.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "protocolsFor", "tail" : "(clazz: Class[_ <: Event]): Seq[Receiver]", "member" : "neko.kernel.SimpleDispatcher.protocolsFor", "link" : "neko\/kernel\/SimpleDispatcher.html#protocolsFor(clazz:Class[_<:neko.Event]):Seq[neko.Receiver]", "kind" : "def"}, {"label" : "unregisterAllFor", "tail" : "(clazz: Class[_ <: Event]): Unit", "member" : "neko.kernel.SimpleDispatcher.unregisterAllFor", "link" : "neko\/kernel\/SimpleDispatcher.html#unregisterAllFor(clazz:Class[_<:neko.Event]):Unit", "kind" : "def"}, {"label" : "unregisterFor", "tail" : "(clazz: Class[_ <: Event], proto: Receiver): Unit", "member" : "neko.kernel.SimpleDispatcher.unregisterFor", "link" : "neko\/kernel\/SimpleDispatcher.html#unregisterFor(clazz:Class[_<:neko.Event],proto:neko.Receiver):Unit", "kind" : "def"}, {"label" : "registerFor", "tail" : "(clazz: Class[_ <: Event], proto: Receiver): Unit", "member" : "neko.kernel.SimpleDispatcher.registerFor", "link" : "neko\/kernel\/SimpleDispatcher.html#registerFor(clazz:Class[_<:neko.Event],proto:neko.Receiver):Unit", "kind" : "def"}, {"label" : "protocolsForMessage", "tail" : ": Map[Class[_ <: Event], List[Receiver]]", "member" : "neko.kernel.SimpleDispatcher.protocolsForMessage", "link" : "neko\/kernel\/SimpleDispatcher.html#protocolsForMessage:scala.collection.immutable.Map[Class[_<:neko.Event],List[neko.Receiver]]", "kind" : "var"}, {"label" : "orphanEventHandler", "tail" : ": Receiver", "member" : "neko.kernel.SimpleDispatcher.orphanEventHandler", "link" : "neko\/kernel\/SimpleDispatcher.html#orphanEventHandler:neko.Receiver", "kind" : "val"}, {"member" : "neko.kernel.SimpleDispatcher#<init>", "error" : "unsupported entity"}, {"label" : "deliver", "tail" : "(ev: Event): Unit", "member" : "neko.kernel.Dispatcher.deliver", "link" : "neko\/kernel\/SimpleDispatcher.html#deliver(ev:neko.Event):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/SimpleDispatcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/SimpleDispatcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/SimpleDispatcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/SimpleDispatcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/SimpleDispatcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/SimpleDispatcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/SimpleDispatcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SimpleDispatcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SimpleDispatcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SimpleDispatcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/SimpleDispatcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/SimpleDispatcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/SimpleDispatcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/SimpleDispatcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/SimpleDispatcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/SimpleDispatcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/SimpleDispatcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/SimpleDispatcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/SimpleDispatcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/SimpleDispatcher.html", "kind" : "class"}, {"name" : "neko.kernel.SimpleTask", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/SimpleTask.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/SimpleTask.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimpleTask) ⇒ Boolean, msg: ⇒ Any): SimpleTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleTask.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SimpleTask) ⇒ Boolean): SimpleTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleTask.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SimpleTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleTask.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SimpleTask", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/SimpleTask.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SimpleTask, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/SimpleTask.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SimpleTask, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/SimpleTask.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "neko.kernel.SimpleTask.toString", "link" : "neko\/kernel\/SimpleTask.html#toString():String", "kind" : "def"}, {"member" : "neko.kernel.SimpleTask#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": TaskID", "member" : "neko.kernel.SimpleTask.id", "link" : "neko\/kernel\/SimpleTask.html#id:neko.TaskID", "kind" : "val"}, {"label" : "action", "tail" : ": (Time) ⇒ Unit", "member" : "neko.kernel.SimpleTask.action", "link" : "neko\/kernel\/SimpleTask.html#action:neko.util.Time=>Unit", "kind" : "val"}, {"label" : "time", "tail" : ": Time", "member" : "neko.kernel.SimpleTask.time", "link" : "neko\/kernel\/SimpleTask.html#time:neko.util.Time", "kind" : "val"}, {"label" : "isDaemon", "tail" : "(): Boolean", "member" : "neko.kernel.Task.isDaemon", "link" : "neko\/kernel\/SimpleTask.html#isDaemon:Boolean", "kind" : "def"}, {"label" : "executeAt", "tail" : "(t: Time): Unit", "member" : "neko.kernel.Task.executeAt", "link" : "neko\/kernel\/SimpleTask.html#executeAt(t:neko.util.Time):Unit", "kind" : "def"}, {"label" : "compare", "tail" : "(that: Task): Int", "member" : "neko.kernel.Task.compare", "link" : "neko\/kernel\/SimpleTask.html#compare(that:neko.kernel.Task):Int", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: Task): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/kernel\/SimpleTask.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/kernel\/SimpleTask.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/kernel\/SimpleTask.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/kernel\/SimpleTask.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/kernel\/SimpleTask.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/SimpleTask.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/SimpleTask.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/SimpleTask.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/SimpleTask.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/SimpleTask.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/SimpleTask.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/SimpleTask.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SimpleTask.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SimpleTask.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/SimpleTask.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/SimpleTask.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/SimpleTask.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/SimpleTask.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/SimpleTask.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/SimpleTask.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/SimpleTask.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/kernel\/SimpleTask.html", "kind" : "case class"}, {"name" : "neko.kernel.Task", "shortDescription" : "", "object" : "neko\/kernel\/Task$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/Task.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/Task.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Task) ⇒ Boolean, msg: ⇒ Any): Task", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Task.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Task) ⇒ Boolean): Task", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Task.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Task", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Task.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Task", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/Task.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Task, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/Task.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Task, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/Task.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "isDaemon", "tail" : "(): Boolean", "member" : "neko.kernel.Task.isDaemon", "link" : "neko\/kernel\/Task.html#isDaemon:Boolean", "kind" : "def"}, {"label" : "executeAt", "tail" : "(t: Time): Unit", "member" : "neko.kernel.Task.executeAt", "link" : "neko\/kernel\/Task.html#executeAt(t:neko.util.Time):Unit", "kind" : "def"}, {"label" : "compare", "tail" : "(that: Task): Int", "member" : "neko.kernel.Task.compare", "link" : "neko\/kernel\/Task.html#compare(that:neko.kernel.Task):Int", "kind" : "def"}, {"label" : "compareTo", "tail" : "(that: Task): Int", "member" : "scala.math.Ordered.compareTo", "link" : "neko\/kernel\/Task.html#compareTo(that:A):Int", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.>=", "link" : "neko\/kernel\/Task.html#>=(that:A):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.<=", "link" : "neko\/kernel\/Task.html#<=(that:A):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.>", "link" : "neko\/kernel\/Task.html#>(that:A):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Task): Boolean", "member" : "scala.math.Ordered.<", "link" : "neko\/kernel\/Task.html#<(that:A):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/Task.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/Task.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/Task.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/Task.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/Task.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/Task.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/Task.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Task.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Task.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Task.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/Task.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/Task.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/Task.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/Task.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/Task.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/Task.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/Task.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/Task.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/Task.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "action", "tail" : "(): (Time) ⇒ Unit", "member" : "neko.kernel.Task.action", "link" : "neko\/kernel\/Task.html#action:neko.util.Time=>Unit", "kind" : "abstract def"}, {"label" : "time", "tail" : "(): Time", "member" : "neko.kernel.Task.time", "link" : "neko\/kernel\/Task.html#time:neko.util.Time", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): TaskID", "member" : "neko.kernel.Task.id", "link" : "neko\/kernel\/Task.html#id:neko.TaskID", "kind" : "abstract def"}], "members_object" : [{"label" : "Daemon", "tail" : "", "member" : "neko.kernel.Task.Daemon", "link" : "neko\/kernel\/Task$.html#DaemonextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/Task$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/Task$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/Task$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/Task$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/Task$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/Task$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/Task$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Task$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Task$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/Task$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/Task$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/Task$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/Task$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/Task$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/Task$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/Task$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/Task$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/Task$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/Task$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/Task.html", "kind" : "object"}], "neko.io" : [{"name" : "neko.io.PrefixOutputStream", "shortDescription" : "Created by defago on 26\/04\/2017.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/io\/PrefixOutputStream.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/io\/PrefixOutputStream.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PrefixOutputStream) ⇒ Boolean, msg: ⇒ Any): PrefixOutputStream", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/io\/PrefixOutputStream.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PrefixOutputStream) ⇒ Boolean): PrefixOutputStream", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/io\/PrefixOutputStream.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PrefixOutputStream", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/io\/PrefixOutputStream.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PrefixOutputStream", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/io\/PrefixOutputStream.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PrefixOutputStream, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/io\/PrefixOutputStream.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PrefixOutputStream, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/io\/PrefixOutputStream.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "neko.io.PrefixOutputStream#<init>", "error" : "unsupported entity"}, {"label" : "append", "tail" : "(arg0: Char): PrintStream", "member" : "java.io.PrintStream.append", "link" : "neko\/io\/PrefixOutputStream.html#append(x$1:Char):java.io.PrintStream", "kind" : "def"}, {"label" : "append", "tail" : "(arg0: CharSequence, arg1: Int, arg2: Int): PrintStream", "member" : "java.io.PrintStream.append", "link" : "neko\/io\/PrefixOutputStream.html#append(x$1:CharSequence,x$2:Int,x$3:Int):java.io.PrintStream", "kind" : "def"}, {"label" : "append", "tail" : "(arg0: CharSequence): PrintStream", "member" : "java.io.PrintStream.append", "link" : "neko\/io\/PrefixOutputStream.html#append(x$1:CharSequence):java.io.PrintStream", "kind" : "def"}, {"label" : "format", "tail" : "(arg0: Locale, arg1: String, arg2: <repeated...>[AnyRef]): PrintStream", "member" : "java.io.PrintStream.format", "link" : "neko\/io\/PrefixOutputStream.html#format(x$1:java.util.Locale,x$2:String,x$3:Object*):java.io.PrintStream", "kind" : "def"}, {"label" : "format", "tail" : "(arg0: String, arg1: <repeated...>[AnyRef]): PrintStream", "member" : "java.io.PrintStream.format", "link" : "neko\/io\/PrefixOutputStream.html#format(x$1:String,x$2:Object*):java.io.PrintStream", "kind" : "def"}, {"label" : "printf", "tail" : "(arg0: Locale, arg1: String, arg2: <repeated...>[AnyRef]): PrintStream", "member" : "java.io.PrintStream.printf", "link" : "neko\/io\/PrefixOutputStream.html#printf(x$1:java.util.Locale,x$2:String,x$3:Object*):java.io.PrintStream", "kind" : "def"}, {"label" : "printf", "tail" : "(arg0: String, arg1: <repeated...>[AnyRef]): PrintStream", "member" : "java.io.PrintStream.printf", "link" : "neko\/io\/PrefixOutputStream.html#printf(x$1:String,x$2:Object*):java.io.PrintStream", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Any): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Any):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: String): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:String):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Array[Char]): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Array[Char]):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Double): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Double):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Float): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Float):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Long): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Long):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Int): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Int):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Char): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Char):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(arg0: Boolean): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println(x$1:Boolean):Unit", "kind" : "def"}, {"label" : "println", "tail" : "(): Unit", "member" : "java.io.PrintStream.println", "link" : "neko\/io\/PrefixOutputStream.html#println():Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Any): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Any):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: String): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:String):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Array[Char]): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Array[Char]):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Double): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Double):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Float): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Float):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Long): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Long):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Int): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Char): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Char):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(arg0: Boolean): Unit", "member" : "java.io.PrintStream.print", "link" : "neko\/io\/PrefixOutputStream.html#print(x$1:Boolean):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Array[Byte], arg1: Int, arg2: Int): Unit", "member" : "java.io.PrintStream.write", "link" : "neko\/io\/PrefixOutputStream.html#write(x$1:Array[Byte],x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Int): Unit", "member" : "java.io.PrintStream.write", "link" : "neko\/io\/PrefixOutputStream.html#write(x$1:Int):Unit", "kind" : "def"}, {"label" : "clearError", "tail" : "(): Unit", "member" : "java.io.PrintStream.clearError", "link" : "neko\/io\/PrefixOutputStream.html#clearError():Unit", "kind" : "def"}, {"label" : "setError", "tail" : "(): Unit", "member" : "java.io.PrintStream.setError", "link" : "neko\/io\/PrefixOutputStream.html#setError():Unit", "kind" : "def"}, {"label" : "checkError", "tail" : "(): Boolean", "member" : "java.io.PrintStream.checkError", "link" : "neko\/io\/PrefixOutputStream.html#checkError():Boolean", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "java.io.PrintStream.close", "link" : "neko\/io\/PrefixOutputStream.html#close():Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "java.io.PrintStream.flush", "link" : "neko\/io\/PrefixOutputStream.html#flush():Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Array[Byte]): Unit", "member" : "java.io.FilterOutputStream.write", "link" : "neko\/io\/PrefixOutputStream.html#write(x$1:Array[Byte]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/io\/PrefixOutputStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/io\/PrefixOutputStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/io\/PrefixOutputStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/io\/PrefixOutputStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/io\/PrefixOutputStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/io\/PrefixOutputStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/io\/PrefixOutputStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/io\/PrefixOutputStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/io\/PrefixOutputStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/io\/PrefixOutputStream.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/io\/PrefixOutputStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/io\/PrefixOutputStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/io\/PrefixOutputStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/io\/PrefixOutputStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/io\/PrefixOutputStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/io\/PrefixOutputStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/io\/PrefixOutputStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/io\/PrefixOutputStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/io\/PrefixOutputStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/io\/PrefixOutputStream.html", "kind" : "class"}], "neko.trace" : [{"name" : "neko.trace.ConsoleEventTracer", "shortDescription" : "", "object" : "neko\/trace\/ConsoleEventTracer$.html", "members_object" : [{"label" : "MirrorAndAny", "tail" : "", "member" : "neko.trace.EventTracer.MirrorAndAny", "link" : "neko\/trace\/EventTracer.html#MirrorAndAnyextendsAnyRef", "kind" : "class"}, {"label" : "DELIVER", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.ConsoleEventTracer.DELIVER", "link" : "neko\/trace\/ConsoleEventTracer$.html#DELIVER(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.ConsoleEventTracer.SEND", "link" : "neko\/trace\/ConsoleEventTracer$.html#SEND(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.ConsoleEventTracer.deliver", "link" : "neko\/trace\/ConsoleEventTracer$.html#deliver(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.ConsoleEventTracer.send", "link" : "neko\/trace\/ConsoleEventTracer$.html#send(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "neko.trace.EventTracer.flush", "link" : "neko\/trace\/ConsoleEventTracer$.html#flush():Unit", "kind" : "def"}, {"label" : "reflect", "tail" : "(pid: PID, protoName: String): String", "member" : "neko.trace.EventTracer.reflect", "link" : "neko\/trace\/ConsoleEventTracer$.html#reflect(pid:neko.PID,protoName:String):String", "kind" : "def"}, {"label" : "setTrace", "tail" : "(a: A, pid: PID, protoName: String, name: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.trace.EventTracer.setTrace", "link" : "neko\/trace\/ConsoleEventTracer$.html#setTrace[A](a:A,pid:neko.PID,protoName:String,name:String)(implicitevidence$1:EventTracer.this.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "mirrorLists", "tail" : ": Map[PID, List[((String, String), MirrorAndAny)]]", "member" : "neko.trace.EventTracer.mirrorLists", "link" : "neko\/trace\/ConsoleEventTracer$.html#mirrorLists:Map[neko.PID,List[((String,String),EventTracer.this.MirrorAndAny)]]", "kind" : "val"}, {"label" : "m", "tail" : ": Mirror", "member" : "neko.trace.EventTracer.m", "link" : "neko\/trace\/ConsoleEventTracer$.html#m:EventTracer.this.ru.Mirror", "kind" : "val"}, {"label" : "ru", "tail" : ": JavaUniverse", "member" : "neko.trace.EventTracer.ru", "link" : "neko\/trace\/ConsoleEventTracer$.html#ru:scala.reflect.api.JavaUniverse", "kind" : "val"}, {"label" : "mappingMessageIDToSender", "tail" : ": Map[ID[_], Any]", "member" : "neko.trace.EventTracer.mappingMessageIDToSender", "link" : "neko\/trace\/ConsoleEventTracer$.html#mappingMessageIDToSender:Map[neko.ID[_],Any]", "kind" : "val"}, {"label" : "protocolImpls", "tail" : ": Map[PID, Seq[Protocol]]", "member" : "neko.trace.EventTracer.protocolImpls", "link" : "neko\/trace\/ConsoleEventTracer$.html#protocolImpls:Map[neko.PID,Seq[neko.Protocol]]", "kind" : "val"}, {"label" : "protocols", "tail" : ": Seq[String]", "member" : "neko.trace.EventTracer.protocols", "link" : "neko\/trace\/ConsoleEventTracer$.html#protocols:Seq[String]", "kind" : "val"}, {"label" : "entities", "tail" : ": Set[NamedEntity]", "member" : "neko.trace.EventTracer.entities", "link" : "neko\/trace\/ConsoleEventTracer$.html#entities:scala.collection.immutable.Set[neko.NamedEntity]", "kind" : "val"}, {"label" : "register", "tail" : "(entity: NamedEntity): Unit", "member" : "neko.trace.EventTracer.register", "link" : "neko\/trace\/ConsoleEventTracer$.html#register(entity:neko.NamedEntity):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/ConsoleEventTracer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/ConsoleEventTracer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/ConsoleEventTracer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/ConsoleEventTracer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/ConsoleEventTracer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/ConsoleEventTracer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/ConsoleEventTracer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/ConsoleEventTracer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/ConsoleEventTracer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/ConsoleEventTracer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/ConsoleEventTracer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/ConsoleEventTracer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/ConsoleEventTracer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/ConsoleEventTracer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/ConsoleEventTracer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/ConsoleEventTracer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/ConsoleEventTracer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/ConsoleEventTracer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/ConsoleEventTracer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.trace.EventFormatter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/trace\/EventFormatter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/trace\/EventFormatter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (EventFormatter) ⇒ Boolean, msg: ⇒ Any): EventFormatter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventFormatter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (EventFormatter) ⇒ Boolean): EventFormatter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventFormatter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): EventFormatter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventFormatter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): EventFormatter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventFormatter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (EventFormatter, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/trace\/EventFormatter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (EventFormatter, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/trace\/EventFormatter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/EventFormatter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/EventFormatter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/EventFormatter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/EventFormatter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/EventFormatter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/EventFormatter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/EventFormatter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventFormatter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventFormatter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventFormatter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/EventFormatter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/EventFormatter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/EventFormatter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/EventFormatter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/EventFormatter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/EventFormatter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/EventFormatter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/EventFormatter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/EventFormatter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stringFor", "tail" : "(kind: EventKind, time: Time, by: PID, ev: Event, whoCode: String): String", "member" : "neko.trace.EventFormatter.stringFor", "link" : "neko\/trace\/EventFormatter.html#stringFor(kind:neko.trace.EventFormatter.EventKind,time:neko.util.Time,by:neko.PID,ev:neko.Event,whoCode:String):String", "kind" : "abstract def"}, {"label" : "stringFor", "tail" : "(kind: EventKind, time: Time, by: PID, ev: Event, whoCode: Int): String", "member" : "neko.trace.EventFormatter.stringFor", "link" : "neko\/trace\/EventFormatter.html#stringFor(kind:neko.trace.EventFormatter.EventKind,time:neko.util.Time,by:neko.PID,ev:neko.Event,whoCode:Int):String", "kind" : "abstract def"}, {"label" : "stringFor", "tail" : "(kind: EventKind, time: Time, by: PID, ev: Event, who: Any): String", "member" : "neko.trace.EventFormatter.stringFor", "link" : "neko\/trace\/EventFormatter.html#stringFor(kind:neko.trace.EventFormatter.EventKind,time:neko.util.Time,by:neko.PID,ev:neko.Event,who:Any):String", "kind" : "abstract def"}, {"label" : "stringFor", "tail" : "(kind: EventKind, time: Time, by: PID, ev: Event): String", "member" : "neko.trace.EventFormatter.stringFor", "link" : "neko\/trace\/EventFormatter.html#stringFor(kind:neko.trace.EventFormatter.EventKind,time:neko.util.Time,by:neko.PID,ev:neko.Event):String", "kind" : "abstract def"}], "shortDescription" : "", "object" : "neko\/trace\/EventFormatter$.html", "members_object" : [{"label" : "SimpleEventFormatter", "tail" : "", "member" : "neko.trace.EventFormatter.SimpleEventFormatter", "link" : "neko\/trace\/EventFormatter$.html#SimpleEventFormatter", "kind" : "object"}, {"label" : "default", "tail" : "(): EventFormatter", "member" : "neko.trace.EventFormatter.default", "link" : "neko\/trace\/EventFormatter$.html#default:neko.trace.EventFormatter", "kind" : "def"}, {"label" : "Sig", "tail" : "", "member" : "neko.trace.EventFormatter.Sig", "link" : "neko\/trace\/EventFormatter$.html#Sig", "kind" : "object"}, {"label" : "lDelv", "tail" : "", "member" : "neko.trace.EventFormatter.lDelv", "link" : "neko\/trace\/EventFormatter$.html#lDelv", "kind" : "object"}, {"label" : "sDelv", "tail" : "", "member" : "neko.trace.EventFormatter.sDelv", "link" : "neko\/trace\/EventFormatter$.html#sDelv", "kind" : "object"}, {"label" : "lSend", "tail" : "", "member" : "neko.trace.EventFormatter.lSend", "link" : "neko\/trace\/EventFormatter$.html#lSend", "kind" : "object"}, {"label" : "sSend", "tail" : "", "member" : "neko.trace.EventFormatter.sSend", "link" : "neko\/trace\/EventFormatter$.html#sSend", "kind" : "object"}, {"label" : "RCV", "tail" : "", "member" : "neko.trace.EventFormatter.RCV", "link" : "neko\/trace\/EventFormatter$.html#RCV", "kind" : "object"}, {"label" : "SND", "tail" : "", "member" : "neko.trace.EventFormatter.SND", "link" : "neko\/trace\/EventFormatter$.html#SND", "kind" : "object"}, {"label" : "EventKind", "tail" : "", "member" : "neko.trace.EventFormatter.EventKind", "link" : "neko\/trace\/EventFormatter$.html#EventKindextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/EventFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/EventFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/EventFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/EventFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/EventFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/EventFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/EventFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/EventFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/EventFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/EventFormatter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/EventFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/EventFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/EventFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/EventFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/EventFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/EventFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/trace\/EventFormatter.html", "kind" : "trait"}, {"name" : "neko.trace.EventTracer", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/trace\/EventTracer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/trace\/EventTracer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (EventTracer) ⇒ Boolean, msg: ⇒ Any): EventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventTracer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (EventTracer) ⇒ Boolean): EventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventTracer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): EventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventTracer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): EventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/EventTracer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (EventTracer, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/trace\/EventTracer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (EventTracer, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/trace\/EventTracer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "neko.trace.EventTracer.flush", "link" : "neko\/trace\/EventTracer.html#flush():Unit", "kind" : "def"}, {"label" : "reflect", "tail" : "(pid: PID, protoName: String): String", "member" : "neko.trace.EventTracer.reflect", "link" : "neko\/trace\/EventTracer.html#reflect(pid:neko.PID,protoName:String):String", "kind" : "def"}, {"label" : "setTrace", "tail" : "(a: A, pid: PID, protoName: String, name: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.trace.EventTracer.setTrace", "link" : "neko\/trace\/EventTracer.html#setTrace[A](a:A,pid:neko.PID,protoName:String,name:String)(implicitevidence$1:EventTracer.this.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "mirrorLists", "tail" : ": Map[PID, List[((String, String), MirrorAndAny)]]", "member" : "neko.trace.EventTracer.mirrorLists", "link" : "neko\/trace\/EventTracer.html#mirrorLists:Map[neko.PID,List[((String,String),EventTracer.this.MirrorAndAny)]]", "kind" : "val"}, {"label" : "MirrorAndAny", "tail" : "", "member" : "neko.trace.EventTracer.MirrorAndAny", "link" : "neko\/trace\/EventTracer.html#MirrorAndAnyextendsAnyRef", "kind" : "class"}, {"label" : "m", "tail" : ": Mirror", "member" : "neko.trace.EventTracer.m", "link" : "neko\/trace\/EventTracer.html#m:EventTracer.this.ru.Mirror", "kind" : "val"}, {"label" : "ru", "tail" : ": JavaUniverse", "member" : "neko.trace.EventTracer.ru", "link" : "neko\/trace\/EventTracer.html#ru:scala.reflect.api.JavaUniverse", "kind" : "val"}, {"label" : "mappingMessageIDToSender", "tail" : ": Map[ID[_], Any]", "member" : "neko.trace.EventTracer.mappingMessageIDToSender", "link" : "neko\/trace\/EventTracer.html#mappingMessageIDToSender:Map[neko.ID[_],Any]", "kind" : "val"}, {"label" : "protocolImpls", "tail" : ": Map[PID, Seq[Protocol]]", "member" : "neko.trace.EventTracer.protocolImpls", "link" : "neko\/trace\/EventTracer.html#protocolImpls:Map[neko.PID,Seq[neko.Protocol]]", "kind" : "val"}, {"label" : "protocols", "tail" : ": Seq[String]", "member" : "neko.trace.EventTracer.protocols", "link" : "neko\/trace\/EventTracer.html#protocols:Seq[String]", "kind" : "val"}, {"label" : "entities", "tail" : ": Set[NamedEntity]", "member" : "neko.trace.EventTracer.entities", "link" : "neko\/trace\/EventTracer.html#entities:scala.collection.immutable.Set[neko.NamedEntity]", "kind" : "val"}, {"label" : "register", "tail" : "(entity: NamedEntity): Unit", "member" : "neko.trace.EventTracer.register", "link" : "neko\/trace\/EventTracer.html#register(entity:neko.NamedEntity):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/EventTracer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/EventTracer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/EventTracer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/EventTracer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/EventTracer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/EventTracer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/EventTracer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventTracer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventTracer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventTracer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/EventTracer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/EventTracer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/EventTracer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/EventTracer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/EventTracer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/EventTracer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/EventTracer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/EventTracer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/EventTracer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "DELIVER", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.EventTracer.DELIVER", "link" : "neko\/trace\/EventTracer.html#DELIVER(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "abstract def"}, {"label" : "SEND", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.EventTracer.SEND", "link" : "neko\/trace\/EventTracer.html#SEND(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "abstract def"}, {"label" : "deliver", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.EventTracer.deliver", "link" : "neko\/trace\/EventTracer.html#deliver(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "abstract def"}, {"label" : "send", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.EventTracer.send", "link" : "neko\/trace\/EventTracer.html#send(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "abstract def"}], "shortDescription" : "", "object" : "neko\/trace\/EventTracer$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/EventTracer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/EventTracer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/EventTracer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/EventTracer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/EventTracer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/EventTracer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/EventTracer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventTracer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventTracer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/EventTracer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/EventTracer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/EventTracer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/EventTracer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/EventTracer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/EventTracer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/EventTracer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/EventTracer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/EventTracer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/EventTracer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/trace\/EventTracer.html", "kind" : "trait"}, {"name" : "neko.trace.FileEventTracer", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/trace\/FileEventTracer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/trace\/FileEventTracer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileEventTracer) ⇒ Boolean, msg: ⇒ Any): FileEventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/FileEventTracer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (FileEventTracer) ⇒ Boolean): FileEventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/FileEventTracer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): FileEventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/FileEventTracer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): FileEventTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/FileEventTracer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (FileEventTracer, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/trace\/FileEventTracer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (FileEventTracer, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/trace\/FileEventTracer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "MirrorAndAny", "tail" : "", "member" : "neko.trace.EventTracer.MirrorAndAny", "link" : "neko\/trace\/EventTracer.html#MirrorAndAnyextendsAnyRef", "kind" : "class"}, {"label" : "printFile", "tail" : "(s: String): Unit", "member" : "neko.trace.FileEventTracer.printFile", "link" : "neko\/trace\/FileEventTracer.html#printFile(s:String):Unit", "kind" : "def"}, {"label" : "initFile", "tail" : "(): Unit", "member" : "neko.trace.FileEventTracer.initFile", "link" : "neko\/trace\/FileEventTracer.html#initFile():Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.FileEventTracer.DELIVER", "link" : "neko\/trace\/FileEventTracer.html#DELIVER(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.FileEventTracer.SEND", "link" : "neko\/trace\/FileEventTracer.html#SEND(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.FileEventTracer.deliver", "link" : "neko\/trace\/FileEventTracer.html#deliver(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.FileEventTracer.send", "link" : "neko\/trace\/FileEventTracer.html#send(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "networkPattern", "tail" : ": Regex", "member" : "neko.trace.FileEventTracer.networkPattern", "link" : "neko\/trace\/FileEventTracer.html#networkPattern:scala.util.matching.Regex", "kind" : "val"}, {"label" : "protocolPattern", "tail" : ": Regex", "member" : "neko.trace.FileEventTracer.protocolPattern", "link" : "neko\/trace\/FileEventTracer.html#protocolPattern:scala.util.matching.Regex", "kind" : "val"}, {"label" : "usingName", "tail" : ": Map[String, String]", "member" : "neko.trace.FileEventTracer.usingName", "link" : "neko\/trace\/FileEventTracer.html#usingName:Map[String,String]", "kind" : "var"}, {"label" : "usingNameBy", "tail" : ": Map[PID, Map[String, String]]", "member" : "neko.trace.FileEventTracer.usingNameBy", "link" : "neko\/trace\/FileEventTracer.html#usingNameBy:Map[neko.PID,Map[String,String]]", "kind" : "var"}, {"label" : "variableDB", "tail" : ": VariableNameDB", "member" : "neko.trace.FileEventTracer.variableDB", "link" : "neko\/trace\/FileEventTracer.html#variableDB:neko.trace.VariableNameDB", "kind" : "val"}, {"label" : "protocolDB", "tail" : ": ProtocolDB", "member" : "neko.trace.FileEventTracer.protocolDB", "link" : "neko\/trace\/FileEventTracer.html#protocolDB:neko.trace.ProtocolDB", "kind" : "val"}, {"label" : "traceName", "tail" : ": Option[Set[String]]", "member" : "neko.trace.FileEventTracer.traceName", "link" : "neko\/trace\/FileEventTracer.html#traceName:Option[Set[String]]", "kind" : "val"}, {"label" : "file", "tail" : ": Option[PrintWriter]", "member" : "neko.trace.FileEventTracer.file", "link" : "neko\/trace\/FileEventTracer.html#file:Option[java.io.PrintWriter]", "kind" : "var"}, {"member" : "neko.trace.FileEventTracer#<init>", "error" : "unsupported entity"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.trace.FileEventTracer.topology", "link" : "neko\/trace\/FileEventTracer.html#topology:neko.topology.Topology", "kind" : "val"}, {"label" : "filename", "tail" : ": String", "member" : "neko.trace.FileEventTracer.filename", "link" : "neko\/trace\/FileEventTracer.html#filename:String", "kind" : "val"}, {"label" : "flush", "tail" : "(): Unit", "member" : "neko.trace.EventTracer.flush", "link" : "neko\/trace\/FileEventTracer.html#flush():Unit", "kind" : "def"}, {"label" : "reflect", "tail" : "(pid: PID, protoName: String): String", "member" : "neko.trace.EventTracer.reflect", "link" : "neko\/trace\/FileEventTracer.html#reflect(pid:neko.PID,protoName:String):String", "kind" : "def"}, {"label" : "setTrace", "tail" : "(a: A, pid: PID, protoName: String, name: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.trace.EventTracer.setTrace", "link" : "neko\/trace\/FileEventTracer.html#setTrace[A](a:A,pid:neko.PID,protoName:String,name:String)(implicitevidence$1:EventTracer.this.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "mirrorLists", "tail" : ": Map[PID, List[((String, String), MirrorAndAny)]]", "member" : "neko.trace.EventTracer.mirrorLists", "link" : "neko\/trace\/FileEventTracer.html#mirrorLists:Map[neko.PID,List[((String,String),EventTracer.this.MirrorAndAny)]]", "kind" : "val"}, {"label" : "m", "tail" : ": Mirror", "member" : "neko.trace.EventTracer.m", "link" : "neko\/trace\/FileEventTracer.html#m:EventTracer.this.ru.Mirror", "kind" : "val"}, {"label" : "ru", "tail" : ": JavaUniverse", "member" : "neko.trace.EventTracer.ru", "link" : "neko\/trace\/FileEventTracer.html#ru:scala.reflect.api.JavaUniverse", "kind" : "val"}, {"label" : "mappingMessageIDToSender", "tail" : ": Map[ID[_], Any]", "member" : "neko.trace.EventTracer.mappingMessageIDToSender", "link" : "neko\/trace\/FileEventTracer.html#mappingMessageIDToSender:Map[neko.ID[_],Any]", "kind" : "val"}, {"label" : "protocolImpls", "tail" : ": Map[PID, Seq[Protocol]]", "member" : "neko.trace.EventTracer.protocolImpls", "link" : "neko\/trace\/FileEventTracer.html#protocolImpls:Map[neko.PID,Seq[neko.Protocol]]", "kind" : "val"}, {"label" : "protocols", "tail" : ": Seq[String]", "member" : "neko.trace.EventTracer.protocols", "link" : "neko\/trace\/FileEventTracer.html#protocols:Seq[String]", "kind" : "val"}, {"label" : "entities", "tail" : ": Set[NamedEntity]", "member" : "neko.trace.EventTracer.entities", "link" : "neko\/trace\/FileEventTracer.html#entities:scala.collection.immutable.Set[neko.NamedEntity]", "kind" : "val"}, {"label" : "register", "tail" : "(entity: NamedEntity): Unit", "member" : "neko.trace.EventTracer.register", "link" : "neko\/trace\/FileEventTracer.html#register(entity:neko.NamedEntity):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/FileEventTracer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/FileEventTracer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/FileEventTracer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/FileEventTracer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/FileEventTracer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/FileEventTracer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/FileEventTracer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/FileEventTracer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/FileEventTracer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/FileEventTracer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/FileEventTracer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/FileEventTracer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/FileEventTracer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/FileEventTracer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/FileEventTracer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/FileEventTracer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/trace\/FileEventTracer.html", "kind" : "case class"}, {"name" : "neko.trace.NullEventTracer", "shortDescription" : "", "object" : "neko\/trace\/NullEventTracer$.html", "members_object" : [{"label" : "MirrorAndAny", "tail" : "", "member" : "neko.trace.EventTracer.MirrorAndAny", "link" : "neko\/trace\/EventTracer.html#MirrorAndAnyextendsAnyRef", "kind" : "class"}, {"label" : "DELIVER", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.NullEventTracer.DELIVER", "link" : "neko\/trace\/NullEventTracer$.html#DELIVER(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.NullEventTracer.SEND", "link" : "neko\/trace\/NullEventTracer$.html#SEND(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.NullEventTracer.deliver", "link" : "neko\/trace\/NullEventTracer$.html#deliver(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.NullEventTracer.send", "link" : "neko\/trace\/NullEventTracer$.html#send(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "neko.trace.EventTracer.flush", "link" : "neko\/trace\/NullEventTracer$.html#flush():Unit", "kind" : "def"}, {"label" : "reflect", "tail" : "(pid: PID, protoName: String): String", "member" : "neko.trace.EventTracer.reflect", "link" : "neko\/trace\/NullEventTracer$.html#reflect(pid:neko.PID,protoName:String):String", "kind" : "def"}, {"label" : "setTrace", "tail" : "(a: A, pid: PID, protoName: String, name: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.trace.EventTracer.setTrace", "link" : "neko\/trace\/NullEventTracer$.html#setTrace[A](a:A,pid:neko.PID,protoName:String,name:String)(implicitevidence$1:EventTracer.this.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "mirrorLists", "tail" : ": Map[PID, List[((String, String), MirrorAndAny)]]", "member" : "neko.trace.EventTracer.mirrorLists", "link" : "neko\/trace\/NullEventTracer$.html#mirrorLists:Map[neko.PID,List[((String,String),EventTracer.this.MirrorAndAny)]]", "kind" : "val"}, {"label" : "m", "tail" : ": Mirror", "member" : "neko.trace.EventTracer.m", "link" : "neko\/trace\/NullEventTracer$.html#m:EventTracer.this.ru.Mirror", "kind" : "val"}, {"label" : "ru", "tail" : ": JavaUniverse", "member" : "neko.trace.EventTracer.ru", "link" : "neko\/trace\/NullEventTracer$.html#ru:scala.reflect.api.JavaUniverse", "kind" : "val"}, {"label" : "mappingMessageIDToSender", "tail" : ": Map[ID[_], Any]", "member" : "neko.trace.EventTracer.mappingMessageIDToSender", "link" : "neko\/trace\/NullEventTracer$.html#mappingMessageIDToSender:Map[neko.ID[_],Any]", "kind" : "val"}, {"label" : "protocolImpls", "tail" : ": Map[PID, Seq[Protocol]]", "member" : "neko.trace.EventTracer.protocolImpls", "link" : "neko\/trace\/NullEventTracer$.html#protocolImpls:Map[neko.PID,Seq[neko.Protocol]]", "kind" : "val"}, {"label" : "protocols", "tail" : ": Seq[String]", "member" : "neko.trace.EventTracer.protocols", "link" : "neko\/trace\/NullEventTracer$.html#protocols:Seq[String]", "kind" : "val"}, {"label" : "entities", "tail" : ": Set[NamedEntity]", "member" : "neko.trace.EventTracer.entities", "link" : "neko\/trace\/NullEventTracer$.html#entities:scala.collection.immutable.Set[neko.NamedEntity]", "kind" : "val"}, {"label" : "register", "tail" : "(entity: NamedEntity): Unit", "member" : "neko.trace.EventTracer.register", "link" : "neko\/trace\/NullEventTracer$.html#register(entity:neko.NamedEntity):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/NullEventTracer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/NullEventTracer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/NullEventTracer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/NullEventTracer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/NullEventTracer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/NullEventTracer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/NullEventTracer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/NullEventTracer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/NullEventTracer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/NullEventTracer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/NullEventTracer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/NullEventTracer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/NullEventTracer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/NullEventTracer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/NullEventTracer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/NullEventTracer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/NullEventTracer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/NullEventTracer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/NullEventTracer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.trace.ProtocolDB", "shortDescription" : "Created by Onuki on 2017\/02\/28.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/trace\/ProtocolDB.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/trace\/ProtocolDB.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtocolDB) ⇒ Boolean, msg: ⇒ Any): ProtocolDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/ProtocolDB.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ProtocolDB) ⇒ Boolean): ProtocolDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/ProtocolDB.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ProtocolDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/ProtocolDB.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ProtocolDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/ProtocolDB.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ProtocolDB, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/trace\/ProtocolDB.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ProtocolDB, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/trace\/ProtocolDB.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getName", "tail" : "(id: Int): String", "member" : "neko.trace.ProtocolDB.getName", "link" : "neko\/trace\/ProtocolDB.html#getName(id:Int):String", "kind" : "def"}, {"label" : "getID", "tail" : "(name: String): Int", "member" : "neko.trace.ProtocolDB.getID", "link" : "neko\/trace\/ProtocolDB.html#getID(name:String):Int", "kind" : "def"}, {"label" : "initiate", "tail" : "(): Unit", "member" : "neko.trace.ProtocolDB.initiate", "link" : "neko\/trace\/ProtocolDB.html#initiate():Unit", "kind" : "def"}, {"member" : "neko.trace.ProtocolDB#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/ProtocolDB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/ProtocolDB.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/ProtocolDB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/ProtocolDB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/ProtocolDB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/ProtocolDB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/ProtocolDB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/ProtocolDB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/ProtocolDB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/ProtocolDB.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/ProtocolDB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/ProtocolDB.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/ProtocolDB.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/ProtocolDB.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/ProtocolDB.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/ProtocolDB.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/ProtocolDB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/ProtocolDB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/ProtocolDB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/trace\/ProtocolDB.html", "kind" : "class"}, {"name" : "neko.trace.SingleFileTracer", "shortDescription" : "", "object" : "neko\/trace\/SingleFileTracer$.html", "members_object" : [{"label" : "EventDELIVER", "tail" : "", "member" : "neko.trace.SingleFileTracer.EventDELIVER", "link" : "neko\/trace\/SingleFileTracer$.html#EventDELIVERextendsSingleFileTracer.EventInfowithProductwithSerializable", "kind" : "case class"}, {"label" : "EventDlv", "tail" : "", "member" : "neko.trace.SingleFileTracer.EventDlv", "link" : "neko\/trace\/SingleFileTracer$.html#EventDlvextendsSingleFileTracer.EventInfowithProductwithSerializable", "kind" : "case class"}, {"label" : "EventSEND", "tail" : "", "member" : "neko.trace.SingleFileTracer.EventSEND", "link" : "neko\/trace\/SingleFileTracer$.html#EventSENDextendsSingleFileTracer.EventInfowithProductwithSerializable", "kind" : "case class"}, {"label" : "EventSnd", "tail" : "", "member" : "neko.trace.SingleFileTracer.EventSnd", "link" : "neko\/trace\/SingleFileTracer$.html#EventSndextendsSingleFileTracer.EventInfowithProductwithSerializable", "kind" : "case class"}, {"label" : "EventInfo", "tail" : "", "member" : "neko.trace.SingleFileTracer.EventInfo", "link" : "neko\/trace\/SingleFileTracer$.html#EventInfoextendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/SingleFileTracer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/SingleFileTracer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/SingleFileTracer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/SingleFileTracer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/SingleFileTracer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/SingleFileTracer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/SingleFileTracer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/SingleFileTracer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/SingleFileTracer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/SingleFileTracer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/SingleFileTracer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/SingleFileTracer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/SingleFileTracer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/SingleFileTracer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/SingleFileTracer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/SingleFileTracer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/SingleFileTracer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/SingleFileTracer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/SingleFileTracer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/trace\/SingleFileTracer.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/trace\/SingleFileTracer.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SingleFileTracer) ⇒ Boolean, msg: ⇒ Any): SingleFileTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/SingleFileTracer.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SingleFileTracer) ⇒ Boolean): SingleFileTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/SingleFileTracer.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SingleFileTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/SingleFileTracer.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SingleFileTracer", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/SingleFileTracer.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SingleFileTracer, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/trace\/SingleFileTracer.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SingleFileTracer, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/trace\/SingleFileTracer.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "MirrorAndAny", "tail" : "", "member" : "neko.trace.EventTracer.MirrorAndAny", "link" : "neko\/trace\/EventTracer.html#MirrorAndAnyextendsAnyRef", "kind" : "class"}, {"label" : "flush", "tail" : "(): Unit", "member" : "neko.trace.SingleFileTracer.flush", "link" : "neko\/trace\/SingleFileTracer.html#flush():Unit", "kind" : "def"}, {"label" : "DELIVER", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.SingleFileTracer.DELIVER", "link" : "neko\/trace\/SingleFileTracer.html#DELIVER(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "SEND", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.SingleFileTracer.SEND", "link" : "neko\/trace\/SingleFileTracer.html#SEND(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "deliver", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.SingleFileTracer.deliver", "link" : "neko\/trace\/SingleFileTracer.html#deliver(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(at: Time, by: PID, who: NamedEntity)(event: Event): Unit", "member" : "neko.trace.SingleFileTracer.send", "link" : "neko\/trace\/SingleFileTracer.html#send(at:neko.util.Time,by:neko.PID,who:neko.NamedEntity)(event:neko.Event):Unit", "kind" : "def"}, {"member" : "neko.trace.SingleFileTracer#<init>", "error" : "unsupported entity"}, {"label" : "out", "tail" : ": PrintStream", "member" : "neko.trace.SingleFileTracer.out", "link" : "neko\/trace\/SingleFileTracer.html#out:java.io.PrintStream", "kind" : "val"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.trace.SingleFileTracer.topology", "link" : "neko\/trace\/SingleFileTracer.html#topology:neko.topology.Topology", "kind" : "val"}, {"label" : "reflect", "tail" : "(pid: PID, protoName: String): String", "member" : "neko.trace.EventTracer.reflect", "link" : "neko\/trace\/SingleFileTracer.html#reflect(pid:neko.PID,protoName:String):String", "kind" : "def"}, {"label" : "setTrace", "tail" : "(a: A, pid: PID, protoName: String, name: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[A], arg1: ClassTag[A]): Unit", "member" : "neko.trace.EventTracer.setTrace", "link" : "neko\/trace\/SingleFileTracer.html#setTrace[A](a:A,pid:neko.PID,protoName:String,name:String)(implicitevidence$1:EventTracer.this.ru.TypeTag[A],implicitevidence$2:scala.reflect.ClassTag[A]):Unit", "kind" : "def"}, {"label" : "mirrorLists", "tail" : ": Map[PID, List[((String, String), MirrorAndAny)]]", "member" : "neko.trace.EventTracer.mirrorLists", "link" : "neko\/trace\/SingleFileTracer.html#mirrorLists:Map[neko.PID,List[((String,String),EventTracer.this.MirrorAndAny)]]", "kind" : "val"}, {"label" : "m", "tail" : ": Mirror", "member" : "neko.trace.EventTracer.m", "link" : "neko\/trace\/SingleFileTracer.html#m:EventTracer.this.ru.Mirror", "kind" : "val"}, {"label" : "ru", "tail" : ": JavaUniverse", "member" : "neko.trace.EventTracer.ru", "link" : "neko\/trace\/SingleFileTracer.html#ru:scala.reflect.api.JavaUniverse", "kind" : "val"}, {"label" : "mappingMessageIDToSender", "tail" : ": Map[ID[_], Any]", "member" : "neko.trace.EventTracer.mappingMessageIDToSender", "link" : "neko\/trace\/SingleFileTracer.html#mappingMessageIDToSender:Map[neko.ID[_],Any]", "kind" : "val"}, {"label" : "protocolImpls", "tail" : ": Map[PID, Seq[Protocol]]", "member" : "neko.trace.EventTracer.protocolImpls", "link" : "neko\/trace\/SingleFileTracer.html#protocolImpls:Map[neko.PID,Seq[neko.Protocol]]", "kind" : "val"}, {"label" : "protocols", "tail" : ": Seq[String]", "member" : "neko.trace.EventTracer.protocols", "link" : "neko\/trace\/SingleFileTracer.html#protocols:Seq[String]", "kind" : "val"}, {"label" : "entities", "tail" : ": Set[NamedEntity]", "member" : "neko.trace.EventTracer.entities", "link" : "neko\/trace\/SingleFileTracer.html#entities:scala.collection.immutable.Set[neko.NamedEntity]", "kind" : "val"}, {"label" : "register", "tail" : "(entity: NamedEntity): Unit", "member" : "neko.trace.EventTracer.register", "link" : "neko\/trace\/SingleFileTracer.html#register(entity:neko.NamedEntity):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/SingleFileTracer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/SingleFileTracer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/SingleFileTracer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/SingleFileTracer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/SingleFileTracer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/SingleFileTracer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/SingleFileTracer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/SingleFileTracer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/SingleFileTracer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/SingleFileTracer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/SingleFileTracer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/SingleFileTracer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/SingleFileTracer.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/SingleFileTracer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/SingleFileTracer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/SingleFileTracer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "neko\/trace\/SingleFileTracer.html", "kind" : "case class"}, {"name" : "neko.trace.Tracer", "shortDescription" : "", "object" : "neko\/trace\/Tracer$.html", "members_object" : [{"label" : "OFF", "tail" : ": EventTracer", "member" : "neko.trace.Tracer.OFF", "link" : "neko\/trace\/Tracer$.html#OFF:neko.trace.EventTracer", "kind" : "lazy val"}, {"label" : "consoleOnly", "tail" : ": EventTracer", "member" : "neko.trace.Tracer.consoleOnly", "link" : "neko\/trace\/Tracer$.html#consoleOnly:neko.trace.EventTracer", "kind" : "lazy val"}, {"label" : "fileOnly", "tail" : "(filename: String, topology: Topology): EventTracer", "member" : "neko.trace.Tracer.fileOnly", "link" : "neko\/trace\/Tracer$.html#fileOnly(filename:String,topology:neko.topology.Topology):neko.trace.EventTracer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/Tracer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/Tracer$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/Tracer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/Tracer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/Tracer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/Tracer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/Tracer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/Tracer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/Tracer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/Tracer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/Tracer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/Tracer$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/Tracer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/Tracer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/Tracer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/Tracer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.trace.Tracing", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/trace\/Tracing.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/trace\/Tracing.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Tracing) ⇒ Boolean, msg: ⇒ Any): Tracing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/Tracing.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Tracing) ⇒ Boolean): Tracing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/Tracing.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Tracing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/Tracing.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Tracing", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/Tracing.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Tracing, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/trace\/Tracing.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Tracing, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/trace\/Tracing.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/trace\/Tracing.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/Tracing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/Tracing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/Tracing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/Tracing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/Tracing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/Tracing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/Tracing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracing.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/Tracing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/Tracing.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/Tracing.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/Tracing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/Tracing.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/Tracing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/Tracing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/Tracing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/Tracing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "neko\/trace\/Tracing$.html", "members_object" : [{"label" : "defaultTracer", "tail" : "(): EventTracer", "member" : "neko.trace.Tracing.defaultTracer", "link" : "neko\/trace\/Tracing$.html#defaultTracer:neko.trace.EventTracer", "kind" : "def"}, {"label" : "defaultTracer_=", "tail" : "(tracer: EventTracer): Unit", "member" : "neko.trace.Tracing.defaultTracer_=", "link" : "neko\/trace\/Tracing$.html#defaultTracer_=(tracer:neko.trace.EventTracer):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/Tracing$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/Tracing$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/Tracing$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/Tracing$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/Tracing$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/Tracing$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/Tracing$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracing$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracing$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/Tracing$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/Tracing$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/Tracing$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/Tracing$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/Tracing$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/Tracing$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/Tracing$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/Tracing$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/Tracing$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/Tracing$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/trace\/Tracing.html", "kind" : "trait"}, {"name" : "neko.trace.VariableNameDB", "shortDescription" : "Created by Onuki on 2017\/03\/06.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/trace\/VariableNameDB.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/trace\/VariableNameDB.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VariableNameDB) ⇒ Boolean, msg: ⇒ Any): VariableNameDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/VariableNameDB.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (VariableNameDB) ⇒ Boolean): VariableNameDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/VariableNameDB.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): VariableNameDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/VariableNameDB.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): VariableNameDB", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/trace\/VariableNameDB.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (VariableNameDB, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/trace\/VariableNameDB.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (VariableNameDB, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/trace\/VariableNameDB.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "getName", "tail" : "(id: Int): String", "member" : "neko.trace.VariableNameDB.getName", "link" : "neko\/trace\/VariableNameDB.html#getName(id:Int):String", "kind" : "def"}, {"label" : "getID", "tail" : "(name: String): Int", "member" : "neko.trace.VariableNameDB.getID", "link" : "neko\/trace\/VariableNameDB.html#getID(name:String):Int", "kind" : "def"}, {"label" : "initiate", "tail" : "(): Unit", "member" : "neko.trace.VariableNameDB.initiate", "link" : "neko\/trace\/VariableNameDB.html#initiate():Unit", "kind" : "def"}, {"member" : "neko.trace.VariableNameDB#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/trace\/VariableNameDB.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/trace\/VariableNameDB.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/trace\/VariableNameDB.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/trace\/VariableNameDB.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/trace\/VariableNameDB.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/trace\/VariableNameDB.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/trace\/VariableNameDB.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/VariableNameDB.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/VariableNameDB.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/trace\/VariableNameDB.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/trace\/VariableNameDB.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/trace\/VariableNameDB.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/trace\/VariableNameDB.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/trace\/VariableNameDB.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/trace\/VariableNameDB.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/trace\/VariableNameDB.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/trace\/VariableNameDB.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/trace\/VariableNameDB.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/trace\/VariableNameDB.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/trace\/VariableNameDB.html", "kind" : "class"}], "neko.network" : [{"name" : "neko.network.AbstractNetwork", "shortDescription" : "implements the basic functionality of networks.", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/network\/AbstractNetwork.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/network\/AbstractNetwork.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AbstractNetwork) ⇒ Boolean, msg: ⇒ Any): AbstractNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/AbstractNetwork.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AbstractNetwork) ⇒ Boolean): AbstractNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/AbstractNetwork.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): AbstractNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/AbstractNetwork.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AbstractNetwork", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/AbstractNetwork.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AbstractNetwork, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/network\/AbstractNetwork.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AbstractNetwork, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/network\/AbstractNetwork.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "send", "tail" : "(event: Event): Unit", "member" : "neko.network.AbstractNetwork.send", "link" : "neko\/network\/AbstractNetwork.html#send(event:neko.Event):Unit", "kind" : "def"}, {"label" : "sendTo", "tail" : "(dest: PID, m: Message): Unit", "member" : "neko.network.AbstractNetwork.sendTo", "link" : "neko\/network\/AbstractNetwork.html#sendTo(dest:neko.PID,m:neko.Message):Unit", "kind" : "def"}, {"label" : "receivers_=", "tail" : "(receivers: Map[PID, Receiver]): Unit", "member" : "neko.network.AbstractNetwork.receivers_=", "link" : "neko\/network\/AbstractNetwork.html#receivers_=(receivers:Map[neko.PID,neko.Receiver]):Unit", "kind" : "def"}, {"label" : "receivers", "tail" : "(): Map[PID, Receiver]", "member" : "neko.network.AbstractNetwork.receivers", "link" : "neko\/network\/AbstractNetwork.html#receivers:Map[neko.PID,neko.Receiver]", "kind" : "def"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.network.AbstractNetwork.topology", "link" : "neko\/network\/AbstractNetwork.html#topology:neko.topology.Topology", "kind" : "lazy val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.network.AbstractNetwork.N", "link" : "neko\/network\/AbstractNetwork.html#N:Int", "kind" : "val"}, {"member" : "neko.network.AbstractNetwork#<init>", "error" : "unsupported entity"}, {"label" : "system", "tail" : ": NekoSystem", "member" : "neko.network.AbstractNetwork.system", "link" : "neko\/network\/AbstractNetwork.html#system:neko.kernel.NekoSystem", "kind" : "val"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.trace.Tracing.tracer", "link" : "neko\/network\/AbstractNetwork.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/network\/AbstractNetwork.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.network.Network.start", "link" : "neko\/network\/AbstractNetwork.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.network.Network.preStart", "link" : "neko\/network\/AbstractNetwork.html#preStart():Unit", "kind" : "def"}, {"label" : "doForProcess", "tail" : "(pid: PID)(action: (Receiver) ⇒ T): Option[T]", "member" : "neko.network.Network.doForProcess", "link" : "neko\/network\/AbstractNetwork.html#doForProcess[T](pid:neko.PID)(action:neko.Receiver=>T):Option[T]", "kind" : "def"}, {"label" : "receiverFor", "tail" : "(pid: PID): Option[Receiver]", "member" : "neko.network.Network.receiverFor", "link" : "neko\/network\/AbstractNetwork.html#receiverFor(pid:neko.PID):Option[neko.Receiver]", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): None.type", "member" : "neko.network.Network.senderOpt", "link" : "neko\/network\/AbstractNetwork.html#senderOpt:None.type", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.network.Network.name", "link" : "neko\/network\/AbstractNetwork.html#name:String", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/network\/AbstractNetwork.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/network\/AbstractNetwork.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/AbstractNetwork.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/AbstractNetwork.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/AbstractNetwork.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/AbstractNetwork.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/AbstractNetwork.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/AbstractNetwork.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/AbstractNetwork.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/AbstractNetwork.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/AbstractNetwork.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/AbstractNetwork.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/AbstractNetwork.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/AbstractNetwork.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/AbstractNetwork.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/AbstractNetwork.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/AbstractNetwork.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/AbstractNetwork.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/AbstractNetwork.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/AbstractNetwork.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/AbstractNetwork.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/network\/AbstractNetwork.html", "kind" : "class"}, {"name" : "neko.network.Network", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/network\/Network.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/network\/Network.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Network) ⇒ Boolean, msg: ⇒ Any): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/Network.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Network) ⇒ Boolean): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/Network.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/Network.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Network", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/network\/Network.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Network, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/network\/Network.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Network, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/network\/Network.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "neko.network.Network.start", "link" : "neko\/network\/Network.html#start():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "neko.network.Network.preStart", "link" : "neko\/network\/Network.html#preStart():Unit", "kind" : "def"}, {"label" : "doForProcess", "tail" : "(pid: PID)(action: (Receiver) ⇒ T): Option[T]", "member" : "neko.network.Network.doForProcess", "link" : "neko\/network\/Network.html#doForProcess[T](pid:neko.PID)(action:neko.Receiver=>T):Option[T]", "kind" : "def"}, {"label" : "receiverFor", "tail" : "(pid: PID): Option[Receiver]", "member" : "neko.network.Network.receiverFor", "link" : "neko\/network\/Network.html#receiverFor(pid:neko.PID):Option[neko.Receiver]", "kind" : "def"}, {"label" : "senderOpt", "tail" : "(): None.type", "member" : "neko.network.Network.senderOpt", "link" : "neko\/network\/Network.html#senderOpt:None.type", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "neko.network.Network.name", "link" : "neko\/network\/Network.html#name:String", "kind" : "def"}, {"label" : "context", "tail" : "(): Option[PID]", "member" : "neko.NamedEntity.context", "link" : "neko\/network\/Network.html#context:Option[neko.PID]", "kind" : "def"}, {"label" : "simpleName", "tail" : "(): String", "member" : "neko.NamedEntity.simpleName", "link" : "neko\/network\/Network.html#simpleName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/Network.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/Network.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/Network.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/Network.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/Network.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/Network.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/Network.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/Network.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/Network.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/Network.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/Network.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/Network.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/Network.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/Network.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/Network.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/Network.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/Network.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/Network.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/Network.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "receivers_=", "tail" : "(receivers: Map[PID, Receiver]): Unit", "member" : "neko.network.Network.receivers_=", "link" : "neko\/network\/Network.html#receivers_=(receivers:Map[neko.PID,neko.Receiver]):Unit", "kind" : "abstract def"}, {"label" : "receivers", "tail" : "(): Map[PID, Receiver]", "member" : "neko.network.Network.receivers", "link" : "neko\/network\/Network.html#receivers:Map[neko.PID,neko.Receiver]", "kind" : "abstract def"}, {"label" : "send", "tail" : "(m: Event): Unit", "member" : "neko.network.Network.send", "link" : "neko\/network\/Network.html#send(m:neko.Event):Unit", "kind" : "abstract def"}, {"label" : "topology", "tail" : "(): Topology", "member" : "neko.network.Network.topology", "link" : "neko\/network\/Network.html#topology:neko.topology.Topology", "kind" : "abstract def"}], "shortDescription" : "Implements the behavior of a network.", "object" : "neko\/network\/Network$.html", "members_object" : [{"label" : "forName", "tail" : "(className: String): Try[Class[_ <: Network]]", "member" : "neko.network.Network.forName", "link" : "neko\/network\/Network$.html#forName(className:String):scala.util.Try[Class[_<:neko.network.Network]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/network\/Network$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/network\/Network$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/network\/Network$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/network\/Network$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/network\/Network$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/network\/Network$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/network\/Network$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/Network$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/Network$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/network\/Network$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/network\/Network$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/network\/Network$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/network\/Network$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/network\/Network$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/network\/Network$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/network\/Network$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/network\/Network$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/network\/Network$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/network\/Network$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "neko\/network\/Network.html", "kind" : "trait"}], "neko.gui" : [{"name" : "neko.gui.GUIMain", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/gui\/GUIMain.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/gui\/GUIMain.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GUIMain) ⇒ Boolean, msg: ⇒ Any): GUIMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/GUIMain.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GUIMain) ⇒ Boolean): GUIMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/GUIMain.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GUIMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/GUIMain.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GUIMain", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/GUIMain.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GUIMain, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/gui\/GUIMain.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GUIMain, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/gui\/GUIMain.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "neko.gui.GUIMain#<init>", "error" : "unsupported entity"}, {"label" : "topology", "tail" : ": Topology", "member" : "neko.gui.GUIMain.topology", "link" : "neko\/gui\/GUIMain.html#topology:neko.topology.Topology", "kind" : "val"}, {"label" : "stopApp", "tail" : "(): Unit", "member" : "scalafx.application.JFXApp.stopApp", "link" : "neko\/gui\/GUIMain.html#stopApp():Unit", "kind" : "def"}, {"label" : "hostServices", "tail" : "(): HostServices", "member" : "scalafx.application.JFXApp.hostServices", "link" : "neko\/gui\/GUIMain.html#hostServices:scalafx.application.HostServices", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scalafx.application.JFXApp.main", "link" : "neko\/gui\/GUIMain.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "delayedInit", "tail" : "(x: ⇒ Unit): Unit", "member" : "scalafx.application.JFXApp.delayedInit", "link" : "neko\/gui\/GUIMain.html#delayedInit(x:=>Unit):Unit", "kind" : "def"}, {"label" : "parameters", "tail" : ": Parameters", "member" : "scalafx.application.JFXApp.parameters", "link" : "neko\/gui\/GUIMain.html#parameters:scalafx.application.JFXApp.Parameters", "kind" : "lazy val"}, {"label" : "stage", "tail" : ": PrimaryStage", "member" : "scalafx.application.JFXApp.stage", "link" : "neko\/gui\/GUIMain.html#stage:scalafx.application.JFXApp.PrimaryStage", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/gui\/GUIMain.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/gui\/GUIMain.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/gui\/GUIMain.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/gui\/GUIMain.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/gui\/GUIMain.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/gui\/GUIMain.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/gui\/GUIMain.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/GUIMain.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/GUIMain.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/GUIMain.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/gui\/GUIMain.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/gui\/GUIMain.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/gui\/GUIMain.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/gui\/GUIMain.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/gui\/GUIMain.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/gui\/GUIMain.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/gui\/GUIMain.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/gui\/GUIMain.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/gui\/GUIMain.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/gui\/GUIMain.html", "kind" : "class"}, {"name" : "neko.gui.MultiprocessConsolePane", "shortDescription" : "Created by defago on 11\/05\/2017.", "members_class" : [{"label" : "getCellBounds", "tail" : "(arg0: Int, arg1: Int): Bounds", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getCellBounds", "link" : "neko\/gui\/MultiprocessConsolePane.html#getCellBounds(x$1:Int,x$2:Int):javafx.geometry.Bounds", "kind" : "final def"}, {"label" : "getColumnCount", "tail" : "(): Int", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getColumnCount", "link" : "neko\/gui\/MultiprocessConsolePane.html#getColumnCount():Int", "kind" : "final def"}, {"label" : "getRowCount", "tail" : "(): Int", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getRowCount", "link" : "neko\/gui\/MultiprocessConsolePane.html#getRowCount():Int", "kind" : "final def"}, {"label" : "getColumnConstraints", "tail" : "(): ObservableList[ColumnConstraints]", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getColumnConstraints", "link" : "neko\/gui\/MultiprocessConsolePane.html#getColumnConstraints():javafx.collections.ObservableList[javafx.scene.layout.ColumnConstraints]", "kind" : "final def"}, {"label" : "getRowConstraints", "tail" : "(): ObservableList[RowConstraints]", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getRowConstraints", "link" : "neko\/gui\/MultiprocessConsolePane.html#getRowConstraints():javafx.collections.ObservableList[javafx.scene.layout.RowConstraints]", "kind" : "final def"}, {"label" : "isGridLinesVisible", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.isGridLinesVisible", "link" : "neko\/gui\/MultiprocessConsolePane.html#isGridLinesVisible():Boolean", "kind" : "final def"}, {"label" : "setGridLinesVisible", "tail" : "(arg0: Boolean): Unit", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.setGridLinesVisible", "link" : "neko\/gui\/MultiprocessConsolePane.html#setGridLinesVisible(x$1:Boolean):Unit", "kind" : "final def"}, {"label" : "gridLinesVisibleProperty", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.gridLinesVisibleProperty", "link" : "neko\/gui\/MultiprocessConsolePane.html#gridLinesVisibleProperty():javafx.beans.property.BooleanProperty", "kind" : "final def"}, {"label" : "getAlignment", "tail" : "(): Pos", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getAlignment", "link" : "neko\/gui\/MultiprocessConsolePane.html#getAlignment():javafx.geometry.Pos", "kind" : "final def"}, {"label" : "setAlignment", "tail" : "(arg0: Pos): Unit", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.setAlignment", "link" : "neko\/gui\/MultiprocessConsolePane.html#setAlignment(x$1:javafx.geometry.Pos):Unit", "kind" : "final def"}, {"label" : "alignmentProperty", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.alignmentProperty", "link" : "neko\/gui\/MultiprocessConsolePane.html#alignmentProperty():javafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "final def"}, {"label" : "getVgap", "tail" : "(): Double", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getVgap", "link" : "neko\/gui\/MultiprocessConsolePane.html#getVgap():Double", "kind" : "final def"}, {"label" : "setVgap", "tail" : "(arg0: Double): Unit", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.setVgap", "link" : "neko\/gui\/MultiprocessConsolePane.html#setVgap(x$1:Double):Unit", "kind" : "final def"}, {"label" : "vgapProperty", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.vgapProperty", "link" : "neko\/gui\/MultiprocessConsolePane.html#vgapProperty():javafx.beans.property.DoubleProperty", "kind" : "final def"}, {"label" : "getHgap", "tail" : "(): Double", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.getHgap", "link" : "neko\/gui\/MultiprocessConsolePane.html#getHgap():Double", "kind" : "final def"}, {"label" : "setHgap", "tail" : "(arg0: Double): Unit", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.setHgap", "link" : "neko\/gui\/MultiprocessConsolePane.html#setHgap(x$1:Double):Unit", "kind" : "final def"}, {"label" : "hgapProperty", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.GridPane.sfxGridPane2jfx.hgapProperty", "link" : "neko\/gui\/MultiprocessConsolePane.html#hgapProperty():javafx.beans.property.DoubleProperty", "kind" : "final def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/gui\/MultiprocessConsolePane.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/gui\/MultiprocessConsolePane.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MultiprocessConsolePane) ⇒ Boolean, msg: ⇒ Any): MultiprocessConsolePane", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/MultiprocessConsolePane.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MultiprocessConsolePane) ⇒ Boolean): MultiprocessConsolePane", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/MultiprocessConsolePane.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MultiprocessConsolePane", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/MultiprocessConsolePane.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MultiprocessConsolePane", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/MultiprocessConsolePane.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MultiprocessConsolePane, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/gui\/MultiprocessConsolePane.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MultiprocessConsolePane, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/gui\/MultiprocessConsolePane.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "neko\/gui\/MultiprocessConsolePane.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "neko\/gui\/MultiprocessConsolePane.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "outCommon", "tail" : "(): PrintWriter", "member" : "neko.gui.MultiprocessConsolePane.outCommon", "link" : "neko\/gui\/MultiprocessConsolePane.html#outCommon:java.io.PrintWriter", "kind" : "def"}, {"label" : "networkArea", "tail" : ": WriterArea", "member" : "neko.gui.MultiprocessConsolePane.networkArea", "link" : "neko\/gui\/MultiprocessConsolePane.html#networkArea:neko.gui.WriterArea", "kind" : "val"}, {"label" : "outOption", "tail" : "(pid: PID): Option[PrintWriter]", "member" : "neko.gui.MultiprocessConsolePane.outOption", "link" : "neko\/gui\/MultiprocessConsolePane.html#outOption(pid:neko.PID):Option[java.io.PrintWriter]", "kind" : "def"}, {"label" : "out", "tail" : "(pid: PID): PrintWriter", "member" : "neko.gui.MultiprocessConsolePane.out", "link" : "neko\/gui\/MultiprocessConsolePane.html#out(pid:neko.PID):java.io.PrintWriter", "kind" : "def"}, {"label" : "ROWS", "tail" : ": Int", "member" : "neko.gui.MultiprocessConsolePane.ROWS", "link" : "neko\/gui\/MultiprocessConsolePane.html#ROWS:Int", "kind" : "val"}, {"label" : "COLS", "tail" : ": Int", "member" : "neko.gui.MultiprocessConsolePane.COLS", "link" : "neko\/gui\/MultiprocessConsolePane.html#COLS:Int", "kind" : "val"}, {"label" : "N", "tail" : ": Int", "member" : "neko.gui.MultiprocessConsolePane.N", "link" : "neko\/gui\/MultiprocessConsolePane.html#N:Int", "kind" : "val"}, {"label" : "pids", "tail" : ": IndexedSeq[PID]", "member" : "neko.gui.MultiprocessConsolePane.pids", "link" : "neko\/gui\/MultiprocessConsolePane.html#pids:scala.collection.immutable.IndexedSeq[neko.PID]", "kind" : "val"}, {"member" : "neko.gui.MultiprocessConsolePane#<init>", "error" : "unsupported entity"}, {"label" : "requestLayout", "tail" : "(): Unit", "member" : "scalafx.scene.layout.GridPane.requestLayout", "link" : "neko\/gui\/MultiprocessConsolePane.html#requestLayout():Unit", "kind" : "def"}, {"label" : "addRow", "tail" : "(rowIndex: Int, children: Node*): Unit", "member" : "scalafx.scene.layout.GridPane.addRow", "link" : "neko\/gui\/MultiprocessConsolePane.html#addRow(rowIndex:Int,children:javafx.scene.Node*):Unit", "kind" : "def"}, {"label" : "addColumn", "tail" : "(columnIndex: Int, children: Node*): Unit", "member" : "scalafx.scene.layout.GridPane.addColumn", "link" : "neko\/gui\/MultiprocessConsolePane.html#addColumn(columnIndex:Int,children:javafx.scene.Node*):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(child: Node, columnIndex: Int, rowIndex: Int, colspan: Int, rowspan: Int): Unit", "member" : "scalafx.scene.layout.GridPane.add", "link" : "neko\/gui\/MultiprocessConsolePane.html#add(child:scalafx.scene.Node,columnIndex:Int,rowIndex:Int,colspan:Int,rowspan:Int):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(child: Node, columnIndex: Int, rowIndex: Int): Unit", "member" : "scalafx.scene.layout.GridPane.add", "link" : "neko\/gui\/MultiprocessConsolePane.html#add(child:scalafx.scene.Node,columnIndex:Int,rowIndex:Int):Unit", "kind" : "def"}, {"label" : "rowConstraints_=", "tail" : "(c: Iterable[RowConstraints]): Unit", "member" : "scalafx.scene.layout.GridPane.rowConstraints_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#rowConstraints_=(c:Iterable[scalafx.scene.layout.RowConstraints]):Unit", "kind" : "def"}, {"label" : "rowConstraints", "tail" : "(): ObservableList[RowConstraints]", "member" : "scalafx.scene.layout.GridPane.rowConstraints", "link" : "neko\/gui\/MultiprocessConsolePane.html#rowConstraints:javafx.collections.ObservableList[javafx.scene.layout.RowConstraints]", "kind" : "def"}, {"label" : "columnConstraints_=", "tail" : "(c: Iterable[ColumnConstraints]): Unit", "member" : "scalafx.scene.layout.GridPane.columnConstraints_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#columnConstraints_=(c:Iterable[scalafx.scene.layout.ColumnConstraints]):Unit", "kind" : "def"}, {"label" : "columnConstraints", "tail" : "(): ObservableList[ColumnConstraints]", "member" : "scalafx.scene.layout.GridPane.columnConstraints", "link" : "neko\/gui\/MultiprocessConsolePane.html#columnConstraints:javafx.collections.ObservableList[javafx.scene.layout.ColumnConstraints]", "kind" : "def"}, {"label" : "vgap_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.GridPane.vgap_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#vgap_=(v:Double):Unit", "kind" : "def"}, {"label" : "vgap", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.GridPane.vgap", "link" : "neko\/gui\/MultiprocessConsolePane.html#vgap:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "hgap_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.GridPane.hgap_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#hgap_=(v:Double):Unit", "kind" : "def"}, {"label" : "hgap", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.GridPane.hgap", "link" : "neko\/gui\/MultiprocessConsolePane.html#hgap:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "gridLinesVisible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.GridPane.gridLinesVisible_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#gridLinesVisible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "gridLinesVisible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.GridPane.gridLinesVisible", "link" : "neko\/gui\/MultiprocessConsolePane.html#gridLinesVisible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "delegate", "tail" : ": GridPane", "member" : "scalafx.scene.layout.GridPane.delegate", "link" : "neko\/gui\/MultiprocessConsolePane.html#delegate:javafx.scene.layout.GridPane", "kind" : "val"}, {"label" : "alignment_=", "tail" : "(v: Pos): Unit", "member" : "scalafx.delegate.AlignmentDelegate.alignment_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#alignment_=(v:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignment", "tail" : "(): ObjectProperty[Pos]", "member" : "scalafx.delegate.AlignmentDelegate.alignment", "link" : "neko\/gui\/MultiprocessConsolePane.html#alignment:scalafx.beans.property.ObjectProperty[javafx.geometry.Pos]", "kind" : "def"}, {"label" : "children_=", "tail" : "(n: Node): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#children_=(n:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "children_=", "tail" : "(c: Iterable[Node]): Unit", "member" : "scalafx.scene.layout.Pane.children_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#children_=(c:Iterable[scalafx.scene.Node]):Unit", "kind" : "def"}, {"label" : "children", "tail" : "(): ObservableList[Node]", "member" : "scalafx.scene.layout.Pane.children", "link" : "neko\/gui\/MultiprocessConsolePane.html#children:javafx.collections.ObservableList[javafx.scene.Node]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "neko\/gui\/MultiprocessConsolePane.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "neko\/gui\/MultiprocessConsolePane.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "neko\/gui\/MultiprocessConsolePane.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "neko\/gui\/MultiprocessConsolePane.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "neko\/gui\/MultiprocessConsolePane.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "neko\/gui\/MultiprocessConsolePane.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "neko\/gui\/MultiprocessConsolePane.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "neko\/gui\/MultiprocessConsolePane.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "neko\/gui\/MultiprocessConsolePane.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "neko\/gui\/MultiprocessConsolePane.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "neko\/gui\/MultiprocessConsolePane.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "neko\/gui\/MultiprocessConsolePane.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "neko\/gui\/MultiprocessConsolePane.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "neko\/gui\/MultiprocessConsolePane.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "neko\/gui\/MultiprocessConsolePane.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "neko\/gui\/MultiprocessConsolePane.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "neko\/gui\/MultiprocessConsolePane.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "neko\/gui\/MultiprocessConsolePane.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "neko\/gui\/MultiprocessConsolePane.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "neko\/gui\/MultiprocessConsolePane.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "neko\/gui\/MultiprocessConsolePane.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "viewOrder_", "tail" : "(value: Double): Unit", "member" : "scalafx.scene.Node.viewOrder_", "link" : "neko\/gui\/MultiprocessConsolePane.html#viewOrder_(value:Double):Unit", "kind" : "def"}, {"label" : "viewOrder", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.viewOrder", "link" : "neko\/gui\/MultiprocessConsolePane.html#viewOrder:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "neko\/gui\/MultiprocessConsolePane.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "neko\/gui\/MultiprocessConsolePane.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "neko\/gui\/MultiprocessConsolePane.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "neko\/gui\/MultiprocessConsolePane.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "neko\/gui\/MultiprocessConsolePane.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "neko\/gui\/MultiprocessConsolePane.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "neko\/gui\/MultiprocessConsolePane.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "neko\/gui\/MultiprocessConsolePane.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "neko\/gui\/MultiprocessConsolePane.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "neko\/gui\/MultiprocessConsolePane.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "neko\/gui\/MultiprocessConsolePane.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "neko\/gui\/MultiprocessConsolePane.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "neko\/gui\/MultiprocessConsolePane.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "neko\/gui\/MultiprocessConsolePane.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "neko\/gui\/MultiprocessConsolePane.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) ⇒ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "neko\/gui\/MultiprocessConsolePane.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "neko\/gui\/MultiprocessConsolePane.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "neko\/gui\/MultiprocessConsolePane.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "neko\/gui\/MultiprocessConsolePane.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "neko\/gui\/MultiprocessConsolePane.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "neko\/gui\/MultiprocessConsolePane.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "neko\/gui\/MultiprocessConsolePane.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "neko\/gui\/MultiprocessConsolePane.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "neko\/gui\/MultiprocessConsolePane.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "neko\/gui\/MultiprocessConsolePane.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "neko\/gui\/MultiprocessConsolePane.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "neko\/gui\/MultiprocessConsolePane.html#minWidth(width:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "neko\/gui\/MultiprocessConsolePane.html#minHeight(height:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "neko\/gui\/MultiprocessConsolePane.html#maxWidth(width:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "neko\/gui\/MultiprocessConsolePane.html#maxHeight(height:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "neko\/gui\/MultiprocessConsolePane.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "neko\/gui\/MultiprocessConsolePane.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "neko\/gui\/MultiprocessConsolePane.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "neko\/gui\/MultiprocessConsolePane.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "neko\/gui\/MultiprocessConsolePane.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "neko\/gui\/MultiprocessConsolePane.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: scalafx.event.Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "neko\/gui\/MultiprocessConsolePane.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "neko\/gui\/MultiprocessConsolePane.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "neko\/gui\/MultiprocessConsolePane.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "neko\/gui\/MultiprocessConsolePane.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "neko\/gui\/MultiprocessConsolePane.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "neko\/gui\/MultiprocessConsolePane.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "neko\/gui\/MultiprocessConsolePane.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "neko\/gui\/MultiprocessConsolePane.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "neko\/gui\/MultiprocessConsolePane.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "neko\/gui\/MultiprocessConsolePane.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "neko\/gui\/MultiprocessConsolePane.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "neko\/gui\/MultiprocessConsolePane.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "neko\/gui\/MultiprocessConsolePane.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "neko\/gui\/MultiprocessConsolePane.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "neko\/gui\/MultiprocessConsolePane.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "neko\/gui\/MultiprocessConsolePane.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "neko\/gui\/MultiprocessConsolePane.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "neko\/gui\/MultiprocessConsolePane.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "neko\/gui\/MultiprocessConsolePane.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "neko\/gui\/MultiprocessConsolePane.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "neko\/gui\/MultiprocessConsolePane.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "neko\/gui\/MultiprocessConsolePane.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "neko\/gui\/MultiprocessConsolePane.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "neko\/gui\/MultiprocessConsolePane.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "neko\/gui\/MultiprocessConsolePane.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "neko\/gui\/MultiprocessConsolePane.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "neko\/gui\/MultiprocessConsolePane.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "neko\/gui\/MultiprocessConsolePane.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "neko\/gui\/MultiprocessConsolePane.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "neko\/gui\/MultiprocessConsolePane.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "neko\/gui\/MultiprocessConsolePane.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "neko\/gui\/MultiprocessConsolePane.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "neko\/gui\/MultiprocessConsolePane.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "neko\/gui\/MultiprocessConsolePane.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "neko\/gui\/MultiprocessConsolePane.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "neko\/gui\/MultiprocessConsolePane.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "neko\/gui\/MultiprocessConsolePane.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "neko\/gui\/MultiprocessConsolePane.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "neko\/gui\/MultiprocessConsolePane.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "neko\/gui\/MultiprocessConsolePane.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "neko\/gui\/MultiprocessConsolePane.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "neko\/gui\/MultiprocessConsolePane.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "neko\/gui\/MultiprocessConsolePane.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "neko\/gui\/MultiprocessConsolePane.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "neko\/gui\/MultiprocessConsolePane.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "neko\/gui\/MultiprocessConsolePane.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "neko\/gui\/MultiprocessConsolePane.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "neko\/gui\/MultiprocessConsolePane.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "neko\/gui\/MultiprocessConsolePane.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "neko\/gui\/MultiprocessConsolePane.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "neko\/gui\/MultiprocessConsolePane.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "neko\/gui\/MultiprocessConsolePane.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "neko\/gui\/MultiprocessConsolePane.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "neko\/gui\/MultiprocessConsolePane.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "neko\/gui\/MultiprocessConsolePane.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "neko\/gui\/MultiprocessConsolePane.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "neko\/gui\/MultiprocessConsolePane.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "neko\/gui\/MultiprocessConsolePane.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "neko\/gui\/MultiprocessConsolePane.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "neko\/gui\/MultiprocessConsolePane.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "neko\/gui\/MultiprocessConsolePane.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "neko\/gui\/MultiprocessConsolePane.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "neko\/gui\/MultiprocessConsolePane.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "neko\/gui\/MultiprocessConsolePane.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scalafx.delegate.SFXDelegate.hashCode", "link" : "neko\/gui\/MultiprocessConsolePane.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(ref: Any): Boolean", "member" : "scalafx.delegate.SFXDelegate.equals", "link" : "neko\/gui\/MultiprocessConsolePane.html#equals(ref:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafx.delegate.SFXDelegate.toString", "link" : "neko\/gui\/MultiprocessConsolePane.html#toString():String", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "neko\/gui\/MultiprocessConsolePane.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "neko\/gui\/MultiprocessConsolePane.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "neko\/gui\/MultiprocessConsolePane.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "neko\/gui\/MultiprocessConsolePane.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "neko\/gui\/MultiprocessConsolePane.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "neko\/gui\/MultiprocessConsolePane.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "neko\/gui\/MultiprocessConsolePane.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "neko\/gui\/MultiprocessConsolePane.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/gui\/MultiprocessConsolePane.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/gui\/MultiprocessConsolePane.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/gui\/MultiprocessConsolePane.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/gui\/MultiprocessConsolePane.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/gui\/MultiprocessConsolePane.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/gui\/MultiprocessConsolePane.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/gui\/MultiprocessConsolePane.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/MultiprocessConsolePane.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/MultiprocessConsolePane.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/MultiprocessConsolePane.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/gui\/MultiprocessConsolePane.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/gui\/MultiprocessConsolePane.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/gui\/MultiprocessConsolePane.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/gui\/MultiprocessConsolePane.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/gui\/MultiprocessConsolePane.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/gui\/MultiprocessConsolePane.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/gui\/MultiprocessConsolePane.html", "kind" : "class"}, {"name" : "neko.gui.StringPropertyWriter", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/gui\/StringPropertyWriter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/gui\/StringPropertyWriter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StringPropertyWriter) ⇒ Boolean, msg: ⇒ Any): StringPropertyWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/StringPropertyWriter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StringPropertyWriter) ⇒ Boolean): StringPropertyWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/StringPropertyWriter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StringPropertyWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/StringPropertyWriter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StringPropertyWriter", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/StringPropertyWriter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StringPropertyWriter, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/gui\/StringPropertyWriter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StringPropertyWriter, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/gui\/StringPropertyWriter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "write", "tail" : "(cbuf: Array[Char], off: Int, len: Int): Unit", "member" : "neko.gui.StringPropertyWriter.write", "link" : "neko\/gui\/StringPropertyWriter.html#write(cbuf:Array[Char],off:Int,len:Int):Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "neko.gui.StringPropertyWriter.close", "link" : "neko\/gui\/StringPropertyWriter.html#close():Unit", "kind" : "def"}, {"label" : "flush", "tail" : "(): Unit", "member" : "neko.gui.StringPropertyWriter.flush", "link" : "neko\/gui\/StringPropertyWriter.html#flush():Unit", "kind" : "def"}, {"member" : "neko.gui.StringPropertyWriter#<init>", "error" : "unsupported entity"}, {"label" : "append", "tail" : "(arg0: Char): Writer", "member" : "java.io.Writer.append", "link" : "neko\/gui\/StringPropertyWriter.html#append(x$1:Char):java.io.Writer", "kind" : "def"}, {"label" : "append", "tail" : "(arg0: CharSequence, arg1: Int, arg2: Int): Writer", "member" : "java.io.Writer.append", "link" : "neko\/gui\/StringPropertyWriter.html#append(x$1:CharSequence,x$2:Int,x$3:Int):java.io.Writer", "kind" : "def"}, {"label" : "append", "tail" : "(arg0: CharSequence): Writer", "member" : "java.io.Writer.append", "link" : "neko\/gui\/StringPropertyWriter.html#append(x$1:CharSequence):java.io.Writer", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: String, arg1: Int, arg2: Int): Unit", "member" : "java.io.Writer.write", "link" : "neko\/gui\/StringPropertyWriter.html#write(x$1:String,x$2:Int,x$3:Int):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: String): Unit", "member" : "java.io.Writer.write", "link" : "neko\/gui\/StringPropertyWriter.html#write(x$1:String):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Array[Char]): Unit", "member" : "java.io.Writer.write", "link" : "neko\/gui\/StringPropertyWriter.html#write(x$1:Array[Char]):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: Int): Unit", "member" : "java.io.Writer.write", "link" : "neko\/gui\/StringPropertyWriter.html#write(x$1:Int):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/gui\/StringPropertyWriter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/gui\/StringPropertyWriter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/gui\/StringPropertyWriter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/gui\/StringPropertyWriter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/gui\/StringPropertyWriter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/gui\/StringPropertyWriter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/gui\/StringPropertyWriter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/StringPropertyWriter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/StringPropertyWriter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/StringPropertyWriter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/gui\/StringPropertyWriter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/gui\/StringPropertyWriter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/gui\/StringPropertyWriter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/gui\/StringPropertyWriter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/gui\/StringPropertyWriter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/gui\/StringPropertyWriter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/gui\/StringPropertyWriter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/gui\/StringPropertyWriter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/gui\/StringPropertyWriter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/gui\/StringPropertyWriter.html", "kind" : "class"}, {"name" : "neko.gui.WriterArea", "shortDescription" : "", "members_class" : [{"label" : "setScrollLeft", "tail" : "(arg0: Double): Unit", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.setScrollLeft", "link" : "neko\/gui\/WriterArea.html#setScrollLeft(x$1:Double):Unit", "kind" : "final def"}, {"label" : "getScrollLeft", "tail" : "(): Double", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.getScrollLeft", "link" : "neko\/gui\/WriterArea.html#getScrollLeft():Double", "kind" : "final def"}, {"label" : "scrollLeftProperty", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.scrollLeftProperty", "link" : "neko\/gui\/WriterArea.html#scrollLeftProperty():javafx.beans.property.DoubleProperty", "kind" : "final def"}, {"label" : "setScrollTop", "tail" : "(arg0: Double): Unit", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.setScrollTop", "link" : "neko\/gui\/WriterArea.html#setScrollTop(x$1:Double):Unit", "kind" : "final def"}, {"label" : "getScrollTop", "tail" : "(): Double", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.getScrollTop", "link" : "neko\/gui\/WriterArea.html#getScrollTop():Double", "kind" : "final def"}, {"label" : "scrollTopProperty", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.scrollTopProperty", "link" : "neko\/gui\/WriterArea.html#scrollTopProperty():javafx.beans.property.DoubleProperty", "kind" : "final def"}, {"label" : "setPrefRowCount", "tail" : "(arg0: Int): Unit", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.setPrefRowCount", "link" : "neko\/gui\/WriterArea.html#setPrefRowCount(x$1:Int):Unit", "kind" : "final def"}, {"label" : "getPrefRowCount", "tail" : "(): Int", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.getPrefRowCount", "link" : "neko\/gui\/WriterArea.html#getPrefRowCount():Int", "kind" : "final def"}, {"label" : "prefRowCountProperty", "tail" : "(): IntegerProperty", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.prefRowCountProperty", "link" : "neko\/gui\/WriterArea.html#prefRowCountProperty():javafx.beans.property.IntegerProperty", "kind" : "final def"}, {"label" : "setPrefColumnCount", "tail" : "(arg0: Int): Unit", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.setPrefColumnCount", "link" : "neko\/gui\/WriterArea.html#setPrefColumnCount(x$1:Int):Unit", "kind" : "final def"}, {"label" : "getPrefColumnCount", "tail" : "(): Int", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.getPrefColumnCount", "link" : "neko\/gui\/WriterArea.html#getPrefColumnCount():Int", "kind" : "final def"}, {"label" : "prefColumnCountProperty", "tail" : "(): IntegerProperty", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.prefColumnCountProperty", "link" : "neko\/gui\/WriterArea.html#prefColumnCountProperty():javafx.beans.property.IntegerProperty", "kind" : "final def"}, {"label" : "setWrapText", "tail" : "(arg0: Boolean): Unit", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.setWrapText", "link" : "neko\/gui\/WriterArea.html#setWrapText(x$1:Boolean):Unit", "kind" : "final def"}, {"label" : "isWrapText", "tail" : "(): Boolean", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.isWrapText", "link" : "neko\/gui\/WriterArea.html#isWrapText():Boolean", "kind" : "final def"}, {"label" : "wrapTextProperty", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.wrapTextProperty", "link" : "neko\/gui\/WriterArea.html#wrapTextProperty():javafx.beans.property.BooleanProperty", "kind" : "final def"}, {"label" : "getParagraphs", "tail" : "(): ObservableList[CharSequence]", "member" : "scalafx.scene.control.TextArea.sfxTextArea2jfx.getParagraphs", "link" : "neko\/gui\/WriterArea.html#getParagraphs():javafx.collections.ObservableList[CharSequence]", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/gui\/WriterArea.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/gui\/WriterArea.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WriterArea) ⇒ Boolean, msg: ⇒ Any): WriterArea", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/WriterArea.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (WriterArea) ⇒ Boolean): WriterArea", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/WriterArea.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): WriterArea", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/WriterArea.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): WriterArea", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/gui\/WriterArea.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (WriterArea, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/gui\/WriterArea.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (WriterArea, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/gui\/WriterArea.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "FilterMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.FilterMagnet", "link" : "neko\/gui\/WriterArea.html#FilterMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "HandlerMagnet", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.HandlerMagnet", "link" : "neko\/gui\/WriterArea.html#HandlerMagnet[J<:<?>,S<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "out", "tail" : ": PrintWriter", "member" : "neko.gui.WriterArea.out", "link" : "neko\/gui\/WriterArea.html#out:java.io.PrintWriter", "kind" : "val"}, {"member" : "neko.gui.WriterArea#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "neko.gui.WriterArea.name", "link" : "neko\/gui\/WriterArea.html#name:String", "kind" : "val"}, {"label" : "paragraphs", "tail" : "(): ObservableList[CharSequence]", "member" : "scalafx.scene.control.TextArea.paragraphs", "link" : "neko\/gui\/WriterArea.html#paragraphs:javafx.collections.ObservableList[CharSequence]", "kind" : "def"}, {"label" : "wrapText_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.control.TextArea.wrapText_=", "link" : "neko\/gui\/WriterArea.html#wrapText_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "wrapText", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.control.TextArea.wrapText", "link" : "neko\/gui\/WriterArea.html#wrapText:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "scrollTop_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.control.TextArea.scrollTop_=", "link" : "neko\/gui\/WriterArea.html#scrollTop_=(v:Double):Unit", "kind" : "def"}, {"label" : "scrollTop", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.control.TextArea.scrollTop", "link" : "neko\/gui\/WriterArea.html#scrollTop:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scrollLeft_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.control.TextArea.scrollLeft_=", "link" : "neko\/gui\/WriterArea.html#scrollLeft_=(v:Double):Unit", "kind" : "def"}, {"label" : "scrollLeft", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.control.TextArea.scrollLeft", "link" : "neko\/gui\/WriterArea.html#scrollLeft:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefRowCount_=", "tail" : "(v: Int): Unit", "member" : "scalafx.scene.control.TextArea.prefRowCount_=", "link" : "neko\/gui\/WriterArea.html#prefRowCount_=(v:Int):Unit", "kind" : "def"}, {"label" : "prefRowCount", "tail" : "(): IntegerProperty", "member" : "scalafx.scene.control.TextArea.prefRowCount", "link" : "neko\/gui\/WriterArea.html#prefRowCount:scalafx.beans.property.IntegerProperty", "kind" : "def"}, {"label" : "prefColumnCount_=", "tail" : "(v: Int): Unit", "member" : "scalafx.scene.control.TextArea.prefColumnCount_=", "link" : "neko\/gui\/WriterArea.html#prefColumnCount_=(v:Int):Unit", "kind" : "def"}, {"label" : "prefColumnCount", "tail" : "(): IntegerProperty", "member" : "scalafx.scene.control.TextArea.prefColumnCount", "link" : "neko\/gui\/WriterArea.html#prefColumnCount:scalafx.beans.property.IntegerProperty", "kind" : "def"}, {"label" : "delegate", "tail" : ": TextArea", "member" : "scalafx.scene.control.TextArea.delegate", "link" : "neko\/gui\/WriterArea.html#delegate:javafx.scene.control.TextArea", "kind" : "val"}, {"label" : "textFormatter_=", "tail" : "(v: TextFormatter[_]): Unit", "member" : "scalafx.scene.control.TextInputControl.textFormatter_=", "link" : "neko\/gui\/WriterArea.html#textFormatter_=(v:scalafx.scene.control.TextFormatter[_]):Unit", "kind" : "def"}, {"label" : "textFormatter", "tail" : "(): ObjectProperty[TextFormatter[_]]", "member" : "scalafx.scene.control.TextInputControl.textFormatter", "link" : "neko\/gui\/WriterArea.html#textFormatter:scalafx.beans.property.ObjectProperty[javafx.scene.control.TextFormatter[_]]", "kind" : "def"}, {"label" : "promptText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.control.TextInputControl.promptText_=", "link" : "neko\/gui\/WriterArea.html#promptText_=(v:String):Unit", "kind" : "def"}, {"label" : "promptText", "tail" : "(): StringProperty", "member" : "scalafx.scene.control.TextInputControl.promptText", "link" : "neko\/gui\/WriterArea.html#promptText:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "text_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.control.TextInputControl.text_=", "link" : "neko\/gui\/WriterArea.html#text_=(v:String):Unit", "kind" : "def"}, {"label" : "text", "tail" : "(): StringProperty", "member" : "scalafx.scene.control.TextInputControl.text", "link" : "neko\/gui\/WriterArea.html#text:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "redoable", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.control.TextInputControl.redoable", "link" : "neko\/gui\/WriterArea.html#redoable:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "undoable", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.control.TextInputControl.undoable", "link" : "neko\/gui\/WriterArea.html#undoable:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "selection", "tail" : "(): ReadOnlyObjectProperty[IndexRange]", "member" : "scalafx.scene.control.TextInputControl.selection", "link" : "neko\/gui\/WriterArea.html#selection:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.control.IndexRange]", "kind" : "def"}, {"label" : "selectedText", "tail" : "(): ReadOnlyStringProperty", "member" : "scalafx.scene.control.TextInputControl.selectedText", "link" : "neko\/gui\/WriterArea.html#selectedText:scalafx.beans.property.ReadOnlyStringProperty", "kind" : "def"}, {"label" : "length", "tail" : "(): ReadOnlyIntegerProperty", "member" : "scalafx.scene.control.TextInputControl.length", "link" : "neko\/gui\/WriterArea.html#length:scalafx.beans.property.ReadOnlyIntegerProperty", "kind" : "def"}, {"label" : "font_=", "tail" : "(v: Font): Unit", "member" : "scalafx.scene.control.TextInputControl.font_=", "link" : "neko\/gui\/WriterArea.html#font_=(v:javafx.scene.text.Font):Unit", "kind" : "def"}, {"label" : "font", "tail" : "(): ObjectProperty[Font]", "member" : "scalafx.scene.control.TextInputControl.font", "link" : "neko\/gui\/WriterArea.html#font:scalafx.beans.property.ObjectProperty[javafx.scene.text.Font]", "kind" : "def"}, {"label" : "editable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.control.TextInputControl.editable_=", "link" : "neko\/gui\/WriterArea.html#editable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "editable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.control.TextInputControl.editable", "link" : "neko\/gui\/WriterArea.html#editable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "caretPosition", "tail" : "(): ReadOnlyIntegerProperty", "member" : "scalafx.scene.control.TextInputControl.caretPosition", "link" : "neko\/gui\/WriterArea.html#caretPosition:scalafx.beans.property.ReadOnlyIntegerProperty", "kind" : "def"}, {"label" : "anchor", "tail" : "(): ReadOnlyIntegerProperty", "member" : "scalafx.scene.control.TextInputControl.anchor", "link" : "neko\/gui\/WriterArea.html#anchor:scalafx.beans.property.ReadOnlyIntegerProperty", "kind" : "def"}, {"label" : "tooltip_=", "tail" : "(v: Tooltip): Unit", "member" : "scalafx.scene.control.Control.tooltip_=", "link" : "neko\/gui\/WriterArea.html#tooltip_=(v:scalafx.scene.control.Tooltip):Unit", "kind" : "def"}, {"label" : "tooltip", "tail" : "(): ObjectProperty[Tooltip]", "member" : "scalafx.scene.control.Control.tooltip", "link" : "neko\/gui\/WriterArea.html#tooltip:scalafx.beans.property.ObjectProperty[javafx.scene.control.Tooltip]", "kind" : "def"}, {"label" : "contextMenu_=", "tail" : "(v: ContextMenu): Unit", "member" : "scalafx.scene.control.Control.contextMenu_=", "link" : "neko\/gui\/WriterArea.html#contextMenu_=(v:scalafx.scene.control.ContextMenu):Unit", "kind" : "def"}, {"label" : "contextMenu", "tail" : "(): ObjectProperty[ContextMenu]", "member" : "scalafx.scene.control.Control.contextMenu", "link" : "neko\/gui\/WriterArea.html#contextMenu:scalafx.beans.property.ObjectProperty[javafx.scene.control.ContextMenu]", "kind" : "def"}, {"label" : "skin_=", "tail" : "(v: Skin[_]): Unit", "member" : "scalafx.scene.control.Skinnable.skin_=", "link" : "neko\/gui\/WriterArea.html#skin_=(v:scalafx.scene.control.Skin[_]):Unit", "kind" : "def"}, {"label" : "skin", "tail" : "(): ObjectProperty[Skin[_]]", "member" : "scalafx.scene.control.Skinnable.skin", "link" : "neko\/gui\/WriterArea.html#skin:scalafx.beans.property.ObjectProperty[javafx.scene.control.Skin[_]]", "kind" : "def"}, {"label" : "insets", "tail" : "(): Insets", "member" : "scalafx.scene.layout.Region.insets", "link" : "neko\/gui\/WriterArea.html#insets:javafx.geometry.Insets", "kind" : "def"}, {"label" : "scaleShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.scaleShape_=", "link" : "neko\/gui\/WriterArea.html#scaleShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "scaleShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.scaleShape", "link" : "neko\/gui\/WriterArea.html#scaleShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "resize", "tail" : "(width: Double, height: Double): Unit", "member" : "scalafx.scene.layout.Region.resize", "link" : "neko\/gui\/WriterArea.html#resize(width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "resize", "tail" : "(): Boolean", "member" : "scalafx.scene.layout.Region.resize", "link" : "neko\/gui\/WriterArea.html#resize:Boolean", "kind" : "def"}, {"label" : "snapToPixel_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.snapToPixel_=", "link" : "neko\/gui\/WriterArea.html#snapToPixel_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "snapToPixel", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.snapToPixel", "link" : "neko\/gui\/WriterArea.html#snapToPixel:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "shape_=", "tail" : "(v: Shape): Unit", "member" : "scalafx.scene.layout.Region.shape_=", "link" : "neko\/gui\/WriterArea.html#shape_=(v:scalafx.scene.shape.Shape):Unit", "kind" : "def"}, {"label" : "shape", "tail" : "(): ObjectProperty[Shape]", "member" : "scalafx.scene.layout.Region.shape", "link" : "neko\/gui\/WriterArea.html#shape:scalafx.beans.property.ObjectProperty[javafx.scene.shape.Shape]", "kind" : "def"}, {"label" : "prefWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefWidth_=", "link" : "neko\/gui\/WriterArea.html#prefWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefWidth", "link" : "neko\/gui\/WriterArea.html#prefWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "prefHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.prefHeight_=", "link" : "neko\/gui\/WriterArea.html#prefHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "prefHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.prefHeight", "link" : "neko\/gui\/WriterArea.html#prefHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "padding_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.padding_=", "link" : "neko\/gui\/WriterArea.html#padding_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "padding", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.padding", "link" : "neko\/gui\/WriterArea.html#padding:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "opaqueInsets_=", "tail" : "(v: Insets): Unit", "member" : "scalafx.scene.layout.Region.opaqueInsets_=", "link" : "neko\/gui\/WriterArea.html#opaqueInsets_=(v:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "opaqueInsets", "tail" : "(): ObjectProperty[Insets]", "member" : "scalafx.scene.layout.Region.opaqueInsets", "link" : "neko\/gui\/WriterArea.html#opaqueInsets:scalafx.beans.property.ObjectProperty[javafx.geometry.Insets]", "kind" : "def"}, {"label" : "minWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minWidth_=", "link" : "neko\/gui\/WriterArea.html#minWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "minWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minWidth", "link" : "neko\/gui\/WriterArea.html#minWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "minHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.minHeight_=", "link" : "neko\/gui\/WriterArea.html#minHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "minHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.minHeight", "link" : "neko\/gui\/WriterArea.html#minHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxWidth_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxWidth_=", "link" : "neko\/gui\/WriterArea.html#maxWidth_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxWidth", "link" : "neko\/gui\/WriterArea.html#maxWidth:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "maxHeight_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.layout.Region.maxHeight_=", "link" : "neko\/gui\/WriterArea.html#maxHeight_=(v:Double):Unit", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.layout.Region.maxHeight", "link" : "neko\/gui\/WriterArea.html#maxHeight:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "width", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.width", "link" : "neko\/gui\/WriterArea.html#width:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "height", "tail" : "(): ReadOnlyDoubleProperty", "member" : "scalafx.scene.layout.Region.height", "link" : "neko\/gui\/WriterArea.html#height:scalafx.beans.property.ReadOnlyDoubleProperty", "kind" : "def"}, {"label" : "centerShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.centerShape_=", "link" : "neko\/gui\/WriterArea.html#centerShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "centerShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.centerShape", "link" : "neko\/gui\/WriterArea.html#centerShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheShape_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.layout.Region.cacheShape_=", "link" : "neko\/gui\/WriterArea.html#cacheShape_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cacheShape", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.layout.Region.cacheShape", "link" : "neko\/gui\/WriterArea.html#cacheShape:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "border_=", "tail" : "(v: Border): Unit", "member" : "scalafx.scene.layout.Region.border_=", "link" : "neko\/gui\/WriterArea.html#border_=(v:scalafx.scene.layout.Border):Unit", "kind" : "def"}, {"label" : "border", "tail" : "(): ObjectProperty[Border]", "member" : "scalafx.scene.layout.Region.border", "link" : "neko\/gui\/WriterArea.html#border:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Border]", "kind" : "def"}, {"label" : "background_=", "tail" : "(v: Background): Unit", "member" : "scalafx.scene.layout.Region.background_=", "link" : "neko\/gui\/WriterArea.html#background_=(v:scalafx.scene.layout.Background):Unit", "kind" : "def"}, {"label" : "background", "tail" : "(): ObjectProperty[Background]", "member" : "scalafx.scene.layout.Region.background", "link" : "neko\/gui\/WriterArea.html#background:scalafx.beans.property.ObjectProperty[javafx.scene.layout.Background]", "kind" : "def"}, {"label" : "stylesheets_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Parent.stylesheets_=", "link" : "neko\/gui\/WriterArea.html#stylesheets_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "stylesheets", "tail" : "(): ObservableList[String]", "member" : "scalafx.scene.Parent.stylesheets", "link" : "neko\/gui\/WriterArea.html#stylesheets:javafx.collections.ObservableList[String]", "kind" : "def"}, {"label" : "needsLayout", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Parent.needsLayout", "link" : "neko\/gui\/WriterArea.html#needsLayout:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "viewOrder_", "tail" : "(value: Double): Unit", "member" : "scalafx.scene.Node.viewOrder_", "link" : "neko\/gui\/WriterArea.html#viewOrder_(value:Double):Unit", "kind" : "def"}, {"label" : "viewOrder", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.viewOrder", "link" : "neko\/gui\/WriterArea.html#viewOrder:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "eventHandlerDelegate", "tail" : "(): EventHandled", "member" : "scalafx.scene.Node.eventHandlerDelegate", "link" : "neko\/gui\/WriterArea.html#eventHandlerDelegate:Node.this.EventHandled", "kind" : "def"}, {"label" : "onTouchStationary_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchStationary_=", "link" : "neko\/gui\/WriterArea.html#onTouchStationary_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchStationary", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchStationary", "link" : "neko\/gui\/WriterArea.html#onTouchStationary:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchReleased_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchReleased_=", "link" : "neko\/gui\/WriterArea.html#onTouchReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchReleased", "link" : "neko\/gui\/WriterArea.html#onTouchReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchPressed_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchPressed_=", "link" : "neko\/gui\/WriterArea.html#onTouchPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchPressed", "link" : "neko\/gui\/WriterArea.html#onTouchPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onTouchMoved_=", "tail" : "(v: EventHandler[_ >: TouchEvent]): Unit", "member" : "scalafx.scene.Node.onTouchMoved_=", "link" : "neko\/gui\/WriterArea.html#onTouchMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]):Unit", "kind" : "def"}, {"label" : "onTouchMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: TouchEvent]]", "member" : "scalafx.scene.Node.onTouchMoved", "link" : "neko\/gui\/WriterArea.html#onTouchMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.TouchEvent]]", "kind" : "def"}, {"label" : "onZoomStarted_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomStarted_=", "link" : "neko\/gui\/WriterArea.html#onZoomStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomStarted", "link" : "neko\/gui\/WriterArea.html#onZoomStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoomFinished_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoomFinished_=", "link" : "neko\/gui\/WriterArea.html#onZoomFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoomFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoomFinished", "link" : "neko\/gui\/WriterArea.html#onZoomFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onZoom_=", "tail" : "(v: EventHandler[_ >: ZoomEvent]): Unit", "member" : "scalafx.scene.Node.onZoom_=", "link" : "neko\/gui\/WriterArea.html#onZoom_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]):Unit", "kind" : "def"}, {"label" : "onZoom", "tail" : "(): ObjectProperty[EventHandler[_ >: ZoomEvent]]", "member" : "scalafx.scene.Node.onZoom", "link" : "neko\/gui\/WriterArea.html#onZoom:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ZoomEvent]]", "kind" : "def"}, {"label" : "onSwipeRight_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeRight_=", "link" : "neko\/gui\/WriterArea.html#onSwipeRight_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeRight", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeRight", "link" : "neko\/gui\/WriterArea.html#onSwipeRight:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeUp_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeUp_=", "link" : "neko\/gui\/WriterArea.html#onSwipeUp_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeUp", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeUp", "link" : "neko\/gui\/WriterArea.html#onSwipeUp:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeLeft_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeLeft_=", "link" : "neko\/gui\/WriterArea.html#onSwipeLeft_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeLeft", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeLeft", "link" : "neko\/gui\/WriterArea.html#onSwipeLeft:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onSwipeDown_=", "tail" : "(v: EventHandler[_ >: SwipeEvent]): Unit", "member" : "scalafx.scene.Node.onSwipeDown_=", "link" : "neko\/gui\/WriterArea.html#onSwipeDown_=(v:javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]):Unit", "kind" : "def"}, {"label" : "onSwipeDown", "tail" : "(): ObjectProperty[EventHandler[_ >: SwipeEvent]]", "member" : "scalafx.scene.Node.onSwipeDown", "link" : "neko\/gui\/WriterArea.html#onSwipeDown:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.SwipeEvent]]", "kind" : "def"}, {"label" : "onScrollStarted_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollStarted_=", "link" : "neko\/gui\/WriterArea.html#onScrollStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollStarted", "link" : "neko\/gui\/WriterArea.html#onScrollStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onScrollFinished_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScrollFinished_=", "link" : "neko\/gui\/WriterArea.html#onScrollFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScrollFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScrollFinished", "link" : "neko\/gui\/WriterArea.html#onScrollFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onRotationStarted_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationStarted_=", "link" : "neko\/gui\/WriterArea.html#onRotationStarted_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationStarted", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationStarted", "link" : "neko\/gui\/WriterArea.html#onRotationStarted:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotationFinished_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotationFinished_=", "link" : "neko\/gui\/WriterArea.html#onRotationFinished_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotationFinished", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotationFinished", "link" : "neko\/gui\/WriterArea.html#onRotationFinished:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "onRotate_=", "tail" : "(v: EventHandler[_ >: RotateEvent]): Unit", "member" : "scalafx.scene.Node.onRotate_=", "link" : "neko\/gui\/WriterArea.html#onRotate_=(v:javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]):Unit", "kind" : "def"}, {"label" : "onRotate", "tail" : "(): ObjectProperty[EventHandler[_ >: RotateEvent]]", "member" : "scalafx.scene.Node.onRotate", "link" : "neko\/gui\/WriterArea.html#onRotate:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.RotateEvent]]", "kind" : "def"}, {"label" : "localToSceneTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToSceneTransform", "link" : "neko\/gui\/WriterArea.html#localToSceneTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "localToParentTransform", "tail" : "(): Transform", "member" : "scalafx.scene.Node.localToParentTransform", "link" : "neko\/gui\/WriterArea.html#localToParentTransform:scalafx.scene.transform.Transform", "kind" : "def"}, {"label" : "toFront", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toFront", "link" : "neko\/gui\/WriterArea.html#toFront():Unit", "kind" : "def"}, {"label" : "toBack", "tail" : "(): Unit", "member" : "scalafx.scene.Node.toBack", "link" : "neko\/gui\/WriterArea.html#toBack():Unit", "kind" : "def"}, {"label" : "startFullDrag", "tail" : "(): Unit", "member" : "scalafx.scene.Node.startFullDrag", "link" : "neko\/gui\/WriterArea.html#startFullDrag():Unit", "kind" : "def"}, {"label" : "startDragAndDrop", "tail" : "(transferModes: TransferMode*): Dragboard", "member" : "scalafx.scene.Node.startDragAndDrop", "link" : "neko\/gui\/WriterArea.html#startDragAndDrop(transferModes:javafx.scene.input.TransferMode*):javafx.scene.input.Dragboard", "kind" : "def"}, {"label" : "snapshot", "tail" : "(callback: (SnapshotResult) ⇒ Unit, params: SnapshotParameters, image: WritableImage): Unit", "member" : "scalafx.scene.Node.snapshot", "link" : "neko\/gui\/WriterArea.html#snapshot(callback:scalafx.scene.SnapshotResult=>Unit,params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):Unit", "kind" : "def"}, {"label" : "snapshot", "tail" : "(params: SnapshotParameters, image: WritableImage): WritableImage", "member" : "scalafx.scene.Node.snapshot", "link" : "neko\/gui\/WriterArea.html#snapshot(params:scalafx.scene.SnapshotParameters,image:scalafx.scene.image.WritableImage):scalafx.scene.image.WritableImage", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(scenePoint: Point2D): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "neko\/gui\/WriterArea.html#sceneToLocal(scenePoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneX: Double, sceneY: Double): Point2D", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "neko\/gui\/WriterArea.html#sceneToLocal(sceneX:Double,sceneY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "sceneToLocal", "tail" : "(sceneBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.sceneToLocal", "link" : "neko\/gui\/WriterArea.html#sceneToLocal(sceneBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "resizeRelocate", "tail" : "(x: Double, y: Double, width: Double, height: Double): Unit", "member" : "scalafx.scene.Node.resizeRelocate", "link" : "neko\/gui\/WriterArea.html#resizeRelocate(x:Double,y:Double,width:Double,height:Double):Unit", "kind" : "def"}, {"label" : "requestFocus", "tail" : "(): Unit", "member" : "scalafx.scene.Node.requestFocus", "link" : "neko\/gui\/WriterArea.html#requestFocus():Unit", "kind" : "def"}, {"label" : "relocate", "tail" : "(x: Double, y: Double): Unit", "member" : "scalafx.scene.Node.relocate", "link" : "neko\/gui\/WriterArea.html#relocate(x:Double,y:Double):Unit", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "neko\/gui\/WriterArea.html#parentToLocal(parentPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentX: Double, parentY: Double): Point2D", "member" : "scalafx.scene.Node.parentToLocal", "link" : "neko\/gui\/WriterArea.html#parentToLocal(parentX:Double,parentY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "parentToLocal", "tail" : "(parentBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.parentToLocal", "link" : "neko\/gui\/WriterArea.html#parentToLocal(parentBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "minWidth", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.minWidth", "link" : "neko\/gui\/WriterArea.html#minWidth(width:Double):Double", "kind" : "def"}, {"label" : "minHeight", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.minHeight", "link" : "neko\/gui\/WriterArea.html#minHeight(height:Double):Double", "kind" : "def"}, {"label" : "maxWidth", "tail" : "(width: Double): Double", "member" : "scalafx.scene.Node.maxWidth", "link" : "neko\/gui\/WriterArea.html#maxWidth(width:Double):Double", "kind" : "def"}, {"label" : "maxHeight", "tail" : "(height: Double): Double", "member" : "scalafx.scene.Node.maxHeight", "link" : "neko\/gui\/WriterArea.html#maxHeight(height:Double):Double", "kind" : "def"}, {"label" : "lookupAll", "tail" : "(selector: String): Set[Node]", "member" : "scalafx.scene.Node.lookupAll", "link" : "neko\/gui\/WriterArea.html#lookupAll(selector:String):java.util.Set[javafx.scene.Node]", "kind" : "def"}, {"label" : "lookup", "tail" : "(selector: String): Node", "member" : "scalafx.scene.Node.lookup", "link" : "neko\/gui\/WriterArea.html#lookup(selector:String):scalafx.scene.Node", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "neko\/gui\/WriterArea.html#localToScene(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToScene", "link" : "neko\/gui\/WriterArea.html#localToScene(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToScene", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToScene", "link" : "neko\/gui\/WriterArea.html#localToScene(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localPoint: Point2D): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "neko\/gui\/WriterArea.html#localToParent(localPoint:scalafx.geometry.Point2D):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localX: Double, localY: Double): Point2D", "member" : "scalafx.scene.Node.localToParent", "link" : "neko\/gui\/WriterArea.html#localToParent(localX:Double,localY:Double):javafx.geometry.Point2D", "kind" : "def"}, {"label" : "localToParent", "tail" : "(localBounds: Bounds): Bounds", "member" : "scalafx.scene.Node.localToParent", "link" : "neko\/gui\/WriterArea.html#localToParent(localBounds:scalafx.geometry.Bounds):javafx.geometry.Bounds", "kind" : "def"}, {"label" : "intersects", "tail" : "(localX: Double, localY: Double, localWidth: Double, localHeight: Double): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "neko\/gui\/WriterArea.html#intersects(localX:Double,localY:Double,localWidth:Double,localHeight:Double):Boolean", "kind" : "def"}, {"label" : "intersects", "tail" : "(localBounds: Bounds): Boolean", "member" : "scalafx.scene.Node.intersects", "link" : "neko\/gui\/WriterArea.html#intersects(localBounds:scalafx.geometry.Bounds):Boolean", "kind" : "def"}, {"label" : "baselineOffset", "tail" : "(): Double", "member" : "scalafx.scene.Node.baselineOffset", "link" : "neko\/gui\/WriterArea.html#baselineOffset:Double", "kind" : "def"}, {"label" : "fireEvent", "tail" : "(event: scalafx.event.Event): Unit", "member" : "scalafx.scene.Node.fireEvent", "link" : "neko\/gui\/WriterArea.html#fireEvent(event:scalafx.event.Event):Unit", "kind" : "def"}, {"label" : "contains", "tail" : "(localPoint: Point2D): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "neko\/gui\/WriterArea.html#contains(localPoint:scalafx.geometry.Point2D):Boolean", "kind" : "def"}, {"label" : "contains", "tail" : "(localX: Double, localY: Double): Boolean", "member" : "scalafx.scene.Node.contains", "link" : "neko\/gui\/WriterArea.html#contains(localX:Double,localY:Double):Boolean", "kind" : "def"}, {"label" : "autosize", "tail" : "(): Unit", "member" : "scalafx.scene.Node.autosize", "link" : "neko\/gui\/WriterArea.html#autosize():Unit", "kind" : "def"}, {"label" : "vgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.vgrow_=", "link" : "neko\/gui\/WriterArea.html#vgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "vgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.vgrow", "link" : "neko\/gui\/WriterArea.html#vgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "hgrow_=", "tail" : "(p: Priority): Unit", "member" : "scalafx.scene.Node.hgrow_=", "link" : "neko\/gui\/WriterArea.html#hgrow_=(p:scalafx.scene.layout.Priority):Unit", "kind" : "def"}, {"label" : "hgrow", "tail" : "(): Priority", "member" : "scalafx.scene.Node.hgrow", "link" : "neko\/gui\/WriterArea.html#hgrow:scalafx.scene.layout.Priority", "kind" : "def"}, {"label" : "margin_=", "tail" : "(i: Insets): Unit", "member" : "scalafx.scene.Node.margin_=", "link" : "neko\/gui\/WriterArea.html#margin_=(i:scalafx.geometry.Insets):Unit", "kind" : "def"}, {"label" : "margin", "tail" : "(): Insets", "member" : "scalafx.scene.Node.margin", "link" : "neko\/gui\/WriterArea.html#margin:scalafx.geometry.Insets", "kind" : "def"}, {"label" : "alignmentInParent_=", "tail" : "(p: Pos): Unit", "member" : "scalafx.scene.Node.alignmentInParent_=", "link" : "neko\/gui\/WriterArea.html#alignmentInParent_=(p:scalafx.geometry.Pos):Unit", "kind" : "def"}, {"label" : "alignmentInParent", "tail" : "(): Pos", "member" : "scalafx.scene.Node.alignmentInParent", "link" : "neko\/gui\/WriterArea.html#alignmentInParent:scalafx.geometry.Pos", "kind" : "def"}, {"label" : "visible_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.visible_=", "link" : "neko\/gui\/WriterArea.html#visible_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "visible", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.visible", "link" : "neko\/gui\/WriterArea.html#visible:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "userData_=", "tail" : "(v: AnyRef): Unit", "member" : "scalafx.scene.Node.userData_=", "link" : "neko\/gui\/WriterArea.html#userData_=(v:AnyRef):Unit", "kind" : "def"}, {"label" : "userData", "tail" : "(): AnyRef", "member" : "scalafx.scene.Node.userData", "link" : "neko\/gui\/WriterArea.html#userData:Object", "kind" : "def"}, {"label" : "translateZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateZ_=", "link" : "neko\/gui\/WriterArea.html#translateZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateZ", "link" : "neko\/gui\/WriterArea.html#translateZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateY_=", "link" : "neko\/gui\/WriterArea.html#translateY_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateY", "link" : "neko\/gui\/WriterArea.html#translateY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "translateX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.translateX_=", "link" : "neko\/gui\/WriterArea.html#translateX_=(v:Double):Unit", "kind" : "def"}, {"label" : "translateX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.translateX", "link" : "neko\/gui\/WriterArea.html#translateX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "transforms_=", "tail" : "(c: Iterable[Transform]): Unit", "member" : "scalafx.scene.Node.transforms_=", "link" : "neko\/gui\/WriterArea.html#transforms_=(c:Iterable[scalafx.scene.transform.Transform]):Unit", "kind" : "def"}, {"label" : "transforms", "tail" : "(): ObservableList[Transform]", "member" : "scalafx.scene.Node.transforms", "link" : "neko\/gui\/WriterArea.html#transforms:javafx.collections.ObservableList[javafx.scene.transform.Transform]", "kind" : "def"}, {"label" : "styleClass_=", "tail" : "(c: Iterable[String]): Unit", "member" : "scalafx.scene.Node.styleClass_=", "link" : "neko\/gui\/WriterArea.html#styleClass_=(c:Iterable[String]):Unit", "kind" : "def"}, {"label" : "style_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.style_=", "link" : "neko\/gui\/WriterArea.html#style_=(v:String):Unit", "kind" : "def"}, {"label" : "style", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.style", "link" : "neko\/gui\/WriterArea.html#style:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "scene", "tail" : "(): ReadOnlyObjectProperty[Scene]", "member" : "scalafx.scene.Node.scene", "link" : "neko\/gui\/WriterArea.html#scene:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Scene]", "kind" : "def"}, {"label" : "scaleZ_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleZ_=", "link" : "neko\/gui\/WriterArea.html#scaleZ_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleZ", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleZ", "link" : "neko\/gui\/WriterArea.html#scaleZ:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleY_=", "link" : "neko\/gui\/WriterArea.html#scaleY_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleY", "link" : "neko\/gui\/WriterArea.html#scaleY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "scaleX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.scaleX_=", "link" : "neko\/gui\/WriterArea.html#scaleX_=(v:Double):Unit", "kind" : "def"}, {"label" : "scaleX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.scaleX", "link" : "neko\/gui\/WriterArea.html#scaleX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "rotationAxis_=", "tail" : "(v: Point3D): Unit", "member" : "scalafx.scene.Node.rotationAxis_=", "link" : "neko\/gui\/WriterArea.html#rotationAxis_=(v:scalafx.geometry.Point3D):Unit", "kind" : "def"}, {"label" : "rotationAxis", "tail" : "(): ObjectProperty[Point3D]", "member" : "scalafx.scene.Node.rotationAxis", "link" : "neko\/gui\/WriterArea.html#rotationAxis:scalafx.beans.property.ObjectProperty[javafx.geometry.Point3D]", "kind" : "def"}, {"label" : "rotate_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.rotate_=", "link" : "neko\/gui\/WriterArea.html#rotate_=(v:Double):Unit", "kind" : "def"}, {"label" : "rotate", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.rotate", "link" : "neko\/gui\/WriterArea.html#rotate:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "pressed", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.pressed", "link" : "neko\/gui\/WriterArea.html#pressed:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "pickOnBounds_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.pickOnBounds_=", "link" : "neko\/gui\/WriterArea.html#pickOnBounds_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "pickOnBounds", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.pickOnBounds", "link" : "neko\/gui\/WriterArea.html#pickOnBounds:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "parent", "tail" : "(): ReadOnlyObjectProperty[Parent]", "member" : "scalafx.scene.Node.parent", "link" : "neko\/gui\/WriterArea.html#parent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.scene.Parent]", "kind" : "def"}, {"label" : "opacity_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.opacity_=", "link" : "neko\/gui\/WriterArea.html#opacity_=(v:Double):Unit", "kind" : "def"}, {"label" : "opacity", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.opacity", "link" : "neko\/gui\/WriterArea.html#opacity:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "onScroll_=", "tail" : "(v: EventHandler[_ >: ScrollEvent]): Unit", "member" : "scalafx.scene.Node.onScroll_=", "link" : "neko\/gui\/WriterArea.html#onScroll_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]):Unit", "kind" : "def"}, {"label" : "onScroll", "tail" : "(): ObjectProperty[EventHandler[_ >: ScrollEvent]]", "member" : "scalafx.scene.Node.onScroll", "link" : "neko\/gui\/WriterArea.html#onScroll:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ScrollEvent]]", "kind" : "def"}, {"label" : "onMouseReleased_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseReleased_=", "link" : "neko\/gui\/WriterArea.html#onMouseReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseReleased", "link" : "neko\/gui\/WriterArea.html#onMouseReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMousePressed_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMousePressed_=", "link" : "neko\/gui\/WriterArea.html#onMousePressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMousePressed", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMousePressed", "link" : "neko\/gui\/WriterArea.html#onMousePressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseMoved_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseMoved_=", "link" : "neko\/gui\/WriterArea.html#onMouseMoved_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseMoved", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseMoved", "link" : "neko\/gui\/WriterArea.html#onMouseMoved:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseExited_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseExited_=", "link" : "neko\/gui\/WriterArea.html#onMouseExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseExited", "link" : "neko\/gui\/WriterArea.html#onMouseExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseEntered_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseEntered_=", "link" : "neko\/gui\/WriterArea.html#onMouseEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseEntered", "link" : "neko\/gui\/WriterArea.html#onMouseEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseDragReleased_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragReleased_=", "link" : "neko\/gui\/WriterArea.html#onMouseDragReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragReleased", "link" : "neko\/gui\/WriterArea.html#onMouseDragReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragOver_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragOver_=", "link" : "neko\/gui\/WriterArea.html#onMouseDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragOver", "link" : "neko\/gui\/WriterArea.html#onMouseDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragExited_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragExited_=", "link" : "neko\/gui\/WriterArea.html#onMouseDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragExited", "link" : "neko\/gui\/WriterArea.html#onMouseDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragEntered_=", "tail" : "(v: EventHandler[_ >: MouseDragEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragEntered_=", "link" : "neko\/gui\/WriterArea.html#onMouseDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseDragEvent]]", "member" : "scalafx.scene.Node.onMouseDragEntered", "link" : "neko\/gui\/WriterArea.html#onMouseDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseDragEvent]]", "kind" : "def"}, {"label" : "onMouseDragged_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseDragged_=", "link" : "neko\/gui\/WriterArea.html#onMouseDragged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseDragged", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseDragged", "link" : "neko\/gui\/WriterArea.html#onMouseDragged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onMouseClicked_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onMouseClicked_=", "link" : "neko\/gui\/WriterArea.html#onMouseClicked_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onMouseClicked", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onMouseClicked", "link" : "neko\/gui\/WriterArea.html#onMouseClicked:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onKeyTyped_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyTyped_=", "link" : "neko\/gui\/WriterArea.html#onKeyTyped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyTyped", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyTyped", "link" : "neko\/gui\/WriterArea.html#onKeyTyped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyReleased_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyReleased_=", "link" : "neko\/gui\/WriterArea.html#onKeyReleased_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyReleased", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyReleased", "link" : "neko\/gui\/WriterArea.html#onKeyReleased:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onKeyPressed_=", "tail" : "(v: EventHandler[_ >: KeyEvent]): Unit", "member" : "scalafx.scene.Node.onKeyPressed_=", "link" : "neko\/gui\/WriterArea.html#onKeyPressed_=(v:javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]):Unit", "kind" : "def"}, {"label" : "onKeyPressed", "tail" : "(): ObjectProperty[EventHandler[_ >: KeyEvent]]", "member" : "scalafx.scene.Node.onKeyPressed", "link" : "neko\/gui\/WriterArea.html#onKeyPressed:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.KeyEvent]]", "kind" : "def"}, {"label" : "onInputMethodTextChanged_=", "tail" : "(v: EventHandler[_ >: InputMethodEvent]): Unit", "member" : "scalafx.scene.Node.onInputMethodTextChanged_=", "link" : "neko\/gui\/WriterArea.html#onInputMethodTextChanged_=(v:javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]):Unit", "kind" : "def"}, {"label" : "onInputMethodTextChanged", "tail" : "(): ObjectProperty[EventHandler[_ >: InputMethodEvent]]", "member" : "scalafx.scene.Node.onInputMethodTextChanged", "link" : "neko\/gui\/WriterArea.html#onInputMethodTextChanged:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.InputMethodEvent]]", "kind" : "def"}, {"label" : "onDragOver_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragOver_=", "link" : "neko\/gui\/WriterArea.html#onDragOver_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragOver", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragOver", "link" : "neko\/gui\/WriterArea.html#onDragOver:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragExited_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragExited_=", "link" : "neko\/gui\/WriterArea.html#onDragExited_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragExited", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragExited", "link" : "neko\/gui\/WriterArea.html#onDragExited:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragEntered_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragEntered_=", "link" : "neko\/gui\/WriterArea.html#onDragEntered_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragEntered", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragEntered", "link" : "neko\/gui\/WriterArea.html#onDragEntered:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDropped_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDropped_=", "link" : "neko\/gui\/WriterArea.html#onDragDropped_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDropped", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDropped", "link" : "neko\/gui\/WriterArea.html#onDragDropped:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDone_=", "tail" : "(v: EventHandler[_ >: DragEvent]): Unit", "member" : "scalafx.scene.Node.onDragDone_=", "link" : "neko\/gui\/WriterArea.html#onDragDone_=(v:javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]):Unit", "kind" : "def"}, {"label" : "onDragDone", "tail" : "(): ObjectProperty[EventHandler[_ >: DragEvent]]", "member" : "scalafx.scene.Node.onDragDone", "link" : "neko\/gui\/WriterArea.html#onDragDone:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.DragEvent]]", "kind" : "def"}, {"label" : "onDragDetected_=", "tail" : "(v: EventHandler[_ >: MouseEvent]): Unit", "member" : "scalafx.scene.Node.onDragDetected_=", "link" : "neko\/gui\/WriterArea.html#onDragDetected_=(v:javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]):Unit", "kind" : "def"}, {"label" : "onDragDetected", "tail" : "(): ObjectProperty[EventHandler[_ >: MouseEvent]]", "member" : "scalafx.scene.Node.onDragDetected", "link" : "neko\/gui\/WriterArea.html#onDragDetected:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.MouseEvent]]", "kind" : "def"}, {"label" : "onContextMenuRequested_=", "tail" : "(v: EventHandler[_ >: ContextMenuEvent]): Unit", "member" : "scalafx.scene.Node.onContextMenuRequested_=", "link" : "neko\/gui\/WriterArea.html#onContextMenuRequested_=(v:javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]):Unit", "kind" : "def"}, {"label" : "onContextMenuRequested", "tail" : "(): ObjectProperty[EventHandler[_ >: ContextMenuEvent]]", "member" : "scalafx.scene.Node.onContextMenuRequested", "link" : "neko\/gui\/WriterArea.html#onContextMenuRequested:javafx.beans.property.ObjectProperty[javafx.event.EventHandler[_>:javafx.scene.input.ContextMenuEvent]]", "kind" : "def"}, {"label" : "effectiveNodeOrientation", "tail" : "(): ReadOnlyObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.effectiveNodeOrientation", "link" : "neko\/gui\/WriterArea.html#effectiveNodeOrientation:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "nodeOrientation_=", "tail" : "(v: NodeOrientation): Unit", "member" : "scalafx.scene.Node.nodeOrientation_=", "link" : "neko\/gui\/WriterArea.html#nodeOrientation_=(v:scalafx.geometry.NodeOrientation):Unit", "kind" : "def"}, {"label" : "nodeOrientation", "tail" : "(): ObjectProperty[NodeOrientation]", "member" : "scalafx.scene.Node.nodeOrientation", "link" : "neko\/gui\/WriterArea.html#nodeOrientation:scalafx.beans.property.ObjectProperty[javafx.geometry.NodeOrientation]", "kind" : "def"}, {"label" : "mouseTransparent_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.mouseTransparent_=", "link" : "neko\/gui\/WriterArea.html#mouseTransparent_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "mouseTransparent", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.mouseTransparent", "link" : "neko\/gui\/WriterArea.html#mouseTransparent:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "managed_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.managed_=", "link" : "neko\/gui\/WriterArea.html#managed_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "managed", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.managed", "link" : "neko\/gui\/WriterArea.html#managed:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "layoutY_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutY_=", "link" : "neko\/gui\/WriterArea.html#layoutY_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutY", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutY", "link" : "neko\/gui\/WriterArea.html#layoutY:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutX_=", "tail" : "(v: Double): Unit", "member" : "scalafx.scene.Node.layoutX_=", "link" : "neko\/gui\/WriterArea.html#layoutX_=(v:Double):Unit", "kind" : "def"}, {"label" : "layoutX", "tail" : "(): DoubleProperty", "member" : "scalafx.scene.Node.layoutX", "link" : "neko\/gui\/WriterArea.html#layoutX:scalafx.beans.property.DoubleProperty", "kind" : "def"}, {"label" : "layoutBounds", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.layoutBounds", "link" : "neko\/gui\/WriterArea.html#layoutBounds:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "inputMethodRequests_=", "tail" : "(v: InputMethodRequests): Unit", "member" : "scalafx.scene.Node.inputMethodRequests_=", "link" : "neko\/gui\/WriterArea.html#inputMethodRequests_=(v:javafx.scene.input.InputMethodRequests):Unit", "kind" : "def"}, {"label" : "inputMethodRequests", "tail" : "(): ObjectProperty[InputMethodRequests]", "member" : "scalafx.scene.Node.inputMethodRequests", "link" : "neko\/gui\/WriterArea.html#inputMethodRequests:scalafx.beans.property.ObjectProperty[javafx.scene.input.InputMethodRequests]", "kind" : "def"}, {"label" : "id_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.id_=", "link" : "neko\/gui\/WriterArea.html#id_=(v:String):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): StringProperty", "member" : "scalafx.scene.Node.id", "link" : "neko\/gui\/WriterArea.html#id:scalafx.beans.property.StringProperty", "kind" : "def"}, {"label" : "hover", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.hover", "link" : "neko\/gui\/WriterArea.html#hover:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "focusTraversable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.focusTraversable_=", "link" : "neko\/gui\/WriterArea.html#focusTraversable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "focusTraversable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.focusTraversable", "link" : "neko\/gui\/WriterArea.html#focusTraversable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "focused", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.focused", "link" : "neko\/gui\/WriterArea.html#focused:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "eventDispatcher_=", "tail" : "(v: EventDispatcher): Unit", "member" : "scalafx.scene.Node.eventDispatcher_=", "link" : "neko\/gui\/WriterArea.html#eventDispatcher_=(v:javafx.event.EventDispatcher):Unit", "kind" : "def"}, {"label" : "eventDispatcher", "tail" : "(): ObjectProperty[EventDispatcher]", "member" : "scalafx.scene.Node.eventDispatcher", "link" : "neko\/gui\/WriterArea.html#eventDispatcher:scalafx.beans.property.ObjectProperty[javafx.event.EventDispatcher]", "kind" : "def"}, {"label" : "effect_=", "tail" : "(v: Effect): Unit", "member" : "scalafx.scene.Node.effect_=", "link" : "neko\/gui\/WriterArea.html#effect_=(v:scalafx.scene.effect.Effect):Unit", "kind" : "def"}, {"label" : "effect", "tail" : "(): ObjectProperty[Effect]", "member" : "scalafx.scene.Node.effect", "link" : "neko\/gui\/WriterArea.html#effect:scalafx.beans.property.ObjectProperty[javafx.scene.effect.Effect]", "kind" : "def"}, {"label" : "disable_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.disable_=", "link" : "neko\/gui\/WriterArea.html#disable_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "disable", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.disable", "link" : "neko\/gui\/WriterArea.html#disable:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "disabled", "tail" : "(): ReadOnlyBooleanProperty", "member" : "scalafx.scene.Node.disabled", "link" : "neko\/gui\/WriterArea.html#disabled:scalafx.beans.property.ReadOnlyBooleanProperty", "kind" : "def"}, {"label" : "depthTest_=", "tail" : "(v: DepthTest): Unit", "member" : "scalafx.scene.Node.depthTest_=", "link" : "neko\/gui\/WriterArea.html#depthTest_=(v:scalafx.scene.DepthTest):Unit", "kind" : "def"}, {"label" : "depthTest", "tail" : "(): ObjectProperty[DepthTest]", "member" : "scalafx.scene.Node.depthTest", "link" : "neko\/gui\/WriterArea.html#depthTest:scalafx.beans.property.ObjectProperty[javafx.scene.DepthTest]", "kind" : "def"}, {"label" : "cursor_=", "tail" : "(v: Cursor): Unit", "member" : "scalafx.scene.Node.cursor_=", "link" : "neko\/gui\/WriterArea.html#cursor_=(v:scalafx.scene.Cursor):Unit", "kind" : "def"}, {"label" : "cursor", "tail" : "(): ObjectProperty[Cursor]", "member" : "scalafx.scene.Node.cursor", "link" : "neko\/gui\/WriterArea.html#cursor:scalafx.beans.property.ObjectProperty[javafx.scene.Cursor]", "kind" : "def"}, {"label" : "contentBias", "tail" : "(): Orientation", "member" : "scalafx.scene.Node.contentBias", "link" : "neko\/gui\/WriterArea.html#contentBias:scalafx.geometry.Orientation", "kind" : "def"}, {"label" : "clip_=", "tail" : "(v: Node): Unit", "member" : "scalafx.scene.Node.clip_=", "link" : "neko\/gui\/WriterArea.html#clip_=(v:scalafx.scene.Node):Unit", "kind" : "def"}, {"label" : "clip", "tail" : "(): ObjectProperty[Node]", "member" : "scalafx.scene.Node.clip", "link" : "neko\/gui\/WriterArea.html#clip:scalafx.beans.property.ObjectProperty[javafx.scene.Node]", "kind" : "def"}, {"label" : "cache_=", "tail" : "(v: Boolean): Unit", "member" : "scalafx.scene.Node.cache_=", "link" : "neko\/gui\/WriterArea.html#cache_=(v:Boolean):Unit", "kind" : "def"}, {"label" : "cache", "tail" : "(): BooleanProperty", "member" : "scalafx.scene.Node.cache", "link" : "neko\/gui\/WriterArea.html#cache:scalafx.beans.property.BooleanProperty", "kind" : "def"}, {"label" : "cacheHint_=", "tail" : "(v: CacheHint): Unit", "member" : "scalafx.scene.Node.cacheHint_=", "link" : "neko\/gui\/WriterArea.html#cacheHint_=(v:scalafx.scene.CacheHint):Unit", "kind" : "def"}, {"label" : "cacheHint", "tail" : "(): ObjectProperty[CacheHint]", "member" : "scalafx.scene.Node.cacheHint", "link" : "neko\/gui\/WriterArea.html#cacheHint:scalafx.beans.property.ObjectProperty[javafx.scene.CacheHint]", "kind" : "def"}, {"label" : "boundsInParent", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInParent", "link" : "neko\/gui\/WriterArea.html#boundsInParent:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "boundsInLocal", "tail" : "(): ReadOnlyObjectProperty[Bounds]", "member" : "scalafx.scene.Node.boundsInLocal", "link" : "neko\/gui\/WriterArea.html#boundsInLocal:scalafx.beans.property.ReadOnlyObjectProperty[javafx.geometry.Bounds]", "kind" : "def"}, {"label" : "blendMode_=", "tail" : "(v: BlendMode): Unit", "member" : "scalafx.scene.Node.blendMode_=", "link" : "neko\/gui\/WriterArea.html#blendMode_=(v:scalafx.scene.effect.BlendMode):Unit", "kind" : "def"}, {"label" : "blendMode", "tail" : "(): ObjectProperty[BlendMode]", "member" : "scalafx.scene.Node.blendMode", "link" : "neko\/gui\/WriterArea.html#blendMode:scalafx.beans.property.ObjectProperty[javafx.scene.effect.BlendMode]", "kind" : "def"}, {"label" : "accessibleRoleDescription_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleRoleDescription_=", "link" : "neko\/gui\/WriterArea.html#accessibleRoleDescription_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleRoleDescription", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleRoleDescription", "link" : "neko\/gui\/WriterArea.html#accessibleRoleDescription:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleRole_=", "tail" : "(v: AccessibleRole): Unit", "member" : "scalafx.scene.Node.accessibleRole_=", "link" : "neko\/gui\/WriterArea.html#accessibleRole_=(v:scalafx.scene.AccessibleRole):Unit", "kind" : "def"}, {"label" : "accessibleRole", "tail" : "(): ObjectProperty[AccessibleRole]", "member" : "scalafx.scene.Node.accessibleRole", "link" : "neko\/gui\/WriterArea.html#accessibleRole:scalafx.beans.property.ObjectProperty[javafx.scene.AccessibleRole]", "kind" : "def"}, {"label" : "accessibleHelp_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleHelp_=", "link" : "neko\/gui\/WriterArea.html#accessibleHelp_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleHelp", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleHelp", "link" : "neko\/gui\/WriterArea.html#accessibleHelp:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "accessibleText_=", "tail" : "(v: String): Unit", "member" : "scalafx.scene.Node.accessibleText_=", "link" : "neko\/gui\/WriterArea.html#accessibleText_=(v:String):Unit", "kind" : "def"}, {"label" : "accessibleText", "tail" : "(): ObjectProperty[String]", "member" : "scalafx.scene.Node.accessibleText", "link" : "neko\/gui\/WriterArea.html#accessibleText:scalafx.beans.property.ObjectProperty[String]", "kind" : "def"}, {"label" : "typeSelector", "tail" : "(): String", "member" : "scalafx.css.Styleable.typeSelector", "link" : "neko\/gui\/WriterArea.html#typeSelector:String", "kind" : "def"}, {"label" : "styleClass", "tail" : "(): ObservableBuffer[String]", "member" : "scalafx.css.Styleable.styleClass", "link" : "neko\/gui\/WriterArea.html#styleClass:scalafx.collections.ObservableBuffer[String]", "kind" : "def"}, {"label" : "styleableParent", "tail" : "(): Styleable", "member" : "scalafx.css.Styleable.styleableParent", "link" : "neko\/gui\/WriterArea.html#styleableParent:scalafx.css.Styleable", "kind" : "def"}, {"label" : "getStyle", "tail" : "(): String", "member" : "scalafx.css.Styleable.getStyle", "link" : "neko\/gui\/WriterArea.html#getStyle:String", "kind" : "def"}, {"label" : "pseudoClassStates", "tail" : "(): ObservableSet[PseudoClass]", "member" : "scalafx.css.Styleable.pseudoClassStates", "link" : "neko\/gui\/WriterArea.html#pseudoClassStates:scalafx.collections.ObservableSet[javafx.css.PseudoClass]", "kind" : "def"}, {"label" : "getId", "tail" : "(): String", "member" : "scalafx.css.Styleable.getId", "link" : "neko\/gui\/WriterArea.html#getId:String", "kind" : "def"}, {"label" : "cssMetaData", "tail" : "(): Seq[CssMetaData[_ <: Styleable, _]]", "member" : "scalafx.css.Styleable.cssMetaData", "link" : "neko\/gui\/WriterArea.html#cssMetaData:Seq[javafx.css.CssMetaData[_<:javafx.css.Styleable,_]]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scalafx.delegate.SFXDelegate.hashCode", "link" : "neko\/gui\/WriterArea.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(ref: Any): Boolean", "member" : "scalafx.delegate.SFXDelegate.equals", "link" : "neko\/gui\/WriterArea.html#equals(ref:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scalafx.delegate.SFXDelegate.toString", "link" : "neko\/gui\/WriterArea.html#toString():String", "kind" : "def"}, {"label" : "buildEventDispatchChain", "tail" : "(chain: EventDispatchChain): EventDispatchChain", "member" : "scalafx.event.EventHandlerDelegate.buildEventDispatchChain", "link" : "neko\/gui\/WriterArea.html#buildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain", "kind" : "def"}, {"label" : "removeEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventFilter", "link" : "neko\/gui\/WriterArea.html#removeEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "filterEvent", "tail" : "(eventType: EventType[J])(filter: FilterMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.filterEvent", "link" : "neko\/gui\/WriterArea.html#filterEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(filter:EventHandlerDelegate.this.FilterMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventFilter", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventFilter", "link" : "neko\/gui\/WriterArea.html#addEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "removeEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.removeEventHandler", "link" : "neko\/gui\/WriterArea.html#removeEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "handleEvent", "tail" : "(eventType: EventType[J])(handler: HandlerMagnet[J, S]): Subscription", "member" : "scalafx.event.EventHandlerDelegate.handleEvent", "link" : "neko\/gui\/WriterArea.html#handleEvent[J<:javafx.event.Event,S<:scalafx.event.Eventwithscalafx.delegate.SFXDelegate[J]](eventType:scalafx.event.EventType[J])(handler:EventHandlerDelegate.this.HandlerMagnet[J,S]):scalafx.event.subscriptions.Subscription", "kind" : "def"}, {"label" : "addEventHandler", "tail" : "(eventType: EventType[E], eventHandler: EventHandler[_ >: E]): Unit", "member" : "scalafx.event.EventHandlerDelegate.addEventHandler", "link" : "neko\/gui\/WriterArea.html#addEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_>:E]):Unit", "kind" : "def"}, {"label" : "EventHandled", "tail" : "", "member" : "scalafx.event.EventHandlerDelegate.EventHandled", "link" : "neko\/gui\/WriterArea.html#EventHandled=AnyRef{defaddEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventHandler[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defaddEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defremoveEventFilter[E<:javafx.event.Event](eventType:javafx.event.EventType[E],eventHandler:javafx.event.EventHandler[_]):Unit;defbuildEventDispatchChain(chain:javafx.event.EventDispatchChain):javafx.event.EventDispatchChain}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/gui\/WriterArea.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/gui\/WriterArea.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/gui\/WriterArea.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/gui\/WriterArea.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/gui\/WriterArea.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/gui\/WriterArea.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/gui\/WriterArea.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/WriterArea.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/WriterArea.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/gui\/WriterArea.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/gui\/WriterArea.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/gui\/WriterArea.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/gui\/WriterArea.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/gui\/WriterArea.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/gui\/WriterArea.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/gui\/WriterArea.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/gui\/WriterArea.html", "kind" : "class"}], "neko.kernel.sim" : [{"name" : "neko.kernel.sim.NekoSimSystem", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoSimSystem) ⇒ Boolean, msg: ⇒ Any): NekoSimSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoSimSystem) ⇒ Boolean): NekoSimSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NekoSimSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NekoSimSystem", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NekoSimSystem, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NekoSimSystem, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "createNetwork", "tail" : "(): Network", "member" : "neko.kernel.sim.NekoSimSystem.createNetwork", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#createNetwork():neko.network.Network", "kind" : "def"}, {"member" : "neko.kernel.sim.NekoSimSystem#<init>", "error" : "unsupported entity"}, {"label" : "newTimer", "tail" : "(): Timer", "member" : "neko.kernel.NekoSystem.newTimer", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#newTimer():neko.Timer", "kind" : "def"}, {"label" : "currentTime", "tail" : "(): Time", "member" : "neko.kernel.NekoSystem.currentTime", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#currentTime:neko.util.Time", "kind" : "def"}, {"label" : "startNetwork", "tail" : "(): Unit", "member" : "neko.kernel.NekoSystem.startNetwork", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#startNetwork():Unit", "kind" : "def"}, {"label" : "mainloop", "tail" : "(onFinish: (Time) ⇒ Unit): Unit", "member" : "neko.kernel.NekoSystem.mainloop", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#mainloop(onFinish:neko.util.Time=>Unit):Unit", "kind" : "def"}, {"label" : "processes", "tail" : ": Map[PID, NekoProcess]", "member" : "neko.kernel.NekoSystem.processes", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#processes:Map[neko.PID,neko.NekoProcess]", "kind" : "val"}, {"label" : "network", "tail" : ": Network", "member" : "neko.kernel.NekoSystem.network", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#network:neko.network.Network", "kind" : "val"}, {"label" : "processSet", "tail" : ": Set[PID]", "member" : "neko.kernel.NekoSystem.processSet", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#processSet:Set[neko.PID]", "kind" : "val"}, {"label" : "processIDs", "tail" : ": Seq[PID]", "member" : "neko.kernel.NekoSystem.processIDs", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#processIDs:Seq[neko.PID]", "kind" : "val"}, {"label" : "timer", "tail" : ": Timer", "member" : "neko.kernel.NekoSystem.timer", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#timer:neko.Timer", "kind" : "val"}, {"label" : "simulator", "tail" : ": Simulator", "member" : "neko.kernel.NekoSystem.simulator", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#simulator:neko.kernel.sim.Simulator", "kind" : "val"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "neko.kernel.NekoSystem.scheduler", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#scheduler:neko.kernel.Scheduler", "kind" : "val"}, {"label" : "activityManager", "tail" : ": ActivityManager", "member" : "neko.kernel.NekoSystem.activityManager", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#activityManager:neko.kernel.ActivityManager", "kind" : "val"}, {"label" : "processNum", "tail" : ": Int", "member" : "neko.kernel.NekoSystem.processNum", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#processNum:Int", "kind" : "val"}, {"label" : "executionContext", "tail" : ": ExecutionContext", "member" : "neko.kernel.NekoSystem.executionContext", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#executionContext:scala.concurrent.ExecutionContext", "kind" : "val"}, {"label" : "executorService", "tail" : ": ExecutorService", "member" : "neko.kernel.NekoSystem.executorService", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#executorService:java.util.concurrent.ExecutorService", "kind" : "val"}, {"label" : "config", "tail" : ": NekoConfig", "member" : "neko.kernel.NekoSystem.config", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#config:neko.config.NekoConfig", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/sim\/NekoSimSystem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/sim\/NekoSimSystem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/sim\/NekoSimSystem.html", "kind" : "class"}, {"name" : "neko.kernel.sim.Simulator", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/kernel\/sim\/Simulator.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/kernel\/sim\/Simulator.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Simulator) ⇒ Boolean, msg: ⇒ Any): Simulator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/Simulator.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Simulator) ⇒ Boolean): Simulator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/Simulator.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Simulator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/Simulator.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Simulator", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/kernel\/sim\/Simulator.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Simulator, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/kernel\/sim\/Simulator.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Simulator, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/kernel\/sim\/Simulator.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "advanceTime", "tail" : "(): Unit", "member" : "neko.kernel.sim.Simulator.advanceTime", "link" : "neko\/kernel\/sim\/Simulator.html#advanceTime():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "neko.kernel.sim.Simulator.run", "link" : "neko\/kernel\/sim\/Simulator.html#run():Unit", "kind" : "def"}, {"member" : "neko.kernel.sim.Simulator#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "neko\/kernel\/sim\/Simulator.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "cancel", "tail" : "(id: TaskID): Unit", "member" : "neko.Timer.cancel", "link" : "neko\/kernel\/sim\/Simulator.html#cancel(id:neko.TaskID):Unit", "kind" : "def"}, {"label" : "schedule", "tail" : "(task: Task): TaskID", "member" : "neko.Timer.schedule", "link" : "neko\/kernel\/sim\/Simulator.html#schedule(task:neko.kernel.Task):neko.TaskID", "kind" : "def"}, {"label" : "continueUntil", "tail" : "(cond: ⇒ Boolean): Boolean", "member" : "neko.Timer.continueUntil", "link" : "neko\/kernel\/sim\/Simulator.html#continueUntil(cond:=>Boolean):Boolean", "kind" : "final def"}, {"label" : "continueWhile", "tail" : "(cond: ⇒ Boolean): Boolean", "member" : "neko.Timer.continueWhile", "link" : "neko\/kernel\/sim\/Simulator.html#continueWhile(cond:=>Boolean):Boolean", "kind" : "final def"}, {"label" : "periodically", "tail" : "(delay: Time, period: Time)(action: (Time) ⇒ Boolean): TaskID", "member" : "neko.Timer.periodically", "link" : "neko\/kernel\/sim\/Simulator.html#periodically(delay:neko.util.Time,period:neko.util.Time)(action:neko.util.Time=>Boolean):neko.TaskID", "kind" : "def"}, {"label" : "periodically", "tail" : "(period: Time)(action: (Time) ⇒ Boolean): TaskID", "member" : "neko.Timer.periodically", "link" : "neko\/kernel\/sim\/Simulator.html#periodically(period:neko.util.Time)(action:neko.util.Time=>Boolean):neko.TaskID", "kind" : "def"}, {"label" : "scheduleAt", "tail" : "(time: Time)(action: (Time) ⇒ Unit): TaskID", "member" : "neko.Timer.scheduleAt", "link" : "neko\/kernel\/sim\/Simulator.html#scheduleAt(time:neko.util.Time)(action:neko.util.Time=>Unit):neko.TaskID", "kind" : "def"}, {"label" : "scheduleAfter", "tail" : "(delay: Time)(action: (Time) ⇒ Unit): TaskID", "member" : "neko.Timer.scheduleAfter", "link" : "neko\/kernel\/sim\/Simulator.html#scheduleAfter(delay:neko.util.Time)(action:neko.util.Time=>Unit):neko.TaskID", "kind" : "def"}, {"label" : "nonEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.Timer.nonEmptyBesideDaemons", "link" : "neko\/kernel\/sim\/Simulator.html#nonEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "isEmptyBesideDaemons", "tail" : "(): Boolean", "member" : "neko.Timer.isEmptyBesideDaemons", "link" : "neko\/kernel\/sim\/Simulator.html#isEmptyBesideDaemons:Boolean", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "neko.Timer.nonEmpty", "link" : "neko\/kernel\/sim\/Simulator.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "neko.Timer.isEmpty", "link" : "neko\/kernel\/sim\/Simulator.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "now", "tail" : "(): Time", "member" : "neko.Timer.now", "link" : "neko\/kernel\/sim\/Simulator.html#now:neko.util.Time", "kind" : "def"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "neko.Timer.scheduler", "link" : "neko\/kernel\/sim\/Simulator.html#scheduler:neko.kernel.Scheduler", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/kernel\/sim\/Simulator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/kernel\/sim\/Simulator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/kernel\/sim\/Simulator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/kernel\/sim\/Simulator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/kernel\/sim\/Simulator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/kernel\/sim\/Simulator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/kernel\/sim\/Simulator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/sim\/Simulator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/sim\/Simulator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/kernel\/sim\/Simulator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/kernel\/sim\/Simulator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/kernel\/sim\/Simulator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/kernel\/sim\/Simulator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/kernel\/sim\/Simulator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/kernel\/sim\/Simulator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/kernel\/sim\/Simulator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/kernel\/sim\/Simulator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/kernel\/sim\/Simulator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/kernel\/sim\/Simulator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/kernel\/sim\/Simulator.html", "kind" : "class"}], "neko.exceptions" : [{"name" : "neko.exceptions.ActivityAbortedError", "shortDescription" : "", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "neko\/exceptions\/ActivityAbortedError.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/exceptions\/ActivityAbortedError.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/exceptions\/ActivityAbortedError.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActivityAbortedError) ⇒ Boolean, msg: ⇒ Any): ActivityAbortedError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/ActivityAbortedError.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ActivityAbortedError) ⇒ Boolean): ActivityAbortedError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/ActivityAbortedError.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ActivityAbortedError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/ActivityAbortedError.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ActivityAbortedError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/ActivityAbortedError.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ActivityAbortedError, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/exceptions\/ActivityAbortedError.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ActivityAbortedError, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/exceptions\/ActivityAbortedError.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "neko.exceptions.ActivityAbortedError#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "neko\/exceptions\/ActivityAbortedError.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "neko\/exceptions\/ActivityAbortedError.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "neko\/exceptions\/ActivityAbortedError.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "neko\/exceptions\/ActivityAbortedError.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "neko\/exceptions\/ActivityAbortedError.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "neko\/exceptions\/ActivityAbortedError.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "neko\/exceptions\/ActivityAbortedError.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "neko\/exceptions\/ActivityAbortedError.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "neko\/exceptions\/ActivityAbortedError.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "neko\/exceptions\/ActivityAbortedError.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "neko\/exceptions\/ActivityAbortedError.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "neko\/exceptions\/ActivityAbortedError.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "neko\/exceptions\/ActivityAbortedError.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/exceptions\/ActivityAbortedError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/exceptions\/ActivityAbortedError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/exceptions\/ActivityAbortedError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/exceptions\/ActivityAbortedError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/exceptions\/ActivityAbortedError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/exceptions\/ActivityAbortedError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/exceptions\/ActivityAbortedError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/exceptions\/ActivityAbortedError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/exceptions\/ActivityAbortedError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/exceptions\/ActivityAbortedError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/exceptions\/ActivityAbortedError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/exceptions\/ActivityAbortedError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/exceptions\/ActivityAbortedError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/exceptions\/ActivityAbortedError.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/exceptions\/ActivityAbortedError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/exceptions\/ActivityAbortedError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/exceptions\/ActivityAbortedError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/exceptions\/ActivityAbortedError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/exceptions\/ActivityAbortedError.html", "kind" : "class"}, {"name" : "neko.exceptions.InitializationError", "shortDescription" : "", "members_class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "neko\/exceptions\/InitializationError.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/exceptions\/InitializationError.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/exceptions\/InitializationError.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InitializationError) ⇒ Boolean, msg: ⇒ Any): InitializationError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/InitializationError.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (InitializationError) ⇒ Boolean): InitializationError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/InitializationError.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): InitializationError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/InitializationError.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): InitializationError", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/exceptions\/InitializationError.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (InitializationError, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/exceptions\/InitializationError.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (InitializationError, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/exceptions\/InitializationError.html#->[B](y:B):(A,B)", "kind" : "def"}, {"member" : "neko.exceptions.InitializationError#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "neko\/exceptions\/InitializationError.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "neko\/exceptions\/InitializationError.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "neko\/exceptions\/InitializationError.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "neko\/exceptions\/InitializationError.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "neko\/exceptions\/InitializationError.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "neko\/exceptions\/InitializationError.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "neko\/exceptions\/InitializationError.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "neko\/exceptions\/InitializationError.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "neko\/exceptions\/InitializationError.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "neko\/exceptions\/InitializationError.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "neko\/exceptions\/InitializationError.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "neko\/exceptions\/InitializationError.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "neko\/exceptions\/InitializationError.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/exceptions\/InitializationError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/exceptions\/InitializationError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/exceptions\/InitializationError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/exceptions\/InitializationError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/exceptions\/InitializationError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/exceptions\/InitializationError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/exceptions\/InitializationError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/exceptions\/InitializationError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/exceptions\/InitializationError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/exceptions\/InitializationError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/exceptions\/InitializationError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/exceptions\/InitializationError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/exceptions\/InitializationError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/exceptions\/InitializationError.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/exceptions\/InitializationError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/exceptions\/InitializationError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/exceptions\/InitializationError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/exceptions\/InitializationError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/exceptions\/InitializationError.html", "kind" : "class"}], "neko.config" : [{"name" : "neko.config.CF", "shortDescription" : "", "object" : "neko\/config\/CF$.html", "members_object" : [{"label" : "LOG_LEVEL", "tail" : ": String", "member" : "neko.config.CF.LOG_LEVEL", "link" : "neko\/config\/CF$.html#LOG_LEVEL:String", "kind" : "val"}, {"label" : "LOG_HANDLERS", "tail" : ": String", "member" : "neko.config.CF.LOG_HANDLERS", "link" : "neko\/config\/CF$.html#LOG_HANDLERS:String", "kind" : "val"}, {"label" : "NETWORK_LAMBDA", "tail" : ": String", "member" : "neko.config.CF.NETWORK_LAMBDA", "link" : "neko\/config\/CF$.html#NETWORK_LAMBDA:String", "kind" : "val"}, {"label" : "NETWORK", "tail" : ": String", "member" : "neko.config.CF.NETWORK", "link" : "neko\/config\/CF$.html#NETWORK:String", "kind" : "val"}, {"label" : "PROCESS_INIT", "tail" : ": String", "member" : "neko.config.CF.PROCESS_INIT", "link" : "neko\/config\/CF$.html#PROCESS_INIT:String", "kind" : "val"}, {"label" : "PROCESS_NUM", "tail" : ": String", "member" : "neko.config.CF.PROCESS_NUM", "link" : "neko\/config\/CF$.html#PROCESS_NUM:String", "kind" : "val"}, {"label" : "SIMULATION", "tail" : ": String", "member" : "neko.config.CF.SIMULATION", "link" : "neko\/config\/CF$.html#SIMULATION:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/config\/CF$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/config\/CF$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/config\/CF$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/config\/CF$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/config\/CF$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/config\/CF$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/config\/CF$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/CF$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/CF$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/CF$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/config\/CF$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/config\/CF$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/config\/CF$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/config\/CF$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/config\/CF$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/config\/CF$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/config\/CF$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/config\/CF$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/config\/CF$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "neko.config.NekoConfig", "shortDescription" : "", "object" : "neko\/config\/NekoConfig$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "neko\/config\/NekoConfig.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "neko\/config\/NekoConfig.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoConfig) ⇒ Boolean, msg: ⇒ Any): NekoConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/config\/NekoConfig.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NekoConfig) ⇒ Boolean): NekoConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/config\/NekoConfig.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NekoConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/config\/NekoConfig.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NekoConfig", "member" : "scala.Predef.Ensuring.ensuring", "link" : "neko\/config\/NekoConfig.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NekoConfig, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "neko\/config\/NekoConfig.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NekoConfig, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "neko\/config\/NekoConfig.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "log", "tail" : "", "member" : "neko.config.NekoConfig.log", "link" : "neko\/config\/NekoConfig.html#log", "kind" : "object"}, {"label" : "sys", "tail" : ": SystemConf { val N: Int }", "member" : "neko.config.NekoConfig.sys", "link" : "neko\/config\/NekoConfig.html#sys:neko.config.NekoConfig.SystemConf{valN:Int}", "kind" : "val"}, {"label" : "process", "tail" : ": ProcessConf { ... \/* 2 definitions in type refinement *\/ }", "member" : "neko.config.NekoConfig.process", "link" : "neko\/config\/NekoConfig.html#process:neko.config.NekoConfig.ProcessConf{valinitializerName:String;valinitializer:scala.util.Try[neko.NekoProcessInitializer]}", "kind" : "val"}, {"label" : "network", "tail" : ": NetworkConf { ... \/* 4 definitions in type refinement *\/ }", "member" : "neko.config.NekoConfig.network", "link" : "neko\/config\/NekoConfig.html#network:neko.config.NekoConfig.NetworkConf{valclassName:String;valclazz:scala.util.Try[Class[_<:neko.network.Network]];vallambda:Double;valtopology:neko.topology.TopologyFactory}", "kind" : "val"}, {"label" : "isSimulation", "tail" : ": Boolean", "member" : "neko.config.NekoConfig.isSimulation", "link" : "neko\/config\/NekoConfig.html#isSimulation:Boolean", "kind" : "val"}, {"member" : "neko.config.NekoConfig#<init>", "error" : "unsupported entity"}, {"label" : "tracer", "tail" : ": EventTracer", "member" : "neko.config.NekoConfig.tracer", "link" : "neko\/config\/NekoConfig.html#tracer:neko.trace.EventTracer", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/config\/NekoConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/config\/NekoConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/config\/NekoConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/config\/NekoConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/config\/NekoConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/config\/NekoConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/config\/NekoConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/NekoConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/NekoConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/NekoConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/config\/NekoConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/config\/NekoConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/config\/NekoConfig.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/config\/NekoConfig.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/config\/NekoConfig.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/config\/NekoConfig.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/config\/NekoConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/config\/NekoConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/config\/NekoConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ProcessConf", "tail" : "", "member" : "neko.config.NekoConfig.ProcessConf", "link" : "neko\/config\/NekoConfig$.html#ProcessConfextendsAnyRef", "kind" : "trait"}, {"label" : "NetworkConf", "tail" : "", "member" : "neko.config.NekoConfig.NetworkConf", "link" : "neko\/config\/NekoConfig$.html#NetworkConfextendsAnyRef", "kind" : "trait"}, {"label" : "SystemConf", "tail" : "", "member" : "neko.config.NekoConfig.SystemConf", "link" : "neko\/config\/NekoConfig$.html#SystemConfextendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(config: Config, init: ProcessInitializer, topo: Topology): NekoConfig", "member" : "neko.config.NekoConfig.apply", "link" : "neko\/config\/NekoConfig$.html#apply(config:com.typesafe.config.Config,init:neko.ProcessInitializer,topo:neko.topology.Topology):neko.config.NekoConfig", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config, init: ProcessInitializer, topo: Topology, tracer: EventTracer): NekoConfig", "member" : "neko.config.NekoConfig.apply", "link" : "neko\/config\/NekoConfig$.html#apply(config:com.typesafe.config.Config,init:neko.ProcessInitializer,topo:neko.topology.Topology,tracer:neko.trace.EventTracer):neko.config.NekoConfig", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config, topologyDescriptor: TopologyFactory): NekoConfig", "member" : "neko.config.NekoConfig.apply", "link" : "neko\/config\/NekoConfig$.html#apply(config:com.typesafe.config.Config,topologyDescriptor:neko.topology.TopologyFactory):neko.config.NekoConfig", "kind" : "def"}, {"label" : "apply", "tail" : "(config: Config, topologyDescriptor: TopologyFactory, tracer: EventTracer): NekoConfig", "member" : "neko.config.NekoConfig.apply", "link" : "neko\/config\/NekoConfig$.html#apply(config:com.typesafe.config.Config,topologyDescriptor:neko.topology.TopologyFactory,tracer:neko.trace.EventTracer):neko.config.NekoConfig", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "neko\/config\/NekoConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "neko\/config\/NekoConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "neko\/config\/NekoConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "neko\/config\/NekoConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "neko\/config\/NekoConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "neko\/config\/NekoConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "neko\/config\/NekoConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/NekoConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/NekoConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "neko\/config\/NekoConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "neko\/config\/NekoConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "neko\/config\/NekoConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "neko\/config\/NekoConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "neko\/config\/NekoConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "neko\/config\/NekoConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "neko\/config\/NekoConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "neko\/config\/NekoConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "neko\/config\/NekoConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "neko\/config\/NekoConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "neko\/config\/NekoConfig.html", "kind" : "class"}]};